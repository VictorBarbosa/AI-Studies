{"version":3,"file":"src_app_main_object-detected_object-detected_component_ts.js","mappings":"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","sources":["./node_modules/@tensorflow-models/coco-ssd/dist/coco-ssd.es2017.esm.min.js","./node_modules/@tensorflow/tfjs-converter/dist/data/compiled_api.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/execution_context.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/hash_table.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/model_analysis.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/resource_manager.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_array.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_list.js","./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js","./node_modules/@tensorflow/tfjs-converter/dist/flags.js","./node_modules/@tensorflow/tfjs-converter/dist/index.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/node_value_impl.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/arithmetic_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/control_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/creation_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/dynamic_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/evaluation_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/graph_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/hash_table_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/image_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/logical_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/matrices_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/reduction_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/slice_join_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/sparse_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/spectral_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/string_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/transformation_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/arithmetic.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/basic_math.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/control.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/convolution.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/creation.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/dynamic.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/evaluation.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/graph.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/hash_table.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/image.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/logical.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/matrices.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/normalization.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/reduction.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/slice_join.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/sparse.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/spectral.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/string.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/transformation.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_executor.js","./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","./node_modules/@tensorflow/tfjs-converter/dist/version.js","./src/app/main/object-detected/object-detected.component.ts","./src/app/main/object-detected/object-detected.component.html","./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n!function(e,a){\"object\"==typeof exports&&\"undefined\"!=typeof module?a(exports,require(\"@tensorflow/tfjs-converter\"),require(\"@tensorflow/tfjs-core\")):\"function\"==typeof define&&define.amd?define([\"exports\",\"@tensorflow/tfjs-converter\",\"@tensorflow/tfjs-core\"],a):a((e=e||self).cocoSsd=e.cocoSsd||{},e.tf,e.tf)}(this,(function(e,a,m){\"use strict\";const i={1:{name:\"/m/01g317\",id:1,displayName:\"person\"},2:{name:\"/m/0199g\",id:2,displayName:\"bicycle\"},3:{name:\"/m/0k4j\",id:3,displayName:\"car\"},4:{name:\"/m/04_sv\",id:4,displayName:\"motorcycle\"},5:{name:\"/m/05czz6l\",id:5,displayName:\"airplane\"},6:{name:\"/m/01bjv\",id:6,displayName:\"bus\"},7:{name:\"/m/07jdr\",id:7,displayName:\"train\"},8:{name:\"/m/07r04\",id:8,displayName:\"truck\"},9:{name:\"/m/019jd\",id:9,displayName:\"boat\"},10:{name:\"/m/015qff\",id:10,displayName:\"traffic light\"},11:{name:\"/m/01pns0\",id:11,displayName:\"fire hydrant\"},13:{name:\"/m/02pv19\",id:13,displayName:\"stop sign\"},14:{name:\"/m/015qbp\",id:14,displayName:\"parking meter\"},15:{name:\"/m/0cvnqh\",id:15,displayName:\"bench\"},16:{name:\"/m/015p6\",id:16,displayName:\"bird\"},17:{name:\"/m/01yrx\",id:17,displayName:\"cat\"},18:{name:\"/m/0bt9lr\",id:18,displayName:\"dog\"},19:{name:\"/m/03k3r\",id:19,displayName:\"horse\"},20:{name:\"/m/07bgp\",id:20,displayName:\"sheep\"},21:{name:\"/m/01xq0k1\",id:21,displayName:\"cow\"},22:{name:\"/m/0bwd_0j\",id:22,displayName:\"elephant\"},23:{name:\"/m/01dws\",id:23,displayName:\"bear\"},24:{name:\"/m/0898b\",id:24,displayName:\"zebra\"},25:{name:\"/m/03bk1\",id:25,displayName:\"giraffe\"},27:{name:\"/m/01940j\",id:27,displayName:\"backpack\"},28:{name:\"/m/0hnnb\",id:28,displayName:\"umbrella\"},31:{name:\"/m/080hkjn\",id:31,displayName:\"handbag\"},32:{name:\"/m/01rkbr\",id:32,displayName:\"tie\"},33:{name:\"/m/01s55n\",id:33,displayName:\"suitcase\"},34:{name:\"/m/02wmf\",id:34,displayName:\"frisbee\"},35:{name:\"/m/071p9\",id:35,displayName:\"skis\"},36:{name:\"/m/06__v\",id:36,displayName:\"snowboard\"},37:{name:\"/m/018xm\",id:37,displayName:\"sports ball\"},38:{name:\"/m/02zt3\",id:38,displayName:\"kite\"},39:{name:\"/m/03g8mr\",id:39,displayName:\"baseball bat\"},40:{name:\"/m/03grzl\",id:40,displayName:\"baseball glove\"},41:{name:\"/m/06_fw\",id:41,displayName:\"skateboard\"},42:{name:\"/m/019w40\",id:42,displayName:\"surfboard\"},43:{name:\"/m/0dv9c\",id:43,displayName:\"tennis racket\"},44:{name:\"/m/04dr76w\",id:44,displayName:\"bottle\"},46:{name:\"/m/09tvcd\",id:46,displayName:\"wine glass\"},47:{name:\"/m/08gqpm\",id:47,displayName:\"cup\"},48:{name:\"/m/0dt3t\",id:48,displayName:\"fork\"},49:{name:\"/m/04ctx\",id:49,displayName:\"knife\"},50:{name:\"/m/0cmx8\",id:50,displayName:\"spoon\"},51:{name:\"/m/04kkgm\",id:51,displayName:\"bowl\"},52:{name:\"/m/09qck\",id:52,displayName:\"banana\"},53:{name:\"/m/014j1m\",id:53,displayName:\"apple\"},54:{name:\"/m/0l515\",id:54,displayName:\"sandwich\"},55:{name:\"/m/0cyhj_\",id:55,displayName:\"orange\"},56:{name:\"/m/0hkxq\",id:56,displayName:\"broccoli\"},57:{name:\"/m/0fj52s\",id:57,displayName:\"carrot\"},58:{name:\"/m/01b9xk\",id:58,displayName:\"hot dog\"},59:{name:\"/m/0663v\",id:59,displayName:\"pizza\"},60:{name:\"/m/0jy4k\",id:60,displayName:\"donut\"},61:{name:\"/m/0fszt\",id:61,displayName:\"cake\"},62:{name:\"/m/01mzpv\",id:62,displayName:\"chair\"},63:{name:\"/m/02crq1\",id:63,displayName:\"couch\"},64:{name:\"/m/03fp41\",id:64,displayName:\"potted plant\"},65:{name:\"/m/03ssj5\",id:65,displayName:\"bed\"},67:{name:\"/m/04bcr3\",id:67,displayName:\"dining table\"},70:{name:\"/m/09g1w\",id:70,displayName:\"toilet\"},72:{name:\"/m/07c52\",id:72,displayName:\"tv\"},73:{name:\"/m/01c648\",id:73,displayName:\"laptop\"},74:{name:\"/m/020lf\",id:74,displayName:\"mouse\"},75:{name:\"/m/0qjjc\",id:75,displayName:\"remote\"},76:{name:\"/m/01m2v\",id:76,displayName:\"keyboard\"},77:{name:\"/m/050k8\",id:77,displayName:\"cell phone\"},78:{name:\"/m/0fx9l\",id:78,displayName:\"microwave\"},79:{name:\"/m/029bxz\",id:79,displayName:\"oven\"},80:{name:\"/m/01k6s3\",id:80,displayName:\"toaster\"},81:{name:\"/m/0130jx\",id:81,displayName:\"sink\"},82:{name:\"/m/040b_t\",id:82,displayName:\"refrigerator\"},84:{name:\"/m/0bt_c3\",id:84,displayName:\"book\"},85:{name:\"/m/01x3z\",id:85,displayName:\"clock\"},86:{name:\"/m/02s195\",id:86,displayName:\"vase\"},87:{name:\"/m/01lsmm\",id:87,displayName:\"scissors\"},88:{name:\"/m/0kmg4\",id:88,displayName:\"teddy bear\"},89:{name:\"/m/03wvsk\",id:89,displayName:\"hair drier\"},90:{name:\"/m/012xff\",id:90,displayName:\"toothbrush\"}};class d{constructor(e,a){this.modelPath=a||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return\"lite_mobilenet_v2\"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await a.loadGraphModel(this.modelPath);const e=m.zeros([1,300,300,3],\"int32\"),i=await this.model.executeAsync(e);await Promise.all(i.map((e=>e.data()))),i.map((e=>e.dispose())),e.dispose()}async infer(e,a,i){const d=m.tidy((()=>(e instanceof m.Tensor||(e=m.browser.fromPixels(e)),m.expandDims(e)))),s=d.shape[1],n=d.shape[2],l=await this.model.executeAsync(d),t=l[0].dataSync(),o=l[1].dataSync();d.dispose(),m.dispose(l);const[p,r]=this.calculateMaxScores(t,l[0].shape[1],l[0].shape[2]),c=m.getBackend();\"webgl\"===m.getBackend()&&m.setBackend(\"cpu\");const y=m.tidy((()=>{const e=m.tensor2d(o,[l[1].shape[1],l[1].shape[3]]);return m.image.nonMaxSuppression(e,p,a,i,i)})),N=y.dataSync();return y.dispose(),c!==m.getBackend()&&m.setBackend(c),this.buildDetectedObjects(n,s,o,p,N,r)}buildDetectedObjects(e,a,m,d,s,n){const l=s.length,t=[];for(let o=0;o<l;o++){const l=[];for(let e=0;e<4;e++)l[e]=m[4*s[o]+e];const p=l[0]*a,r=l[1]*e,c=l[2]*a,y=l[3]*e;l[0]=r,l[1]=p,l[2]=y-r,l[3]=c-p,t.push({bbox:l,class:i[n[s[o]]+1].displayName,score:d[s[o]]})}return t}calculateMaxScores(e,a,m){const i=[],d=[];for(let s=0;s<a;s++){let a=Number.MIN_VALUE,n=-1;for(let i=0;i<m;i++)e[s*m+i]>a&&(a=e[s*m+i],n=i);i[s]=a,d[s]=n}return[i,d]}async detect(e,a=20,m=.5){return this.infer(e,a,m)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=d,e.load=async function(e={}){if(null==m)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.\");const a=e.base||\"lite_mobilenet_v2\",i=e.modelUrl;if(-1===[\"mobilenet_v1\",\"mobilenet_v2\",\"lite_mobilenet_v2\"].indexOf(a))throw new Error(`ObjectDetection constructed with invalid base model ${a}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const s=new d(a,i);return await s.load(),s},e.version=\"2.2.2\",Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n/** DataType enum. */\nexport var DataType;\n(function (DataType) {\n    // Not a legal value for DataType.  Used to indicate a DataType field\n    // has not been set.\n    DataType[DataType[\"DT_INVALID\"] = 0] = \"DT_INVALID\";\n    // Data types that all computation devices are expected to be\n    // capable to support.\n    DataType[DataType[\"DT_FLOAT\"] = 1] = \"DT_FLOAT\";\n    DataType[DataType[\"DT_DOUBLE\"] = 2] = \"DT_DOUBLE\";\n    DataType[DataType[\"DT_INT32\"] = 3] = \"DT_INT32\";\n    DataType[DataType[\"DT_UINT8\"] = 4] = \"DT_UINT8\";\n    DataType[DataType[\"DT_INT16\"] = 5] = \"DT_INT16\";\n    DataType[DataType[\"DT_INT8\"] = 6] = \"DT_INT8\";\n    DataType[DataType[\"DT_STRING\"] = 7] = \"DT_STRING\";\n    DataType[DataType[\"DT_COMPLEX64\"] = 8] = \"DT_COMPLEX64\";\n    DataType[DataType[\"DT_INT64\"] = 9] = \"DT_INT64\";\n    DataType[DataType[\"DT_BOOL\"] = 10] = \"DT_BOOL\";\n    DataType[DataType[\"DT_QINT8\"] = 11] = \"DT_QINT8\";\n    DataType[DataType[\"DT_QUINT8\"] = 12] = \"DT_QUINT8\";\n    DataType[DataType[\"DT_QINT32\"] = 13] = \"DT_QINT32\";\n    DataType[DataType[\"DT_BFLOAT16\"] = 14] = \"DT_BFLOAT16\";\n    DataType[DataType[\"DT_QINT16\"] = 15] = \"DT_QINT16\";\n    DataType[DataType[\"DT_QUINT16\"] = 16] = \"DT_QUINT16\";\n    DataType[DataType[\"DT_UINT16\"] = 17] = \"DT_UINT16\";\n    DataType[DataType[\"DT_COMPLEX128\"] = 18] = \"DT_COMPLEX128\";\n    DataType[DataType[\"DT_HALF\"] = 19] = \"DT_HALF\";\n    DataType[DataType[\"DT_RESOURCE\"] = 20] = \"DT_RESOURCE\";\n    DataType[DataType[\"DT_VARIANT\"] = 21] = \"DT_VARIANT\";\n    DataType[DataType[\"DT_UINT32\"] = 22] = \"DT_UINT32\";\n    DataType[DataType[\"DT_UINT64\"] = 23] = \"DT_UINT64\";\n    // Do not use!  These are only for parameters.  Every enum above\n    // should have a corresponding value below (verified by types_test).\n    DataType[DataType[\"DT_FLOAT_REF\"] = 101] = \"DT_FLOAT_REF\";\n    DataType[DataType[\"DT_DOUBLE_REF\"] = 102] = \"DT_DOUBLE_REF\";\n    DataType[DataType[\"DT_INT32_REF\"] = 103] = \"DT_INT32_REF\";\n    DataType[DataType[\"DT_UINT8_REF\"] = 104] = \"DT_UINT8_REF\";\n    DataType[DataType[\"DT_INT16_REF\"] = 105] = \"DT_INT16_REF\";\n    DataType[DataType[\"DT_INT8_REF\"] = 106] = \"DT_INT8_REF\";\n    DataType[DataType[\"DT_STRING_REF\"] = 107] = \"DT_STRING_REF\";\n    DataType[DataType[\"DT_COMPLEX64_REF\"] = 108] = \"DT_COMPLEX64_REF\";\n    DataType[DataType[\"DT_INT64_REF\"] = 109] = \"DT_INT64_REF\";\n    DataType[DataType[\"DT_BOOL_REF\"] = 110] = \"DT_BOOL_REF\";\n    DataType[DataType[\"DT_QINT8_REF\"] = 111] = \"DT_QINT8_REF\";\n    DataType[DataType[\"DT_QUINT8_REF\"] = 112] = \"DT_QUINT8_REF\";\n    DataType[DataType[\"DT_QINT32_REF\"] = 113] = \"DT_QINT32_REF\";\n    DataType[DataType[\"DT_BFLOAT16_REF\"] = 114] = \"DT_BFLOAT16_REF\";\n    DataType[DataType[\"DT_QINT16_REF\"] = 115] = \"DT_QINT16_REF\";\n    DataType[DataType[\"DT_QUINT16_REF\"] = 116] = \"DT_QUINT16_REF\";\n    DataType[DataType[\"DT_UINT16_REF\"] = 117] = \"DT_UINT16_REF\";\n    DataType[DataType[\"DT_COMPLEX128_REF\"] = 118] = \"DT_COMPLEX128_REF\";\n    DataType[DataType[\"DT_HALF_REF\"] = 119] = \"DT_HALF_REF\";\n    DataType[DataType[\"DT_RESOURCE_REF\"] = 120] = \"DT_RESOURCE_REF\";\n    DataType[DataType[\"DT_VARIANT_REF\"] = 121] = \"DT_VARIANT_REF\";\n    DataType[DataType[\"DT_UINT32_REF\"] = 122] = \"DT_UINT32_REF\";\n    DataType[DataType[\"DT_UINT64_REF\"] = 123] = \"DT_UINT64_REF\";\n})(DataType || (DataType = {}));\nexport var SaverDef;\n(function (SaverDef) {\n    /** CheckpointFormatVersion enum. */\n    let CheckpointFormatVersion;\n    (function (CheckpointFormatVersion) {\n        CheckpointFormatVersion[CheckpointFormatVersion[\"LEGACY\"] = 0] = \"LEGACY\";\n        CheckpointFormatVersion[CheckpointFormatVersion[\"V1\"] = 1] = \"V1\";\n        CheckpointFormatVersion[CheckpointFormatVersion[\"V2\"] = 2] = \"V2\";\n    })(CheckpointFormatVersion = SaverDef.CheckpointFormatVersion || (SaverDef.CheckpointFormatVersion = {}));\n})(SaverDef || (SaverDef = {}));\n","/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n    constructor(weightMap = {}, tensorArrayMap = {}, tensorListMap = {}, functionMap = {}) {\n        this.weightMap = weightMap;\n        this.tensorArrayMap = tensorArrayMap;\n        this.tensorListMap = tensorListMap;\n        this.functionMap = functionMap;\n        this.rootContext = { id: 0, frameName: '', iterationId: 0 };\n        this.contexts = [this.rootContext];\n        this.lastId = 0;\n        this.generateCurrentContextIds();\n    }\n    newFrame(id, frameName) {\n        return { id, frameName, iterationId: 0 };\n    }\n    /**\n     * Set the current context\n     * @param contexts: ExecutionContextInfo[] the current path of execution\n     * frames\n     */\n    set currentContext(contexts) {\n        if (this.contexts !== contexts) {\n            this.contexts = contexts;\n            this.generateCurrentContextIds();\n        }\n    }\n    get currentContext() {\n        return this.contexts;\n    }\n    /**\n     * Returns the current context in string format.\n     */\n    get currentContextId() {\n        return this._currentContextIds[0];\n    }\n    /**\n     * Returns the current context and all parent contexts in string format.\n     * This allow access to the nodes in the current and parent frames.\n     */\n    get currentContextIds() {\n        return this._currentContextIds;\n    }\n    generateCurrentContextIds() {\n        const names = [];\n        for (let i = 0; i < this.contexts.length - 1; i++) {\n            const contexts = this.contexts.slice(0, this.contexts.length - i);\n            names.push(this.contextIdforContexts(contexts));\n        }\n        names.push('');\n        this._currentContextIds = names;\n    }\n    contextIdforContexts(contexts) {\n        return contexts ?\n            contexts\n                .map(context => (context.id === 0 && context.iterationId === 0) ?\n                '' :\n                `${context.frameName}-${context.iterationId}`)\n                .join('/') :\n            '';\n    }\n    /**\n     * Enter a new frame, a new context is pushed on the current context list.\n     * @param frameId new frame id\n     */\n    enterFrame(frameId) {\n        if (this.contexts) {\n            this.lastId++;\n            this.contexts = this.contexts.slice();\n            this.contexts.push(this.newFrame(this.lastId, frameId));\n            this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n        }\n    }\n    /**\n     * Exit the current frame, the last context is removed from the current\n     * context list.\n     */\n    exitFrame() {\n        if (this.contexts && this.contexts.length > 1) {\n            this.contexts = this.contexts.slice();\n            this.contexts.splice(-1);\n            this.currentContextIds.shift();\n        }\n        else {\n            throw new Error('Cannot exit frame, the context is empty');\n        }\n    }\n    /**\n     * Enter the next iteration of a loop, the iteration id of last context is\n     * increased.\n     */\n    nextIteration() {\n        if (this.contexts && this.contexts.length > 0) {\n            this.contexts = this.contexts.slice();\n            this.lastId++;\n            const context = Object.assign({}, this.contexts[this.contexts.length - 1]);\n            context.iterationId += 1;\n            context.id = this.lastId;\n            this.contexts.splice(-1, 1, context);\n            this._currentContextIds.splice(0, 1, this.contextIdforContexts(this.contexts));\n        }\n        else {\n            throw new Error('Cannot increase frame iteration, the context is empty');\n        }\n    }\n    getWeight(name) {\n        return this.weightMap[name];\n    }\n    addTensorArray(tensorArray) {\n        this.tensorArrayMap[tensorArray.id] = tensorArray;\n    }\n    getTensorArray(id) {\n        return this.tensorArrayMap[id];\n    }\n    addTensorList(tensorList) {\n        this.tensorListMap[tensorList.id] = tensorList;\n    }\n    getTensorList(id) {\n        return this.tensorListMap[id];\n    }\n    dispose(keepIds) {\n        for (const key in this.tensorArrayMap) {\n            this.tensorArrayMap[key].clearAndClose(keepIds);\n        }\n        for (const key in this.tensorListMap) {\n            this.tensorListMap[key].clearAndClose(keepIds);\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, tidy, util } from '@tensorflow/tfjs-core';\nimport { getNodeNameAndIndex, getParamValue, getTensor, getTensorsForCurrentContenxt, parseNodeName } from '../operations/executors/utils';\nimport { executeOp } from '../operations/operation_executor';\nimport { ExecutionContext } from './execution_context';\nimport { getExecutionSubgraph, getNodesInTopologicalOrder, isControlFlow } from './model_analysis';\nexport class GraphExecutor {\n    /**\n     *\n     * @param graph Graph the model or function graph to be executed.\n     * @param parent When building function exector you need to set the parent\n     * executor. Since the weights and function executor maps are set at parant\n     * level, that function executor can access the function maps and weight maps\n     * through the parent.\n     */\n    constructor(graph, parent) {\n        this.graph = graph;\n        this.parent = parent;\n        this.compiledMap = new Map();\n        this._weightMap = {};\n        this.SEPERATOR = ',';\n        this._functions = {};\n        this._functionExecutorMap = {};\n        this.intermediateTensors = {};\n        this.keepTensorForDebug = false;\n        this._outputs = graph.outputs;\n        this._inputs = graph.inputs;\n        this._initNodes = graph.initNodes;\n        this._signature = graph.signature;\n        this._functions = graph.functions;\n        // create sub-graph executors\n        if (graph.functions != null) {\n            Object.keys(graph.functions).forEach(name => {\n                this._functionExecutorMap[name] =\n                    new GraphExecutor(graph.functions[name], this);\n            });\n        }\n    }\n    get weightIds() {\n        return this.parent ? this.parent.weightIds : this._weightIds;\n    }\n    get functionExecutorMap() {\n        return this.parent ? this.parent.functionExecutorMap :\n            this._functionExecutorMap;\n    }\n    get weightMap() {\n        return this.parent ? this.parent.weightMap : this._weightMap;\n    }\n    set weightMap(weightMap) {\n        const weightIds = Object.keys(weightMap).map(key => weightMap[key].map(tensor => tensor.id));\n        this._weightIds = [].concat(...weightIds);\n        this._weightMap = weightMap;\n    }\n    /**\n     * Set `ResourceManager` shared by executors of a model.\n     * @param resourceManager: `ResourceManager` of the `GraphModel`.\n     */\n    set resourceManager(resourceManager) {\n        this._resourceManager = resourceManager;\n    }\n    get inputs() {\n        return this._inputs.map(node => {\n            return {\n                name: node.name,\n                shape: node.attrParams['shape'] ?\n                    node.attrParams['shape'].value :\n                    undefined,\n                dtype: node.attrParams['dtype'] ?\n                    node.attrParams['dtype'].value :\n                    undefined\n            };\n        });\n    }\n    get outputs() {\n        return this._outputs.map(node => {\n            return {\n                name: node.name,\n                shape: node.attrParams['shape'] ?\n                    node.attrParams['shape'].value :\n                    undefined,\n                dtype: node.attrParams['dtype'] ?\n                    node.attrParams['dtype'].value :\n                    undefined\n            };\n        });\n    }\n    get inputNodes() {\n        return this._inputs.map(node => node.signatureKey || node.name);\n    }\n    get outputNodes() {\n        return this._outputs.map((node) => {\n            const name = node.signatureKey || node.name;\n            return node.defaultOutput ? (`${name}:${node.defaultOutput}`) : name;\n        });\n    }\n    get functions() {\n        return Object.keys(this._functions).reduce((map, key) => {\n            map[key] = this._functions[key].signature;\n            return map;\n        }, {});\n    }\n    getCompilationKey(inputs, outputs) {\n        const sortedInputs = inputs.map(node => node.name).sort();\n        const sortedOutputs = outputs.map(node => node.name).sort();\n        return sortedInputs.join(this.SEPERATOR) + '--' +\n            sortedOutputs.join(this.SEPERATOR);\n    }\n    /**\n     * Compiles the inference graph and returns the minimal set of nodes that are\n     * required for execution, in the correct execution order.\n     */\n    compile(inputs, outputs) {\n        const executionInfo = getExecutionSubgraph(inputs, outputs, this.weightMap, this._initNodes);\n        const { missingInputs, dynamicNode, syncInputs } = executionInfo;\n        if (dynamicNode != null) {\n            throw new Error(`This execution contains the node '${dynamicNode.name}', which has ` +\n                `the dynamic op '${dynamicNode.op}'. Please use ` +\n                `model.executeAsync() instead. Alternatively, to avoid the ` +\n                `dynamic ops, specify the inputs [${syncInputs}]`);\n        }\n        if (missingInputs.length > 0) {\n            const outNames = outputs.map(n => n.name);\n            const inNames = Object.keys(inputs);\n            throw new Error(`Cannot compute the outputs [${outNames}] from the provided inputs ` +\n                `[${inNames}]. Missing the following inputs: [${missingInputs}]`);\n        }\n        return getNodesInTopologicalOrder(this.graph, this.weightMap, executionInfo);\n    }\n    /**\n     * Executes the inference for given input tensors.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs Optional. output node name from the Tensorflow model, if\n     * no outputs are specified, the default outputs of the model would be used.\n     * You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     */\n    execute(inputs, outputs) {\n        inputs = this.mapInputs(inputs);\n        const names = Object.keys(inputs).sort();\n        this.checkInputs(inputs);\n        this.checkInputShapeAndType(inputs);\n        outputs = this.mapOutputs(outputs);\n        this.checkOutputs(outputs);\n        const inputNodes = names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n        const outputNodeNames = outputs.map(name => parseNodeName(name)[0]);\n        let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n        this.resetIntermediateTensors();\n        // If no outputs are specified, then use the default outputs of the model.\n        if (outputNodes.length === 0) {\n            outputNodes = this._outputs;\n        }\n        const compilationKey = this.getCompilationKey(inputNodes, outputNodes);\n        // Do nothing if the compiled graph cache contains the input.\n        let orderedNodes = this.compiledMap.get(compilationKey);\n        if (orderedNodes == null) {\n            orderedNodes = this.compile(inputs, outputNodes);\n            this.compiledMap.set(compilationKey, orderedNodes);\n        }\n        const tensorArrayMap = {};\n        const tensorListMap = {};\n        return tidy(() => {\n            const context = new ExecutionContext(this.weightMap, tensorArrayMap, tensorListMap, this.functionExecutorMap);\n            const tensorsMap = Object.assign({}, this.weightMap);\n            Object.keys(inputs).forEach(name => {\n                const [nodeName, index] = parseNodeName(name);\n                const tensors = [];\n                tensors[index] = inputs[name];\n                tensorsMap[nodeName] = tensors;\n            });\n            const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n            const intermediateTensorConsumerCount = {};\n            for (let i = 0; i < orderedNodes.length; i++) {\n                const node = orderedNodes[i];\n                if (!tensorsMap[node.name]) {\n                    const tensors = executeOp(node, tensorsMap, context, this._resourceManager);\n                    if (util.isPromise(tensors)) {\n                        throw new Error(`The execution of the op '${node.op}' returned a promise. ` +\n                            `Please use model.executeAsync() instead.`);\n                    }\n                    tensorsMap[node.name] = tensors;\n                    this.checkTensorForDisposal(node.name, node, tensorsMap, context, tensorsToKeep, outputNodeNames, intermediateTensorConsumerCount);\n                }\n            }\n            // dispose the context for the root executor\n            if (this.parent == null) {\n                context.dispose(tensorsToKeep);\n            }\n            return outputs.map(name => getTensor(name, tensorsMap, context));\n        });\n    }\n    getFrozenTensorIds(tensorMap) {\n        const ids = [].concat.apply([], Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n        return new Set(ids);\n    }\n    checkTensorForDisposal(nodeName, node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount) {\n        // Skip output nodes and any control flow nodes, since its dependency is\n        // tricky to track correctly.\n        if (node.category === 'control' || outputNames.indexOf(nodeName) !== -1) {\n            return;\n        }\n        tensorMap[nodeName].forEach(tensor => {\n            if (tensor != null) {\n                intermediateTensorConsumerCount[tensor.id] =\n                    (intermediateTensorConsumerCount[tensor.id] || 0) +\n                        node.children.length;\n            }\n        });\n        node.inputs.forEach(input => {\n            // Skip any control flow nodes, since its dependency is tricky to track\n            // correctly.\n            if (input.category !== 'control') {\n                const tensors = getTensorsForCurrentContenxt(input.name, tensorMap, context);\n                if (tensors != null) {\n                    tensors.forEach(tensor => {\n                        if (tensor && !tensor.kept && !tensorsToKeep.has(tensor.id)) {\n                            const count = intermediateTensorConsumerCount[tensor.id];\n                            if (count === 1) {\n                                if (!this.keepTensorForDebug) {\n                                    tensor.dispose();\n                                }\n                                else {\n                                    const [nodeName, index] = getNodeNameAndIndex(node.name, context);\n                                    if (this.intermediateTensors[nodeName]) {\n                                        this.intermediateTensors[nodeName][index] = tensor;\n                                    }\n                                    else {\n                                        this.intermediateTensors[nodeName] = [];\n                                        this.intermediateTensors[nodeName][index] = tensor;\n                                    }\n                                }\n                                delete intermediateTensorConsumerCount[tensor.id];\n                            }\n                            else if (count != null) {\n                                // only intermediate nodes has count set, inputs and weights are\n                                // not.\n                                intermediateTensorConsumerCount[tensor.id]--;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n    /**\n     * Executes the inference for given input tensors in Async fashion.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs output node name from the Tensorflow model, if no outputs\n     * are specified, the default outputs of the model would be used. You can\n     * inspect intermediate nodes of the model by adding them to the outputs\n     * array.\n     */\n    async executeAsync(inputs, outputs) {\n        return this._executeAsync(inputs, outputs);\n    }\n    disposeIntermediateTensors() {\n        if (!this.intermediateTensors) {\n            return;\n        }\n        Object.keys(this.intermediateTensors)\n            .forEach(key => this.intermediateTensors[key].forEach(tensor => tensor.dispose()));\n        this.disposeTensorsMap();\n    }\n    disposeTensorsMap() {\n        if (!this.tensorsMap) {\n            return;\n        }\n        Object.keys(this.tensorsMap).forEach(key => {\n            const tensorArray = this.tensorsMap[key];\n            tensorArray.forEach(tensor => {\n                if (tensor && !tensor.kept && !tensor.isDisposed &&\n                    !this.keepIds.has(tensor.id)) {\n                    tensor.dispose();\n                }\n            });\n        });\n    }\n    getIntermediateTensors() {\n        return this.tensorsMap;\n    }\n    resetIntermediateTensors() {\n        for (const key in this.intermediateTensors) {\n            this.intermediateTensors[key].forEach(tensor => tensor.dispose());\n            delete this.intermediateTensors[key];\n        }\n    }\n    /**\n     * Executes the inference for given input tensors in Async fashion.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs Optional. output node name from the Tensorflow model,\n     * if no outputs are specified, the default outputs of the model would be\n     * used. You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     * @param isFunctionExecution Optional. Flag for executing a function.\n     * @param tensorArrayMap Optional, global TensorArray map by id. Used for\n     * function execution.\n     * @param tensorArrayMap Optinal global TensorList map by id. Used for\n     * function execution.\n     */\n    async _executeAsync(inputs, outputs, isFunctionExecution = false, tensorArrayMap = {}, tensorListMap = {}) {\n        if (!isFunctionExecution) {\n            inputs = this.mapInputs(inputs);\n            this.checkInputs(inputs);\n            this.checkInputShapeAndType(inputs);\n            outputs = this.mapOutputs(outputs);\n            this.checkOutputs(outputs);\n        }\n        // For model debug.\n        try {\n            this.keepTensorForDebug = env().getBool('KEEP_INTERMEDIATE_TENSORS');\n        }\n        catch (e) {\n            console.warn(e.message);\n        }\n        this.resetIntermediateTensors();\n        const context = new ExecutionContext(this.weightMap, tensorArrayMap, tensorListMap, this.functionExecutorMap);\n        // Graph with control flow op requires runtime evaluation of the execution\n        // order, while without control flow the execution order is pre-determined\n        // in the compile method.\n        this.tensorsMap = await this.executeWithControlFlow(inputs, context, outputs, isFunctionExecution);\n        const results = outputs.map(name => getTensor(name, this.tensorsMap, context));\n        // dispose all the intermediate tensors\n        const outputIds = results.map(t => t.id);\n        const inputIds = Object.keys(inputs).map(name => inputs[name].id);\n        this.keepIds =\n            new Set([...outputIds, ...inputIds, ...this.weightIds]);\n        if (!this.keepTensorForDebug) {\n            this.disposeTensorsMap();\n        }\n        // dispose the context for the root executor\n        if (this.parent == null) {\n            context.dispose(this.keepIds);\n        }\n        return results;\n    }\n    async executeFunctionAsync(inputs, tensorArrayMap, tensorListMap) {\n        const mappedInputs = inputs.reduce((map, tensor, index) => {\n            map[this.inputs[index].name] = tensor;\n            return map;\n        }, {});\n        return this._executeAsync(mappedInputs, this.outputNodes, true, tensorArrayMap, tensorListMap);\n    }\n    /**\n     * When there are control flow nodes in the graph, the graph execution use\n     * ExecutionContext to keep track of the frames and loop iterators.\n     * @param inputs placeholder tensors for the graph.\n     * @param context the execution context object for current execution.\n     * @param outputNames Optional. output node name from the Tensorflow model,\n     * if no outputs are specified, the default outputs of the model would be\n     * used. You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     * @param isFunctionExecution Flag for executing a function.\n     */\n    async executeWithControlFlow(inputs, context, outputNames, isFunctionExecution) {\n        const names = Object.keys(inputs);\n        const inputNodes = names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n        const outputNodeNames = outputNames.map(name => parseNodeName(name)[0]);\n        let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n        // If no outputs are specified, then use the default outputs of the model.\n        if (outputNodes.length === 0) {\n            outputNodes = this._outputs;\n        }\n        const { usedNodes, missingInputs, dynamicNode, syncInputs } = getExecutionSubgraph(inputs, outputNodes, this.weightMap, this._initNodes);\n        // First nodes to execute include inputNodes, weights, and initNodes.\n        const stack = [\n            ...inputNodes, ...this.graph.weights, ...(this._initNodes || [])\n        ].map(node => {\n            return { node, contexts: context.currentContext };\n        });\n        const tensorsMap = Object.assign({}, this.weightMap);\n        Object.keys(inputs).forEach(name => {\n            const [nodeName, index] = parseNodeName(name);\n            const tensors = [];\n            tensors[index] = inputs[name];\n            tensorsMap[nodeName] = tensors;\n        });\n        const intermediateTensorConsumerCount = {};\n        const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n        const added = {};\n        while (stack.length > 0) {\n            const promises = this.processStack(inputNodes, stack, context, tensorsMap, added, tensorsToKeep, outputNodeNames, intermediateTensorConsumerCount, usedNodes);\n            await Promise.all(promises);\n        }\n        if (dynamicNode == null && !isFunctionExecution) {\n            console.warn(`This model execution did not contain any nodes with control flow ` +\n                `or dynamic output shapes. You can use model.execute() instead.`);\n        }\n        const missingOutputs = outputNodes\n            .filter(node => !isControlFlow(node) &&\n            !getTensor(node.name, tensorsMap, context))\n            .map(node => node.name);\n        if (missingOutputs.length > 0) {\n            let alternativeMsg = '';\n            if (dynamicNode != null) {\n                alternativeMsg =\n                    `Alternatively, to avoid the dynamic ops, use model.execute() ` +\n                        `and specify the inputs [${syncInputs}]`;\n            }\n            throw new Error(`Cannot compute the outputs [${missingOutputs}] from the provided ` +\n                `inputs [${names}]. Consider providing the following inputs: ` +\n                `[${missingInputs}]. ${alternativeMsg}`);\n        }\n        return tensorsMap;\n    }\n    processStack(inputNodes, stack, context, tensorMap, added, tensorsToKeep, outputNames, intermediateTensorConsumerCount, usedNodes) {\n        const promises = [];\n        while (stack.length > 0) {\n            const item = stack.pop();\n            context.currentContext = item.contexts;\n            let nodeName = '';\n            // The tensor of the Enter op with isConstant set should be set\n            // in the parent scope, so it will be available as constant for the\n            // whole loop.\n            if (item.node.op === 'Enter' &&\n                getParamValue('isConstant', item.node, tensorMap, context)) {\n                [nodeName] = getNodeNameAndIndex(item.node.name, context);\n            }\n            // only process nodes that are not in the tensorMap yet, this include\n            // inputNodes and internal initNodes.\n            if (tensorMap[item.node.name] == null) {\n                const tensors = executeOp(item.node, tensorMap, context, this._resourceManager);\n                if (!nodeName) {\n                    [nodeName] = getNodeNameAndIndex(item.node.name, context);\n                }\n                const currentContext = context.currentContext;\n                if (util.isPromise(tensors)) {\n                    promises.push(tensors.then(t => {\n                        tensorMap[nodeName] = t;\n                        context.currentContext = currentContext;\n                        this.checkTensorForDisposal(nodeName, item.node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount);\n                        this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n                        return t;\n                    }));\n                }\n                else {\n                    tensorMap[nodeName] = tensors;\n                    this.checkTensorForDisposal(nodeName, item.node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount);\n                    this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n                }\n            }\n            else {\n                this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n            }\n        }\n        return promises;\n    }\n    processChildNodes(node, stack, context, tensorMap, added, usedNodes) {\n        node.children.forEach((childNode) => {\n            const [nodeName,] = getNodeNameAndIndex(childNode.name, context);\n            if (added[nodeName] || !usedNodes.has(childNode.name)) {\n                return;\n            }\n            // Merge op can be pushed if any of its inputs has value.\n            if (childNode.op === 'Merge') {\n                if (childNode.inputNames.some(name => {\n                    return !!getTensor(name, tensorMap, context);\n                })) {\n                    added[nodeName] = true;\n                    stack.push({ contexts: context.currentContext, node: childNode });\n                }\n            }\n            else // Otherwise all inputs must to have value.\n             if (childNode.inputNames.every(name => {\n                return !!getTensor(name, tensorMap, context);\n            })) {\n                added[nodeName] = true;\n                stack.push({ contexts: context.currentContext, node: childNode });\n            }\n        });\n    }\n    /**\n     * Releases the memory used by the weight tensors.\n     */\n    dispose() {\n        Object.keys(this.weightMap)\n            .forEach(key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n    }\n    checkInputShapeAndType(inputs) {\n        Object.keys(inputs).forEach(name => {\n            const input = inputs[name];\n            const [nodeName,] = parseNodeName(name);\n            const node = this.graph.nodes[nodeName];\n            if (node.attrParams['shape'] && node.attrParams['shape'].value) {\n                const shape = node.attrParams['shape'].value;\n                const match = shape.length === input.shape.length &&\n                    input.shape.every((dim, index) => shape[index] === -1 || shape[index] === dim);\n                util.assert(match, () => `The shape of dict['${node.name}'] provided in ` +\n                    `model.execute(dict) must be [${shape}], but was ` +\n                    `[${input.shape}]`);\n            }\n            if (node.attrParams['dtype'] && node.attrParams['dtype'].value) {\n                util.assert(input.dtype === node.attrParams['dtype'].value, () => `The dtype of dict['${node.name}'] provided in ` +\n                    `model.execute(dict) must be ` +\n                    `${node.attrParams['dtype'].value}, but was ${input.dtype}`);\n            }\n        });\n    }\n    mapInputs(inputs) {\n        const result = {};\n        for (const inputName in inputs) {\n            if (this._signature != null && this._signature.inputs != null &&\n                this._signature.inputs[inputName] != null) {\n                const tensor = this._signature.inputs[inputName];\n                result[tensor.name] = inputs[inputName];\n            }\n            else {\n                result[inputName] = inputs[inputName];\n            }\n        }\n        return result;\n    }\n    checkInputs(inputs) {\n        const notInGraph = Object.keys(inputs).filter(name => {\n            const [nodeName] = parseNodeName(name);\n            return this.graph.nodes[nodeName] == null;\n        });\n        if (notInGraph.length > 0) {\n            throw new Error(`The dict provided in model.execute(dict) has ` +\n                `keys: [${notInGraph}] that are not part of graph`);\n        }\n    }\n    mapOutputs(outputs) {\n        return outputs.map(name => {\n            if (this._signature != null && this._signature.outputs != null &&\n                this._signature.outputs[name] != null) {\n                const tensor = this._signature.outputs[name];\n                return tensor.name;\n            }\n            return name;\n        }, {});\n    }\n    checkOutputs(outputs) {\n        outputs.forEach(name => {\n            const [normalizedName] = parseNodeName(name);\n            if (!this.graph.nodes[normalizedName]) {\n                throw new Error(`The output '${name}' is not found in the graph`);\n            }\n        });\n    }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { io, Tensor, util } from '@tensorflow/tfjs-core';\nimport { OperationMapper } from '../operations/operation_mapper';\nimport { GraphExecutor } from './graph_executor';\nimport { ResourceManager } from './resource_manager';\nexport const TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nexport const DEFAULT_MODEL_NAME = 'model.json';\n/**\n * A `tf.GraphModel` is a directed, acyclic graph built from a\n * SavedModel GraphDef and allows inference execution.\n *\n * A `tf.GraphModel` can only be created by loading from a model converted from\n * a [TensorFlow SavedModel](https://www.tensorflow.org/guide/saved_model) using\n * the command line converter tool and loaded via `tf.loadGraphModel`.\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\nexport class GraphModel {\n    /**\n     * @param modelUrl url for the model, or an `io.IOHandler`.\n     * @param weightManifestUrl url for the weight file generated by\n     * scripts/convert.py script.\n     * @param requestOption options for Request, which allows to send credentials\n     * and custom headers.\n     * @param onProgress Optional, progress callback function, fired periodically\n     * before the load is completed.\n     */\n    constructor(modelUrl, loadOptions = {}, tfio = io) {\n        this.modelUrl = modelUrl;\n        this.loadOptions = loadOptions;\n        this.version = 'n/a';\n        this.io = tfio;\n        if (loadOptions == null) {\n            this.loadOptions = {};\n        }\n        this.resourceManager = new ResourceManager();\n    }\n    // Returns the version information for the tensorflow model GraphDef.\n    get modelVersion() {\n        return this.version;\n    }\n    get inputNodes() {\n        return this.executor.inputNodes;\n    }\n    get outputNodes() {\n        return this.executor.outputNodes;\n    }\n    get inputs() {\n        return this.executor.inputs;\n    }\n    get outputs() {\n        return this.executor.outputs;\n    }\n    get weights() {\n        return this.executor.weightMap;\n    }\n    get metadata() {\n        return this.artifacts.userDefinedMetadata;\n    }\n    get modelSignature() {\n        return this.signature;\n    }\n    get modelStructuredOutputKeys() {\n        return this.structuredOutputKeys;\n    }\n    findIOHandler() {\n        const path = this.modelUrl;\n        if (path.load != null) {\n            // Path is an IO Handler.\n            this.handler = path;\n        }\n        else if (this.loadOptions.requestInit != null) {\n            this.handler = this.io.browserHTTPRequest(path, this.loadOptions);\n        }\n        else {\n            const handlers = this.io.getLoadHandlers(path, this.loadOptions);\n            if (handlers.length === 0) {\n                // For backward compatibility: if no load handler can be found,\n                // assume it is a relative http path.\n                handlers.push(this.io.browserHTTPRequest(path, this.loadOptions));\n            }\n            else if (handlers.length > 1) {\n                throw new Error(`Found more than one (${handlers.length}) load handlers for ` +\n                    `URL '${[path]}'`);\n            }\n            this.handler = handlers[0];\n        }\n    }\n    /**\n     * Loads the model and weight files, construct the in memory weight map and\n     * compile the inference graph.\n     */\n    load() {\n        this.findIOHandler();\n        if (this.handler.load == null) {\n            throw new Error('Cannot proceed with model loading because the IOHandler provided ' +\n                'does not have the `load` method implemented.');\n        }\n        const loadResult = this.handler.load();\n        if (util.isPromise(loadResult)) {\n            return loadResult.then(artifacts => this.loadSync(artifacts));\n        }\n        return this.loadSync(loadResult);\n    }\n    /**\n     * Synchronously construct the in memory weight map and\n     * compile the inference graph. Also initialize hashtable if any.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n    loadSync(artifacts) {\n        this.artifacts = artifacts;\n        const graph = this.artifacts.modelTopology;\n        let signature = this.artifacts.signature;\n        if (this.artifacts.userDefinedMetadata != null) {\n            const metadata = this.artifacts.userDefinedMetadata;\n            if (metadata.signature != null) {\n                signature = metadata.signature;\n            }\n            if (metadata.structuredOutputKeys != null) {\n                this.structuredOutputKeys = metadata.structuredOutputKeys;\n            }\n        }\n        this.signature = signature;\n        this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n        const weightMap = this.io.decodeWeights(this.artifacts.weightData, this.artifacts.weightSpecs);\n        this.executor = new GraphExecutor(OperationMapper.Instance.transformGraph(graph, this.signature));\n        this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n        // Attach a model-level resourceManager to each executor to share resources,\n        // such as `HashTable`.\n        this.executor.resourceManager = this.resourceManager;\n        if (artifacts.modelInitializer != null &&\n            artifacts.modelInitializer.node != null) {\n            const initializer = OperationMapper.Instance.transformGraph(artifacts.modelInitializer);\n            this.initializer = new GraphExecutor(initializer);\n            this.initializer.weightMap = this.executor.weightMap;\n            // Attach a model-level resourceManager to the initializer, the\n            // hashTables created from when executing the initializer will be stored\n            // in the resourceManager.\n            this.initializer.resourceManager = this.resourceManager;\n            this.initializer.executeAsync({}, []);\n        }\n        return true;\n    }\n    /**\n     * Save the configuration and/or weights of the GraphModel.\n     *\n     * An `IOHandler` is an object that has a `save` method of the proper\n     * signature defined. The `save` method manages the storing or\n     * transmission of serialized data (\"artifacts\") that represent the\n     * model's topology and weights onto or via a specific medium, such as\n     * file downloads, local storage, IndexedDB in the web browser and HTTP\n     * requests to a server. TensorFlow.js provides `IOHandler`\n     * implementations for a number of frequently used saving mediums, such as\n     * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`\n     * for more details.\n     *\n     * This method also allows you to refer to certain types of `IOHandler`s\n     * as URL-like string shortcuts, such as 'localstorage://' and\n     * 'indexeddb://'.\n     *\n     * Example 1: Save `model`'s topology and weights to browser [local\n     * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n     * then load it back.\n     *\n     * ```js\n     * const modelUrl =\n     *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n     * const model = await tf.loadGraphModel(modelUrl);\n     * const zeros = tf.zeros([1, 224, 224, 3]);\n     * model.predict(zeros).print();\n     *\n     * const saveResults = await model.save('localstorage://my-model-1');\n     *\n     * const loadedModel = await tf.loadGraphModel('localstorage://my-model-1');\n     * console.log('Prediction from loaded model:');\n     * model.predict(zeros).print();\n     * ```\n     *\n     * @param handlerOrURL An instance of `IOHandler` or a URL-like,\n     * scheme-based string shortcut for `IOHandler`.\n     * @param config Options for saving the model.\n     * @returns A `Promise` of `SaveResult`, which summarizes the result of\n     * the saving, such as byte sizes of the saved artifacts for the model's\n     *   topology and weight values.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n    async save(handlerOrURL, config) {\n        if (typeof handlerOrURL === 'string') {\n            const handlers = this.io.getSaveHandlers(handlerOrURL);\n            if (handlers.length === 0) {\n                throw new Error(`Cannot find any save handlers for URL '${handlerOrURL}'`);\n            }\n            else if (handlers.length > 1) {\n                throw new Error(`Found more than one (${handlers.length}) save handlers for ` +\n                    `URL '${handlerOrURL}'`);\n            }\n            handlerOrURL = handlers[0];\n        }\n        if (handlerOrURL.save == null) {\n            throw new Error('GraphModel.save() cannot proceed because the IOHandler ' +\n                'provided does not have the `save` attribute defined.');\n        }\n        return handlerOrURL.save(this.artifacts);\n    }\n    /**\n     * Execute the inference for the input tensors.\n     *\n     * @param input The input tensors, when there is single input for the model,\n     * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n     * inputs params should be in either `tf.Tensor`[] if the input order is\n     * fixed, or otherwise NamedTensorMap format.\n     *\n     * For model with multiple inputs, we recommend you use NamedTensorMap as the\n     * input type, if you use `tf.Tensor`[], the order of the array needs to\n     * follow the\n     * order of inputNodes array. @see {@link GraphModel.inputNodes}\n     *\n     * You can also feed any intermediate nodes using the NamedTensorMap as the\n     * input type. For example, given the graph\n     *    InputNode => Intermediate => OutputNode,\n     * you can execute the subgraph Intermediate => OutputNode by calling\n     *    model.execute('IntermediateNode' : tf.tensor(...));\n     *\n     * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n     * state needs to be fed manually.\n     *\n     * For batch inference execution, the tensors for each input need to be\n     * concatenated together. For example with mobilenet, the required input shape\n     * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n     * If we are provide a batched data of 100 images, the input tensor should be\n     * in the shape of [100, 244, 244, 3].\n     *\n     * @param config Prediction configuration for specifying the batch size.\n     * Currently the batch size option is ignored for graph model.\n     *\n     * @returns Inference result tensors. If the model is converted and it\n     * originally had structured_outputs in tensorflow, then a NamedTensorMap\n     * will be returned matching the structured_outputs. If no structured_outputs\n     * are present, the output will be single `tf.Tensor` if the model has single\n     * output node, otherwise Tensor[].\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    predict(inputs, config) {\n        const outputTensors = this.execute(inputs, this.outputNodes);\n        if (this.structuredOutputKeys) {\n            const outputTensorsArray = outputTensors instanceof Tensor ? [outputTensors] : outputTensors;\n            const outputTensorMap = {};\n            outputTensorsArray.forEach((outputTensor, i) => outputTensorMap[this.structuredOutputKeys[i]] =\n                outputTensor);\n            return outputTensorMap;\n        }\n        return outputTensors;\n    }\n    normalizeInputs(inputs) {\n        if (!(inputs instanceof Tensor) && !Array.isArray(inputs)) {\n            // The input is already a NamedTensorMap.\n            return inputs;\n        }\n        inputs = Array.isArray(inputs) ? inputs : [inputs];\n        if (inputs.length !== this.inputNodes.length) {\n            throw new Error('Input tensor count mismatch,' +\n                `the graph model has ${this.inputNodes.length} placeholders, ` +\n                `while there are ${inputs.length} input tensors.`);\n        }\n        return this.inputNodes.reduce((map, inputName, i) => {\n            map[inputName] = inputs[i];\n            return map;\n        }, {});\n    }\n    normalizeOutputs(outputs) {\n        outputs = outputs || this.outputNodes;\n        return !Array.isArray(outputs) ? [outputs] : outputs;\n    }\n    /**\n     * Executes inference for the model for given input tensors.\n     * @param inputs tensor, tensor array or tensor map of the inputs for the\n     * model, keyed by the input node names.\n     * @param outputs output node name from the TensorFlow model, if no\n     * outputs are specified, the default outputs of the model would be used.\n     * You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     *\n     * @returns A single tensor if provided with a single output or no outputs\n     * are provided and there is only one default output, otherwise return a\n     * tensor array. The order of the tensor array is the same as the outputs\n     * if provided, otherwise the order of outputNodes attribute of the model.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    execute(inputs, outputs) {\n        inputs = this.normalizeInputs(inputs);\n        outputs = this.normalizeOutputs(outputs);\n        const result = this.executor.execute(inputs, outputs);\n        return result.length > 1 ? result : result[0];\n    }\n    /**\n     * Executes inference for the model for given input tensors in async\n     * fashion, use this method when your model contains control flow ops.\n     * @param inputs tensor, tensor array or tensor map of the inputs for the\n     * model, keyed by the input node names.\n     * @param outputs output node name from the TensorFlow model, if no outputs\n     * are specified, the default outputs of the model would be used. You can\n     * inspect intermediate nodes of the model by adding them to the outputs\n     * array.\n     *\n     * @returns A Promise of single tensor if provided with a single output or\n     * no outputs are provided and there is only one default output, otherwise\n     * return a tensor map.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    async executeAsync(inputs, outputs) {\n        inputs = this.normalizeInputs(inputs);\n        outputs = this.normalizeOutputs(outputs);\n        const result = await this.executor.executeAsync(inputs, outputs);\n        return result.length > 1 ? result : result[0];\n    }\n    /**\n     * Get intermediate tensors for model debugging mode (flag\n     * KEEP_INTERMEDIATE_TENSORS is true).\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    getIntermediateTensors() {\n        return this.executor.getIntermediateTensors();\n    }\n    /**\n     * Dispose intermediate tensors for model debugging mode (flag\n     * KEEP_INTERMEDIATE_TENSORS is true).\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    disposeIntermediateTensors() {\n        this.executor.disposeIntermediateTensors();\n    }\n    convertTensorMapToTensorsMap(map) {\n        return Object.keys(map).reduce((newMap, key) => {\n            newMap[key] = [map[key]];\n            return newMap;\n        }, {});\n    }\n    /**\n     * Releases the memory used by the weight tensors and resourceManager.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    dispose() {\n        this.executor.dispose();\n        if (this.initializer) {\n            this.initializer.dispose();\n        }\n        this.resourceManager.dispose();\n    }\n}\n/**\n * Load a graph model given a URL to the model definition.\n *\n * Example of loading MobileNetV2 from a URL and making a prediction with a\n * zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n * const model = await tf.loadGraphModel(modelUrl);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * Example of loading MobileNetV2 from a TF Hub URL and making a prediction\n * with a zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadGraphModel(modelUrl, {fromTFHub: true});\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n * @param modelUrl The url or an `io.IOHandler` that loads the model.\n * @param options Options for the HTTP request, which allows to send\n *     credentials\n *    and custom headers.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport async function loadGraphModel(modelUrl, options = {}, tfio = io) {\n    if (modelUrl == null) {\n        throw new Error('modelUrl in loadGraphModel() cannot be null. Please provide a url ' +\n            'or an IOHandler that loads the model');\n    }\n    if (options == null) {\n        options = {};\n    }\n    if (options.fromTFHub && typeof modelUrl === 'string') {\n        modelUrl = getTFHubUrl(modelUrl);\n    }\n    const model = new GraphModel(modelUrl, options, tfio);\n    await model.load();\n    return model;\n}\n/**\n * Load a graph model given a synchronous IO handler with a 'load' method.\n *\n * @param modelSource The `io.IOHandlerSync` that loads the model, or the\n *     `io.ModelArtifacts` that encode the model, or a tuple of\n *     `[io.ModelJSON, ArrayBuffer]` of which the first element encodes the\n *      model and the second contains the weights.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport function loadGraphModelSync(modelSource) {\n    if (modelSource == null) {\n        throw new Error('modelUrl in loadGraphModelSync() cannot be null. Please provide ' +\n            'model artifacts or an IOHandler that loads the model');\n    }\n    let ioHandler;\n    if (modelSource instanceof Array) {\n        const [modelJSON, weights] = modelSource;\n        if (!modelJSON) {\n            throw new Error('modelJSON must be the first element of the array');\n        }\n        if (!weights || !(weights instanceof ArrayBuffer)) {\n            throw new Error('An ArrayBuffer of weights must be the second element of'\n                + ' the array');\n        }\n        if (!('modelTopology' in modelJSON)) {\n            throw new Error('Model JSON is missing \\'modelTopology\\'');\n        }\n        if (!('weightsManifest' in modelJSON)) {\n            throw new Error('Model JSON is missing \\'weightsManifest\\'');\n        }\n        const weightSpecs = io.getWeightSpecs(modelJSON.weightsManifest);\n        const modelArtifacts = io.getModelArtifactsForJSONSync(modelJSON, weightSpecs, weights);\n        ioHandler = io.fromMemorySync(modelArtifacts);\n    }\n    else if ('load' in modelSource) {\n        // Then modelSource is already an IOHandlerSync.\n        ioHandler = modelSource;\n    }\n    else if ('modelTopology' in modelSource && 'weightSpecs' in modelSource\n        && 'weightData' in modelSource) {\n        // modelSource is of type ModelArtifacts.\n        ioHandler = io.fromMemorySync(modelSource);\n    }\n    else {\n        throw new Error('Unknown model format');\n    }\n    const model = new GraphModel(ioHandler);\n    model.load();\n    return model;\n}\nfunction getTFHubUrl(modelUrl) {\n    if (!modelUrl.endsWith('/')) {\n        modelUrl = (modelUrl) + '/';\n    }\n    return `${modelUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { keep, scalar, stack, tidy, unstack, util } from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n/**\n * Hashtable contains a set of tensors, which can be accessed by key.\n */\nexport class HashTable {\n    /**\n     * Constructor of HashTable. Creates a hash table.\n     *\n     * @param keyDType `dtype` of the table keys.\n     * @param valueDType `dtype` of the table values.\n     */\n    constructor(keyDType, valueDType) {\n        this.keyDType = keyDType;\n        this.valueDType = valueDType;\n        this.handle = scalar(0);\n        // tslint:disable-next-line: no-any\n        this.tensorMap = new Map();\n        keep(this.handle);\n    }\n    get id() {\n        return this.handle.id;\n    }\n    /**\n     * Dispose the tensors and handle and clear the hashtable.\n     */\n    clearAndClose() {\n        this.tensorMap.forEach(value => value.dispose());\n        this.tensorMap.clear();\n        this.handle.dispose();\n    }\n    /**\n     * The number of items in the hash table.\n     */\n    size() {\n        return this.tensorMap.size;\n    }\n    /**\n     * The number of items in the hash table as a rank-0 tensor.\n     */\n    tensorSize() {\n        return tfOps.scalar(this.size(), 'int32');\n    }\n    /**\n     * Replaces the contents of the table with the specified keys and values.\n     * @param keys Keys to store in the hashtable.\n     * @param values Values to store in the hashtable.\n     */\n    async import(keys, values) {\n        this.checkKeyAndValueTensor(keys, values);\n        // We only store the primitive values of the keys, this allows lookup\n        // to be O(1).\n        const $keys = await keys.data();\n        // Clear the hashTable before inserting new values.\n        this.tensorMap.forEach(value => value.dispose());\n        this.tensorMap.clear();\n        return tidy(() => {\n            const $values = unstack(values);\n            const keysLength = $keys.length;\n            const valuesLength = $values.length;\n            util.assert(keysLength === valuesLength, () => `The number of elements doesn't match, keys has ` +\n                `${keysLength} elements, the values has ${valuesLength} ` +\n                `elements.`);\n            for (let i = 0; i < keysLength; i++) {\n                const key = $keys[i];\n                const value = $values[i];\n                keep(value);\n                this.tensorMap.set(key, value);\n            }\n            return this.handle;\n        });\n    }\n    /**\n     * Looks up keys in a hash table, outputs the corresponding values.\n     *\n     * Performs batch lookups, for every element in the key tensor, `find`\n     * stacks the corresponding value into the return tensor.\n     *\n     * If an element is not present in the table, the given `defaultValue` is\n     * used.\n     *\n     * @param keys Keys to look up. Must have the same type as the keys of the\n     *     table.\n     * @param defaultValue The scalar `defaultValue` is the value output for keys\n     *     not present in the table. It must also be of the same type as the\n     *     table values.\n     */\n    async find(keys, defaultValue) {\n        this.checkKeyAndValueTensor(keys, defaultValue);\n        const $keys = await keys.data();\n        return tidy(() => {\n            const result = [];\n            for (let i = 0; i < $keys.length; i++) {\n                const key = $keys[i];\n                const value = this.findWithDefault(key, defaultValue);\n                result.push(value);\n            }\n            return stack(result);\n        });\n    }\n    // tslint:disable-next-line: no-any\n    findWithDefault(key, defaultValue) {\n        const result = this.tensorMap.get(key);\n        return result != null ? result : defaultValue;\n    }\n    checkKeyAndValueTensor(key, value) {\n        if (key.dtype !== this.keyDType) {\n            throw new Error(`Expect key dtype ${this.keyDType}, but got ` +\n                `${key.dtype}`);\n        }\n        if (value.dtype !== this.valueDType) {\n            throw new Error(`Expect value dtype ${this.valueDType}, but got ` +\n                `${value.dtype}`);\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { parseNodeName } from '../operations/executors/utils';\n/**\n * Given graph inputs and desired outputs, find the minimal set of nodes\n * to execute in order to compute the outputs. In addition return other useful\n * info such:\n * - Missing inputs needed to compute the output.\n * - Whether the subgraph contains dynamic ops (control flow, dynamic shape).\n * - Alternative inputs in order to avoid async (dynamic op) execution.\n */\nexport function getExecutionSubgraph(inputs, outputs, weightMap, initNodes) {\n    const usedNodes = new Set();\n    const missingInputs = [];\n    let dynamicNode = null;\n    let syncInputs = null;\n    // Start with the outputs, going backwards and find all the nodes that are\n    // needed to compute those outputs.\n    const seen = new Set();\n    const inputNodeNames = Object.keys(inputs).map(name => parseNodeName(name)[0]);\n    let initNodeNames = [];\n    if (initNodes != null) {\n        initNodeNames = initNodes.map(node => parseNodeName(node.name)[0]);\n    }\n    const frontier = [...outputs];\n    while (frontier.length > 0) {\n        const node = frontier.pop();\n        if (isControlFlow(node) || isDynamicShape(node) || isHashTable(node)) {\n            if (dynamicNode == null) {\n                dynamicNode = node;\n                syncInputs = dynamicNode.children.map(child => child.name)\n                    .filter(name => usedNodes.has(name));\n            }\n        }\n        usedNodes.add(node.name);\n        // Weights are dead end since we already have their values.\n        if (weightMap[node.name] != null) {\n            continue;\n        }\n        // This node is a dead end since it's one of the user-provided inputs.\n        if (inputNodeNames.indexOf(node.name) !== -1) {\n            continue;\n        }\n        // This node is a dead end since it doesn't have any inputs.\n        if (initNodeNames.indexOf(node.name) !== -1) {\n            continue;\n        }\n        if (node.inputs.length === 0) {\n            missingInputs.push(node.name);\n            continue;\n        }\n        node.inputs.forEach(input => {\n            // Don't add to the frontier if it is already there.\n            if (seen.has(input.name)) {\n                return;\n            }\n            seen.add(input.name);\n            frontier.push(input);\n        });\n    }\n    return { inputs, outputs, usedNodes, missingInputs, dynamicNode, syncInputs };\n}\n/**\n * Given the execution info, return a list of nodes in topological order that\n * need to be executed to compute the output.\n */\nexport function getNodesInTopologicalOrder(graph, weightMap, executionInfo) {\n    const { usedNodes, inputs } = executionInfo;\n    const frontier = [];\n    const inputNodes = Object.keys(inputs)\n        .map(name => parseNodeName(name)[0])\n        .map(name => graph.nodes[name]);\n    const initNodes = graph.initNodes;\n    inputNodes.forEach(input => {\n        if (usedNodes.has(input.name)) {\n            frontier.push(input);\n        }\n    });\n    graph.weights.forEach(weight => {\n        if (usedNodes.has(weight.name)) {\n            frontier.push(weight);\n        }\n    });\n    if (initNodes != null) {\n        initNodes.forEach(node => {\n            if (usedNodes.has(node.name)) {\n                frontier.push(node);\n            }\n        });\n    }\n    const seen = new Set();\n    const orderedNodes = [];\n    while (frontier.length > 0) {\n        const node = frontier.pop();\n        seen.add(node.name);\n        if (!weightMap[node.name]) {\n            orderedNodes.push(node);\n        }\n        node.children.forEach(child => {\n            if (!seen.has(child.name) && usedNodes.has(child.name) &&\n                child.inputs.every(input => seen.has(input.name))) {\n                frontier.push(child);\n            }\n        });\n    }\n    return orderedNodes;\n}\nconst CONTROL_FLOW_OPS = [\n    'Switch', 'Merge', 'Enter', 'Exit', 'NextIteration', 'StatelessIf',\n    'StatelessWhile', 'if', 'While'\n];\nconst DYNAMIC_SHAPE_OPS = [\n    'NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'NonMaxSuppressionV5', 'Where'\n];\nconst HASH_TABLE_OPS = [\n    'HashTable', 'HashTableV2', 'LookupTableImport', 'LookupTableImportV2',\n    'LookupTableFind', 'LookupTableFindV2', 'LookupTableSize', 'LookupTableSizeV2'\n];\nexport function isControlFlow(node) {\n    return CONTROL_FLOW_OPS.indexOf(node.op) >= 0;\n}\nexport function isDynamicShape(node) {\n    return DYNAMIC_SHAPE_OPS.indexOf(node.op) >= 0;\n}\nexport function isHashTable(node) {\n    return HASH_TABLE_OPS.indexOf(node.op) >= 0;\n}\n","/**\n * Contains global resources of a model.\n */\nexport class ResourceManager {\n    constructor(hashTableNameToHandle = {}, hashTableMap = {}) {\n        this.hashTableNameToHandle = hashTableNameToHandle;\n        this.hashTableMap = hashTableMap;\n    }\n    /**\n     * Register a `HashTable` in the resource manager.\n     *\n     * The `HashTable` can be retrieved by `resourceManager.getHashTableById`,\n     * where id is the table handle tensor's id.\n     *\n     * @param name Op node name that creates the `HashTable`.\n     * @param hashTable The `HashTable` to be added to resource manager.\n     */\n    addHashTable(name, hashTable) {\n        this.hashTableNameToHandle[name] = hashTable.handle;\n        this.hashTableMap[hashTable.id] = hashTable;\n    }\n    /**\n     * Get the table handle by node name.\n     * @param name Op node name that creates the `HashTable`. This name is also\n     *     used in the inputs list of lookup and import `HashTable` ops.\n     */\n    getHashTableHandleByName(name) {\n        return this.hashTableNameToHandle[name];\n    }\n    /**\n     * Get the actual `HashTable` by its handle tensor's id.\n     * @param id The id of the handle tensor.\n     */\n    getHashTableById(id) {\n        return this.hashTableMap[id];\n    }\n    /**\n     * Dispose `ResourceManager`, including its hashTables and tensors in them.\n     */\n    dispose() {\n        for (const key in this.hashTableMap) {\n            this.hashTableMap[key].clearAndClose();\n            delete this.hashTableMap[key];\n        }\n        for (const name in this.hashTableNameToHandle) {\n            this.hashTableNameToHandle[name].dispose();\n            delete this.hashTableNameToHandle[name];\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat, keep, reshape, scalar, slice, stack, tensor, tidy, unstack } from '@tensorflow/tfjs-core';\nimport { assertShapesMatchAllowUndefinedSize } from './tensor_utils';\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n    constructor(name, dtype, maxSize, elementShape, identicalElementShapes, dynamicSize, clearAfterRead) {\n        this.name = name;\n        this.dtype = dtype;\n        this.maxSize = maxSize;\n        this.elementShape = elementShape;\n        this.identicalElementShapes = identicalElementShapes;\n        this.dynamicSize = dynamicSize;\n        this.clearAfterRead = clearAfterRead;\n        this.tensors = [];\n        this.closed_ = false;\n        this.idTensor = scalar(0);\n        keep(this.idTensor);\n    }\n    get id() {\n        return this.idTensor.id;\n    }\n    get closed() {\n        return this.closed_;\n    }\n    /**\n     * Dispose the tensors and idTensor and mark the TensoryArray as closed.\n     */\n    clearAndClose(keepIds) {\n        this.tensors.forEach(tensor => {\n            if (keepIds == null || !keepIds.has(tensor.tensor.id)) {\n                tensor.tensor.dispose();\n            }\n        });\n        this.tensors = [];\n        this.closed_ = true;\n        this.idTensor.dispose();\n    }\n    size() {\n        return this.tensors.length;\n    }\n    /**\n     * Read the value at location index in the TensorArray.\n     * @param index Number the index to read from.\n     */\n    read(index) {\n        if (this.closed_) {\n            throw new Error(`TensorArray ${this.name} has already been closed.`);\n        }\n        if (index < 0 || index >= this.size()) {\n            throw new Error(`Tried to read from index ${index}, but array size is: ${this.size()}`);\n        }\n        const tensorWithState = this.tensors[index];\n        if (tensorWithState.cleared) {\n            throw new Error(`TensorArray ${this.name}: Could not read index ${index} twice because it was cleared after a previous read ` +\n                `(perhaps try setting clear_after_read = false?).`);\n        }\n        if (this.clearAfterRead) {\n            tensorWithState.cleared = true;\n        }\n        tensorWithState.read = true;\n        return tensorWithState.tensor;\n    }\n    /**\n     * Helper method to read multiple tensors from the specified indices.\n     */\n    readMany(indices) {\n        return indices.map(index => this.read(index));\n    }\n    /**\n     * Write value into the index of the TensorArray.\n     * @param index number the index to write to.\n     * @param tensor\n     */\n    write(index, tensor) {\n        if (this.closed_) {\n            throw new Error(`TensorArray ${this.name} has already been closed.`);\n        }\n        if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n            throw new Error(`Tried to write to index ${index}, but array is not resizeable and size is: ${this.maxSize}`);\n        }\n        const t = this.tensors[index] || {};\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n        }\n        // Set the shape for the first time write to unknow shape tensor array\n        if (this.size() === 0 &&\n            (this.elementShape == null || this.elementShape.length === 0)) {\n            this.elementShape = tensor.shape;\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensor.shape, `TensorArray ${this.name}: Could not write to TensorArray index ${index}.`);\n        if (t.read) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index}, because it has already been read.`);\n        }\n        if (t.written) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index}, because it has already been written.`);\n        }\n        t.tensor = tensor;\n        keep(tensor);\n        t.written = true;\n        this.tensors[index] = t;\n    }\n    /**\n     * Helper method to write multiple tensors to the specified indices.\n     */\n    writeMany(indices, tensors) {\n        if (indices.length !== tensors.length) {\n            throw new Error(`TensorArray ${this.name}: could not write multiple tensors,` +\n                `because the index size: ${indices.length} is not the same as tensors size: ${tensors.length}.`);\n        }\n        indices.forEach((i, index) => this.write(i, tensors[index]));\n    }\n    /**\n     * Return selected values in the TensorArray as a packed Tensor. All of\n     * selected values must have been written and their shapes must all match.\n     * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n     *    TensorArray is not dynamic, max_value=size(). If not specified returns\n     *    all tensors in the original order.\n     * @param [dtype]\n     */\n    gather(indices, dtype) {\n        if (!!dtype && dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${dtype}`);\n        }\n        if (!indices) {\n            indices = [];\n            for (let i = 0; i < this.size(); i++) {\n                indices.push(i);\n            }\n        }\n        else {\n            indices = indices.slice(0, this.size());\n        }\n        if (indices.length === 0) {\n            return tensor([], [0].concat(this.elementShape));\n        }\n        // Read all the PersistentTensors into a vector to keep track of\n        // their memory.\n        const tensors = this.readMany(indices);\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n        return stack(tensors, 0);\n    }\n    /**\n     * Return the values in the TensorArray as a concatenated Tensor.\n     */\n    concat(dtype) {\n        if (!!dtype && dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${dtype}`);\n        }\n        if (this.size() === 0) {\n            return tensor([], [0].concat(this.elementShape));\n        }\n        const indices = [];\n        for (let i = 0; i < this.size(); i++) {\n            indices.push(i);\n        }\n        // Collect all the tensors from the tensors array.\n        const tensors = this.readMany(indices);\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensors[0].shape, `TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n        return concat(tensors, 0);\n    }\n    /**\n     * Scatter the values of a Tensor in specific indices of a TensorArray.\n     * @param indices nummber[] values in [0, max_value). If the\n     *    TensorArray is not dynamic, max_value=size().\n     * @param tensor Tensor input tensor.\n     */\n    scatter(indices, tensor) {\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${tensor.dtype}`);\n        }\n        if (indices.length !== tensor.shape[0]) {\n            throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${indices.length} vs. ${tensor.shape[0]}`);\n        }\n        const maxIndex = Math.max(...indices);\n        if (!this.dynamicSize && maxIndex >= this.maxSize) {\n            throw new Error(`Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n        }\n        this.writeMany(indices, unstack(tensor, 0));\n    }\n    /**\n     * Split the values of a Tensor into the TensorArray.\n     * @param length number[] with the lengths to use when splitting value along\n     *    its first dimension.\n     * @param tensor Tensor, the tensor to split.\n     */\n    split(length, tensor) {\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${tensor.dtype}`);\n        }\n        let totalLength = 0;\n        const cumulativeLengths = length.map(len => {\n            totalLength += len;\n            return totalLength;\n        });\n        if (totalLength !== tensor.shape[0]) {\n            throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n        }\n        if (!this.dynamicSize && length.length !== this.maxSize) {\n            throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${length.length}), ` +\n                'and the TensorArray is not marked as dynamically resizeable');\n        }\n        const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n        const tensors = [];\n        tidy(() => {\n            tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n            for (let i = 0; i < length.length; ++i) {\n                const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n                const indices = [0, previousLength, 0];\n                const sizes = [1, length[i], elementPerRow];\n                tensors[i] = reshape(slice(tensor, indices, sizes), this.elementShape);\n            }\n            return tensors;\n        });\n        const indices = [];\n        for (let i = 0; i < length.length; i++) {\n            indices[i] = i;\n        }\n        this.writeMany(indices, tensors);\n    }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat, keep, reshape, scalar, slice, stack, tensor, tidy, unstack } from '@tensorflow/tfjs-core';\nimport { assertShapesMatchAllowUndefinedSize, inferElementShape, mergeElementShape } from './tensor_utils';\n/**\n * TensorList stores a container of `tf.Tensor` objects, which are accessible\n * via tensors field.\n *\n * In order to get a copy of the underlying list, use the copy method:\n * ```\n *    TensorList b = a.copy();\n *    b.tensors().pushBack(t);  // This does not modify a.tensors().\n * ```\n *\n * Note that this is not a deep copy: the memory locations of the underlying\n * tensors will still point to the same locations of the corresponding tensors\n * in the original.\n */\nexport class TensorList {\n    /**\n     *\n     * @param tensors list of tensors\n     * @param elementShape shape of each tensor, this can be a single number (any\n     * shape is allowed) or partial shape (dim = -1).\n     * @param elementDtype data type of each tensor\n     * @param maxNumElements The maximum allowed size of `tensors`. Defaults to -1\n     *   meaning that the size of `tensors` is unbounded.\n     */\n    constructor(tensors, elementShape, elementDtype, maxNumElements = -1) {\n        this.tensors = tensors;\n        this.elementShape = elementShape;\n        this.elementDtype = elementDtype;\n        if (tensors != null) {\n            tensors.forEach(tensor => {\n                if (elementDtype !== tensor.dtype) {\n                    throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${tensor.dtype}`);\n                }\n                assertShapesMatchAllowUndefinedSize(elementShape, tensor.shape, 'TensorList shape mismatch: ');\n                keep(tensor);\n            });\n        }\n        this.idTensor = scalar(0);\n        this.maxNumElements = maxNumElements;\n        keep(this.idTensor);\n    }\n    get id() {\n        return this.idTensor.id;\n    }\n    /**\n     * Get a new TensorList containing a copy of the underlying tensor container.\n     */\n    copy() {\n        return new TensorList([...this.tensors], this.elementShape, this.elementDtype);\n    }\n    /**\n     * Dispose the tensors and idTensor and clear the tensor list.\n     */\n    clearAndClose(keepIds) {\n        this.tensors.forEach(tensor => {\n            if (keepIds == null || !keepIds.has(tensor.id)) {\n                tensor.dispose();\n            }\n        });\n        this.tensors.length = 0;\n        this.idTensor.dispose();\n    }\n    /**\n     * The size of the tensors in the tensor list.\n     */\n    size() {\n        return this.tensors.length;\n    }\n    /**\n     * Return a tensor that stacks a list of rank-R tf.Tensors into one rank-(R+1)\n     * tf.Tensor.\n     * @param elementShape shape of each tensor\n     * @param elementDtype data type of each tensor\n     * @param numElements the number of elements to stack\n     */\n    stack(elementShape, elementDtype, numElements = -1) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (numElements !== -1 && this.tensors.length !== numElements) {\n            throw new Error(`Operation expected a list with ${numElements} elements but got a list with ${this.tensors.length} elements.`);\n        }\n        assertShapesMatchAllowUndefinedSize(elementShape, this.elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        return tidy(() => {\n            const reshapedTensors = this.tensors.map(tensor => reshape(tensor, outputElementShape));\n            return stack(reshapedTensors, 0);\n        });\n    }\n    /**\n     * Pop a tensor from the end of the list.\n     * @param elementShape shape of the tensor\n     * @param elementDtype data type of the tensor\n     */\n    popBack(elementShape, elementDtype) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (this.size() === 0) {\n            throw new Error('Trying to pop from an empty list.');\n        }\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        const tensor = this.tensors.pop();\n        tensor.kept = false;\n        assertShapesMatchAllowUndefinedSize(tensor.shape, elementShape, 'TensorList shape mismatch: ');\n        return reshape(tensor, outputElementShape);\n    }\n    /**\n     * Push a tensor to the end of the list.\n     * @param tensor Tensor to be pushed.\n     */\n    pushBack(tensor) {\n        if (tensor.dtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${this.elementDtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(tensor.shape, this.elementShape, 'TensorList shape mismatch: ');\n        if (this.maxNumElements === this.size()) {\n            throw new Error(`Trying to push element into a full list.`);\n        }\n        keep(tensor);\n        this.tensors.push(tensor);\n    }\n    /**\n     * Update the size of the list.\n     * @param size the new size of the list.\n     */\n    resize(size) {\n        if (size < 0) {\n            throw new Error(`TensorListResize expects size to be non-negative. Got: ${size}`);\n        }\n        if (this.maxNumElements !== -1 && size > this.maxNumElements) {\n            throw new Error(`TensorListResize input size ${size} is greater maxNumElement ${this.maxNumElements}.`);\n        }\n        const destTensorList = new TensorList([], this.elementShape, this.elementDtype, this.maxNumElements);\n        destTensorList.tensors.length = size;\n        for (let i = 0; i < Math.min(this.tensors.length, size); ++i) {\n            destTensorList.tensors[i] = this.tensors[i];\n        }\n        return destTensorList;\n    }\n    /**\n     * Retrieve the element at the provided index\n     * @param elementShape shape of the tensor\n     * @param elementDtype dtype of the tensor\n     * @param elementIndex index of the tensor\n     */\n    getItem(elementIndex, elementShape, elementDtype) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (elementIndex < 0 || elementIndex > this.tensors.length) {\n            throw new Error(`Trying to access element ${elementIndex} in a list with ${this.tensors.length} elements.`);\n        }\n        if (this.tensors[elementIndex] == null) {\n            throw new Error(`element at index ${elementIndex} is null.`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.tensors[elementIndex].shape, elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        return reshape(this.tensors[elementIndex], outputElementShape);\n    }\n    /**\n     * Set the tensor at the index\n     * @param elementIndex index of the tensor\n     * @param tensor the tensor to be inserted into the list\n     */\n    setItem(elementIndex, tensor) {\n        if (tensor.dtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${this.elementDtype}`);\n        }\n        if (elementIndex < 0 ||\n            this.maxNumElements !== -1 && elementIndex >= this.maxNumElements) {\n            throw new Error(`Trying to set element ${elementIndex} in a list with max ${this.maxNumElements} elements.`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensor.shape, 'TensorList shape mismatch: ');\n        keep(tensor);\n        // dispose the previous value if it is replacing.\n        if (this.tensors[elementIndex] != null) {\n            this.tensors[elementIndex].kept = false;\n        }\n        this.tensors[elementIndex] = tensor;\n    }\n    /**\n     * Return selected values in the TensorList as a stacked Tensor. All of\n     * selected values must have been written and their shapes must all match.\n     * @param indices indices of tensors to gather\n     * @param elementDtype output tensor dtype\n     * @param elementShape output tensor element shape\n     */\n    gather(indices, elementDtype, elementShape) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, elementShape, 'TensorList shape mismatch: ');\n        // When indices is greater than the size of the list, indices beyond the\n        // size of the list are ignored.\n        indices = indices.slice(0, this.size());\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        if (indices.length === 0) {\n            return tensor([], [0].concat(outputElementShape));\n        }\n        return tidy(() => {\n            const tensors = indices.map(i => reshape(this.tensors[i], outputElementShape));\n            return stack(tensors, 0);\n        });\n    }\n    /**\n     * Return the values in the TensorList as a concatenated Tensor.\n     * @param elementDtype output tensor dtype\n     * @param elementShape output tensor element shape\n     */\n    concat(elementDtype, elementShape) {\n        if (!!elementDtype && elementDtype !== this.elementDtype) {\n            throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${elementDtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        if (this.size() === 0) {\n            return tensor([], [0].concat(outputElementShape));\n        }\n        return tidy(() => {\n            const tensors = this.tensors.map(t => reshape(t, outputElementShape));\n            return concat(tensors, 0);\n        });\n    }\n}\n/**\n * Creates a TensorList which, when stacked, has the value of tensor.\n * @param tensor from tensor\n * @param elementShape output tensor element shape\n */\nexport function fromTensor(tensor, elementShape, elementDtype) {\n    const dtype = tensor.dtype;\n    if (tensor.shape.length < 1) {\n        throw new Error(`Tensor must be at least a vector, but saw shape: ${tensor.shape}`);\n    }\n    if (tensor.dtype !== elementDtype) {\n        throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${elementDtype}`);\n    }\n    const tensorElementShape = tensor.shape.slice(1);\n    assertShapesMatchAllowUndefinedSize(tensorElementShape, elementShape, 'TensorList shape mismatch: ');\n    const tensorList = unstack(tensor);\n    return new TensorList(tensorList, elementShape, dtype);\n}\n/**\n * Return a TensorList of the given size with empty elements.\n * @param elementShape the shape of the future elements of the list\n * @param elementDtype the desired type of elements in the list\n * @param numElements the number of elements to reserve\n * @param maxNumElements the maximum number of elements in th list\n */\nexport function reserve(elementShape, elementDtype, numElements, maxNumElements) {\n    return new TensorList([], elementShape, elementDtype, maxNumElements);\n}\n/**\n * Put tensors at specific indices of a stacked tensor into a TensorList.\n * @param indices list of indices on how to scatter the tensor.\n * @param tensor input tensor.\n * @param elementShape the shape of the future elements of the list\n * @param numElements the number of elements to scatter\n */\nexport function scatter(tensor, indices, elementShape, numElements) {\n    if (indices.length !== tensor.shape[0]) {\n        throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${indices.length} vs. ${tensor.shape[0]}`);\n    }\n    const maxIndex = Math.max(...indices);\n    if (numElements != null && numElements !== -1 && maxIndex >= numElements) {\n        throw new Error(`Max index must be < array size (${maxIndex}  vs. ${numElements})`);\n    }\n    const list = new TensorList([], elementShape, tensor.dtype, numElements);\n    const tensors = unstack(tensor, 0);\n    indices.forEach((value, index) => {\n        list.setItem(value, tensors[index]);\n    });\n    return list;\n}\n/**\n * Split the values of a Tensor into a TensorList.\n * @param length the lengths to use when splitting value along\n *    its first dimension.\n * @param tensor the tensor to split.\n * @param elementShape the shape of the future elements of the list\n */\nexport function split(tensor, length, elementShape) {\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n        totalLength += len;\n        return totalLength;\n    });\n    if (totalLength !== tensor.shape[0]) {\n        throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n    const shapeWithoutFirstDim = tensor.shape.slice(1);\n    const outputElementShape = mergeElementShape(shapeWithoutFirstDim, elementShape);\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors = tidy(() => {\n        const tensors = [];\n        tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n        for (let i = 0; i < length.length; ++i) {\n            const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n            const indices = [0, previousLength, 0];\n            const sizes = [1, length[i], elementPerRow];\n            tensors[i] = reshape(slice(tensor, indices, sizes), outputElementShape);\n        }\n        tensor.dispose();\n        return tensors;\n    });\n    const list = new TensorList([], elementShape, tensor.dtype, length.length);\n    for (let i = 0; i < tensors.length; i++) {\n        list.setItem(i, tensors[i]);\n    }\n    return list;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\nimport { util } from '@tensorflow/tfjs-core';\n/**\n * Used by TensorList and TensorArray to verify if elementShape matches, support\n * negative value as the dim shape.\n * @param shapeA\n * @param shapeB\n * @param errorMessagePrefix\n */\nexport function assertShapesMatchAllowUndefinedSize(shapeA, shapeB, errorMessagePrefix = '') {\n    // constant shape means unknown rank\n    if (typeof shapeA === 'number' || typeof shapeB === 'number') {\n        return;\n    }\n    util.assert(shapeA.length === shapeB.length, () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n    for (let i = 0; i < shapeA.length; i++) {\n        const dim0 = shapeA[i];\n        const dim1 = shapeB[i];\n        util.assert(dim0 < 0 || dim1 < 0 || dim0 === dim1, () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n    }\n}\nexport function fullDefinedShape(elementShape) {\n    if (typeof elementShape === 'number' || elementShape.some(dim => dim < 0)) {\n        return false;\n    }\n    return true;\n}\n/**\n * Generate the output element shape from the list elementShape, list tensors\n * and input param.\n * @param listElementShape\n * @param tensors\n * @param elementShape\n */\nexport function inferElementShape(listElementShape, tensors, elementShape) {\n    let partialShape = mergeElementShape(listElementShape, elementShape);\n    const notfullDefinedShape = !fullDefinedShape(partialShape);\n    if (notfullDefinedShape && tensors.length === 0) {\n        throw new Error(`Tried to calculate elements of an empty list` +\n            ` with non-fully-defined elementShape: ${partialShape}`);\n    }\n    if (notfullDefinedShape) {\n        tensors.forEach(tensor => {\n            partialShape = mergeElementShape(tensor.shape, partialShape);\n        });\n    }\n    if (!fullDefinedShape(partialShape)) {\n        throw new Error(`Non-fully-defined elementShape: ${partialShape}`);\n    }\n    return partialShape;\n}\nexport function mergeElementShape(elementShapeA, elementShapeB) {\n    if (typeof elementShapeA === 'number') {\n        return elementShapeB;\n    }\n    if (typeof elementShapeB === 'number') {\n        return elementShapeA;\n    }\n    if (elementShapeA.length !== elementShapeB.length) {\n        throw new Error(`Incompatible ranks during merge: ${elementShapeA} vs. ${elementShapeB}`);\n    }\n    const result = [];\n    for (let i = 0; i < elementShapeA.length; ++i) {\n        const dim0 = elementShapeA[i];\n        const dim1 = elementShapeB[i];\n        if (dim0 >= 0 && dim1 >= 0 && dim0 !== dim1) {\n            throw new Error(`Incompatible shape during merge: ${elementShapeA} vs. ${elementShapeB}`);\n        }\n        result[i] = dim0 >= 0 ? dim0 : dim1;\n    }\n    return result;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/** Whether to keep intermediate tensors. */\nENV.registerFlag('KEEP_INTERMEDIATE_TENSORS', () => false, debugValue => {\n    if (debugValue) {\n        console.warn('Keep intermediate tensors is ON. This will print the values of all ' +\n            'intermediate tensors during model inference. Not all models ' +\n            'support this mode. For details, check e2e/benchmarks/ ' +\n            'model_config.js. This significantly impacts performance.');\n    }\n});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags';\nexport { GraphModel, loadGraphModel, loadGraphModelSync } from './executor/graph_model';\nexport { deregisterOp, registerOp } from './operations/custom_op/register';\nexport { version as version_converter } from './version';\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getTensor } from '../executors/utils';\nimport { getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam } from '../operation_mapper';\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nexport class NodeValueImpl {\n    constructor(node, tensorMap, context) {\n        this.node = node;\n        this.tensorMap = tensorMap;\n        this.context = context;\n        this.inputs = [];\n        this.attrs = {};\n        this.inputs = node.inputNames.map(name => this.getInput(name));\n        if (node.rawAttrs != null) {\n            this.attrs = Object.keys(node.rawAttrs)\n                .reduce((attrs, key) => {\n                attrs[key] = this.getAttr(key);\n                return attrs;\n            }, {});\n        }\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getInput(name) {\n        return getTensor(name, this.tensorMap, this.context);\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getAttr(name, defaultValue) {\n        const value = this.node.rawAttrs[name];\n        if (value.tensor != null) {\n            return getTensor(name, this.tensorMap, this.context);\n        }\n        if (value.i != null || value.f != null) {\n            return getNumberParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.s != null) {\n            return getStringParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.b != null) {\n            return getBoolParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.shape != null) {\n            return getTensorShapeParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.type != null) {\n            return getDtypeParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.list != null) {\n            if (value.list.i != null || value.list.f != null) {\n                return getNumericArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.s != null) {\n                return getStringArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.shape != null) {\n                return getTensorShapeArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.b != null) {\n                return getBoolArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.type != null) {\n                return getDtypeArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n        }\n        return defaultValue;\n    }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst CUSTOM_OPS = {};\n/**\n * Register an Op for graph model executor. This allows you to register\n * TensorFlow custom op or override existing op.\n *\n * Here is an example of registering a new MatMul Op.\n * ```js\n * const customMatmul = (node) =>\n *    tf.matMul(\n *        node.inputs[0], node.inputs[1],\n *        node.attrs['transpose_a'], node.attrs['transpose_b']);\n *\n * tf.registerOp('MatMul', customMatmul);\n * ```\n * The inputs and attrs of the node object are based on the TensorFlow op\n * registry.\n *\n * @param name The Tensorflow Op name.\n * @param opFunc An op function which is called with the current graph node\n * during execution and needs to return a tensor or a list of tensors. The node\n * has the following attributes:\n *    - attr: A map from attribute name to its value\n *    - inputs: A list of input tensors\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function registerOp(name, opFunc) {\n    const opMapper = {\n        tfOpName: name,\n        category: 'custom',\n        inputs: [],\n        attrs: [],\n        customExecutor: opFunc\n    };\n    CUSTOM_OPS[name] = opMapper;\n}\n/**\n * Retrieve the OpMapper object for the registered op.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function getRegisteredOp(name) {\n    return CUSTOM_OPS[name];\n}\n/**\n * Deregister the Op for graph model executor.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function deregisterOp(name) {\n    delete CUSTOM_OPS[name];\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'BiasAdd':\n        case 'AddV2':\n        case 'Add': {\n            return [ops.add(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'AddN': {\n            return [ops.addN(getParamValue('tensors', node, tensorMap, context))];\n        }\n        case 'FloorMod':\n        case 'Mod':\n            return [ops.mod(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        case 'Mul':\n            return [ops.mul(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        case 'RealDiv':\n        case 'Div': {\n            return [ops.div(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'DivNoNan': {\n            return [ops.divNoNan(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'FloorDiv': {\n            return [ops.floorDiv(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Sub': {\n            return [ops.sub(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Minimum': {\n            return [ops.minimum(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Maximum': {\n            return [ops.maximum(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Pow': {\n            return [ops.pow(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'SquaredDifference': {\n            return [ops.squaredDifference(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'arithmetic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue, getTensor } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Abs':\n        case 'ComplexAbs':\n            return [ops.abs(getParamValue('x', node, tensorMap, context))];\n        case 'Acos':\n            return [ops.acos(getParamValue('x', node, tensorMap, context))];\n        case 'Acosh':\n            return [ops.acosh(getParamValue('x', node, tensorMap, context))];\n        case 'Asin':\n            return [ops.asin(getParamValue('x', node, tensorMap, context))];\n        case 'Asinh':\n            return [ops.asinh(getParamValue('x', node, tensorMap, context))];\n        case 'Atan':\n            return [ops.atan(getParamValue('x', node, tensorMap, context))];\n        case 'Atan2':\n            return [ops.atan2(getParamValue('x', node, tensorMap, context), getParamValue('y', node, tensorMap, context))];\n        case 'Atanh':\n            return [ops.atanh(getParamValue('x', node, tensorMap, context))];\n        case 'Ceil':\n            return [ops.ceil(getParamValue('x', node, tensorMap, context))];\n        case 'Complex':\n            return [ops.complex(getParamValue('real', node, tensorMap, context), getParamValue('imag', node, tensorMap, context))];\n        case 'Cos':\n            return [ops.cos(getParamValue('x', node, tensorMap, context))];\n        case 'Cosh':\n            return [ops.cosh(getParamValue('x', node, tensorMap, context))];\n        case 'Elu':\n            return [ops.elu(getParamValue('x', node, tensorMap, context))];\n        case 'Erf':\n            return [ops.erf(getParamValue('x', node, tensorMap, context))];\n        case 'Exp':\n            return [ops.exp(getParamValue('x', node, tensorMap, context))];\n        case 'Expm1': {\n            return [ops.expm1(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Floor':\n            return [ops.floor(getParamValue('x', node, tensorMap, context))];\n        case 'Log':\n            return [ops.log(getParamValue('x', node, tensorMap, context))];\n        case 'Log1p': {\n            return [ops.log1p(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Imag':\n            return [ops.imag(getParamValue('x', node, tensorMap, context))];\n        case 'Neg':\n            return [ops.neg(getParamValue('x', node, tensorMap, context))];\n        case 'Reciprocal': {\n            return [ops.reciprocal(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Real':\n            return [ops.real(getParamValue('x', node, tensorMap, context))];\n        case 'Relu':\n            return [ops.relu(getParamValue('x', node, tensorMap, context))];\n        case 'Round': {\n            return [ops.round(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Selu':\n            return [ops.selu(getParamValue('x', node, tensorMap, context))];\n        case 'Sigmoid':\n            return [ops.sigmoid(getParamValue('x', node, tensorMap, context))];\n        case 'Sin':\n            return [ops.sin(getParamValue('x', node, tensorMap, context))];\n        case 'Sign': {\n            return [ops.sign(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Sinh': {\n            return [ops.sinh(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Softplus': {\n            return [ops.softplus(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Sqrt': {\n            return [ops.sqrt(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Square': {\n            return [ops.square(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Tanh': {\n            return [ops.tanh(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Tan':\n            return [ops.tan(getParamValue('x', node, tensorMap, context))];\n        case 'ClipByValue':\n            return [ops.clipByValue(getParamValue('x', node, tensorMap, context), getParamValue('clipValueMin', node, tensorMap, context), getParamValue('clipValueMax', node, tensorMap, context))];\n        case 'Relu6':\n            return [ops.relu6(getParamValue('x', node, tensorMap, context))];\n        case 'Rsqrt':\n            return [ops.rsqrt(getTensor(node.inputNames[0], tensorMap, context))];\n        case 'Prod':\n            return [ops.prod(getParamValue('x', node, tensorMap, context), getParamValue('axes', node, tensorMap, context))];\n        case 'LeakyRelu':\n            return [ops.leakyRelu(getParamValue('x', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context))];\n        case 'Prelu':\n            return [ops.prelu(getParamValue('x', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context))];\n        case 'IsNan':\n            return [ops.isNaN(getTensor(node.inputNames[0], tensorMap, context))];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'basic_math';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { scalar } from '@tensorflow/tfjs-core';\nimport { TensorArray } from '../../executor/tensor_array';\nimport { fromTensor, reserve, scatter, split } from '../../executor/tensor_list';\nimport { cloneTensor, getParamValue, getTensor } from './utils';\nexport const executeOp = async (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'If':\n        case 'StatelessIf': {\n            const thenFunc = getParamValue('thenBranch', node, tensorMap, context);\n            const elseFunc = getParamValue('elseBranch', node, tensorMap, context);\n            const cond = getParamValue('cond', node, tensorMap, context);\n            const args = getParamValue('args', node, tensorMap, context);\n            const condValue = await cond.data();\n            if (condValue[0]) {\n                return context.functionMap[thenFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap);\n            }\n            else {\n                return context.functionMap[elseFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap);\n            }\n        }\n        case 'While':\n        case 'StatelessWhile': {\n            const bodyFunc = getParamValue('body', node, tensorMap, context);\n            const condFunc = getParamValue('cond', node, tensorMap, context);\n            const args = getParamValue('args', node, tensorMap, context);\n            // Calculate the condition of the loop\n            const condResult = (await context.functionMap[condFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap));\n            const argIds = args.map(tensor => tensor.id);\n            let condValue = await condResult[0].data();\n            // Dispose the intermediate tensors for condition function\n            condResult.forEach(tensor => {\n                if (!tensor.kept && argIds.indexOf(tensor.id) === -1) {\n                    tensor.dispose();\n                }\n            });\n            let result = args;\n            while (condValue[0]) {\n                // Record the previous result for intermediate tensor tracking\n                const origResult = result;\n                // Execution the body of the loop\n                result = await context.functionMap[bodyFunc].executeFunctionAsync(result, context.tensorArrayMap, context.tensorListMap);\n                const resultIds = result.map(tensor => tensor.id);\n                // Dispose the intermediate tensor for body function that is not global\n                // kept, not input/output of the body function\n                origResult.forEach(tensor => {\n                    if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n                        resultIds.indexOf(tensor.id) === -1) {\n                        tensor.dispose();\n                    }\n                });\n                // Recalcuate the condition of the loop using the latest results.\n                const condResult = (await context.functionMap[condFunc].executeFunctionAsync(result, context.tensorArrayMap, context.tensorListMap));\n                condValue = await condResult[0].data();\n                // Dispose the intermediate tensors for condition function\n                condResult.forEach(tensor => {\n                    if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n                        resultIds.indexOf(tensor.id) === -1) {\n                        tensor.dispose();\n                    }\n                });\n            }\n            return result;\n        }\n        case 'LoopCond': {\n            const pred = getParamValue('pred', node, tensorMap, context);\n            return [cloneTensor(pred)];\n        }\n        case 'Switch': {\n            const pred = getParamValue('pred', node, tensorMap, context);\n            let data = getParamValue('data', node, tensorMap, context);\n            if (!data.kept) {\n                data = cloneTensor(data);\n            }\n            // Outputs nodes :0 => false, :1 => true\n            return (await pred.data())[0] ? [undefined, data] : [data, undefined];\n        }\n        case 'Merge': {\n            const inputName = node.inputNames.find(name => getTensor(name, tensorMap, context) !== undefined);\n            if (inputName) {\n                const data = getTensor(inputName, tensorMap, context);\n                return [cloneTensor(data)];\n            }\n            return undefined;\n        }\n        case 'Enter': {\n            const frameId = getParamValue('frameName', node, tensorMap, context);\n            const data = getParamValue('tensor', node, tensorMap, context);\n            context.enterFrame(frameId);\n            return [cloneTensor(data)];\n        }\n        case 'Exit': {\n            const data = getParamValue('tensor', node, tensorMap, context);\n            context.exitFrame();\n            return [cloneTensor(data)];\n        }\n        case 'NextIteration': {\n            const data = getParamValue('tensor', node, tensorMap, context);\n            context.nextIteration();\n            return [cloneTensor(data)];\n        }\n        case 'TensorArrayV3': {\n            const size = getParamValue('size', node, tensorMap, context);\n            const dtype = getParamValue('dtype', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const dynamicSize = getParamValue('dynamicSize', node, tensorMap, context);\n            const clearAfterRead = getParamValue('clearAfterRead', node, tensorMap, context);\n            const identicalElementShapes = getParamValue('identicalElementShapes', node, tensorMap, context);\n            const name = getParamValue('name', node, tensorMap, context);\n            const tensorArray = new TensorArray(name, dtype, size, elementShape, identicalElementShapes, dynamicSize, clearAfterRead);\n            context.addTensorArray(tensorArray);\n            return [tensorArray.idTensor, scalar(1.0)];\n        }\n        case 'TensorArrayWriteV3': {\n            const id = getParamValue('tensorArrayId', node, tensorMap, context);\n            const index = getParamValue('index', node, tensorMap, context);\n            const writeTensor = getParamValue('tensor', node, tensorMap, context);\n            const writeTensorArray = context.getTensorArray(id.id);\n            writeTensorArray.write(index, writeTensor);\n            return [writeTensorArray.idTensor];\n        }\n        case 'TensorArrayReadV3': {\n            const readId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const readIndex = getParamValue('index', node, tensorMap, context);\n            const readTensorArray = context.getTensorArray(readId.id);\n            return [readTensorArray.read(readIndex)];\n        }\n        case 'TensorArrayGatherV3': {\n            const gatherId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const gatherIndices = getParamValue('indices', node, tensorMap, context);\n            const gatherDtype = getParamValue('dtype', node, tensorMap, context);\n            const gatherTensorArray = context.getTensorArray(gatherId.id);\n            return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n        }\n        case 'TensorArrayScatterV3': {\n            const scatterId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const scatterIndices = getParamValue('indices', node, tensorMap, context);\n            const scatterTensor = getParamValue('tensor', node, tensorMap, context);\n            const scatterTensorArray = context.getTensorArray(scatterId.id);\n            scatterTensorArray.scatter(scatterIndices, scatterTensor);\n            return [scatterTensorArray.idTensor];\n        }\n        case 'TensorArrayConcatV3': {\n            const concatId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const concatTensorArray = context.getTensorArray(concatId.id);\n            const concatDtype = getParamValue('dtype', node, tensorMap, context);\n            return [concatTensorArray.concat(concatDtype)];\n        }\n        case 'TensorArraySplitV3': {\n            const splitId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const splitTensor = getParamValue('tensor', node, tensorMap, context);\n            const lengths = getParamValue('lengths', node, tensorMap, context);\n            const splitTensorArray = context.getTensorArray(splitId.id);\n            splitTensorArray.split(lengths, splitTensor);\n            return [splitTensorArray.idTensor];\n        }\n        case 'TensorArraySizeV3': {\n            const sizeId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const sizeTensorArray = context.getTensorArray(sizeId.id);\n            return [scalar(sizeTensorArray.size(), 'int32')];\n        }\n        case 'TensorArrayCloseV3': {\n            const closeId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const closeTensorArray = context.getTensorArray(closeId.id);\n            closeTensorArray.clearAndClose();\n            return [closeTensorArray.idTensor];\n        }\n        case 'TensorListSetItem': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const index = getParamValue('index', node, tensorMap, context);\n            const writeTensor = getParamValue('tensor', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            tensorList.setItem(index, writeTensor);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListGetItem': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const readIndex = getParamValue('index', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDType = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.getItem(readIndex, elementShape, elementDType)];\n        }\n        case 'TensorListScatterV2':\n        case 'TensorListScatter': {\n            const scatterIndices = getParamValue('indices', node, tensorMap, context);\n            const scatterTensor = getParamValue('tensor', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const numElements = getParamValue('numElements', node, tensorMap, context);\n            const tensorList = scatter(scatterTensor, scatterIndices, elementShape, numElements);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListReserve':\n        case 'EmptyTensorList': {\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            let numElementsParam;\n            if (node.op === 'TensorListReserve') {\n                numElementsParam = 'numElements';\n            }\n            else {\n                numElementsParam = 'maxNumElements';\n            }\n            const numElements = getParamValue(numElementsParam, node, tensorMap, context);\n            const maxNumElements = node.op === 'TensorListReserve' ? -1 : numElements;\n            const tensorList = reserve(elementShape, elementDtype, numElements, maxNumElements);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListGather': {\n            const gatherId = getParamValue('tensorListId', node, tensorMap, context);\n            const gatherIndices = getParamValue('indices', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(gatherId.id);\n            return [tensorList.gather(gatherIndices, elementDtype, elementShape)];\n        }\n        case 'TensorListStack': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            const numElements = getParamValue('numElements', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.stack(elementShape, elementDtype, numElements)];\n        }\n        case 'TensorListFromTensor': {\n            const tensor = getParamValue('tensor', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = fromTensor(tensor, elementShape, elementDtype);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListConcat':\n        case 'TensorListConcatV2': {\n            const concatId = getParamValue('tensorListId', node, tensorMap, context);\n            const tensorList = context.getTensorList(concatId.id);\n            const concatDtype = getParamValue('dtype', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            return [tensorList.concat(concatDtype, elementShape)];\n        }\n        case 'TensorListPushBack': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const writeTensor = getParamValue('tensor', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            tensorList.pushBack(writeTensor);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListPopBack': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDType = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.popBack(elementShape, elementDType)];\n        }\n        case 'TensorListSplit': {\n            const splitTensor = getParamValue('tensor', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const lengths = getParamValue('lengths', node, tensorMap, context);\n            const tensorList = split(splitTensor, lengths, elementShape);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListLength': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [scalar(tensorList.size(), 'int32')];\n        }\n        case 'TensorListResize': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const srcTensorList = context.getTensorList(idTensor.id);\n            const destTensorList = srcTensorList.resize(size);\n            context.addTensorList(destTensorList);\n            return [destTensorList.idTensor];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'control';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getPadding, getParamValue } from './utils';\nfunction fusedConvAndDepthWiseParams(node, tensorMap, context) {\n    const [extraOp, activationFunc] = getParamValue('fusedOps', node, tensorMap, context);\n    const isBiasAdd = extraOp === 'biasadd';\n    const noBiasAdd = !isBiasAdd;\n    const isPrelu = activationFunc === 'prelu';\n    const isBatchNorm = extraOp === 'fusedbatchnorm';\n    const numArgs = getParamValue('numArgs', node, tensorMap, context);\n    if (isBiasAdd) {\n        if (isPrelu && numArgs !== 2) {\n            throw new Error('FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu ' +\n                'must have two extra arguments: bias and alpha.');\n        }\n        if (!isPrelu && isBiasAdd && numArgs !== 1) {\n            throw new Error('FusedConv2d and DepthwiseConv2d with BiasAdd must have ' +\n                'one extra argument: bias.');\n        }\n    }\n    if (isBatchNorm) {\n        throw new Error('FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported');\n    }\n    const stride = getParamValue('strides', node, tensorMap, context);\n    const pad = getPadding(node, tensorMap, context);\n    const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n        .toUpperCase();\n    const dilations = getParamValue('dilations', node, tensorMap, context);\n    let [biasArg, preluArg] = getParamValue('args', node, tensorMap, context);\n    if (noBiasAdd) {\n        preluArg = biasArg;\n        biasArg = undefined;\n    }\n    const leakyreluAlpha = getParamValue('leakyreluAlpha', node, tensorMap, context);\n    return {\n        stride,\n        pad,\n        dataFormat,\n        dilations,\n        biasArg,\n        preluArg,\n        activationFunc,\n        leakyreluAlpha\n    };\n}\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Conv1D': {\n            const stride = getParamValue('stride', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilation = getParamValue('dilation', node, tensorMap, context);\n            return [ops.conv1d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), stride, pad, dataFormat, dilation)];\n        }\n        case 'Conv2D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getPadding(node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            return [ops.conv2d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [stride[1], stride[2]], pad, dataFormat, [dilations[1], dilations[2]])];\n        }\n        case '_FusedConv2D': {\n            const { stride, pad, dataFormat, dilations, biasArg, preluArg, activationFunc, leakyreluAlpha } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n            return [ops.fused.conv2d({\n                    x: getParamValue('x', node, tensorMap, context),\n                    filter: getParamValue('filter', node, tensorMap, context),\n                    strides: [stride[1], stride[2]],\n                    pad: pad,\n                    dataFormat: dataFormat,\n                    dilations: [dilations[1], dilations[2]],\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        }\n        case 'FusedDepthwiseConv2dNative': {\n            const { stride, pad, dataFormat, dilations, biasArg, preluArg, activationFunc, leakyreluAlpha, } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n            return [ops.fused.depthwiseConv2d({\n                    x: getParamValue('x', node, tensorMap, context),\n                    filter: getParamValue('filter', node, tensorMap, context),\n                    strides: [stride[1], stride[2]],\n                    pad: pad,\n                    dataFormat: dataFormat,\n                    dilations: [dilations[1], dilations[2]],\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        }\n        case 'Conv2DBackpropInput':\n        case 'Conv2dTranspose': {\n            const shape = getParamValue('outputShape', node, tensorMap, context);\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getPadding(node, tensorMap, context);\n            return [ops.conv2dTranspose(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), shape, [stride[1], stride[2]], pad)];\n        }\n        case 'DepthwiseConv2dNative':\n        case 'DepthwiseConv2d': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getPadding(node, tensorMap, context);\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            return [ops.depthwiseConv2d(getParamValue('input', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [stride[1], stride[2]], pad, dataFormat, [dilations[1], dilations[2]])];\n        }\n        case 'Conv3D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            return [ops.conv3d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [stride[1], stride[2], stride[3]], pad, dataFormat, [dilations[1], dilations[2], dilations[3]])];\n        }\n        case 'AvgPool': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.avgPool(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad)];\n        }\n        case 'MaxPool': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.maxPool(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad)];\n        }\n        case 'MaxPoolWithArgmax': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            const includeBatchInIndex = getParamValue('includeBatchInIndex', node, tensorMap, context);\n            const { result, indexes } = ops.maxPoolWithArgmax(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad, includeBatchInIndex);\n            return [result, indexes];\n        }\n        case 'AvgPool3D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.avgPool3d(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2], kernelSize[3]], [stride[1], stride[2], stride[3]], pad)];\n        }\n        case 'MaxPool3D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.maxPool3d(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2], kernelSize[3]], [stride[1], stride[2], stride[3]], pad)];\n        }\n        case 'Dilation2D': {\n            const strides = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            // strides: [1, stride_height, stride_width, 1].\n            const strideHeight = strides[1];\n            const strideWidth = strides[2];\n            // dilations: [1, dilation_height, dilation_width, 1].\n            const dilationHeight = dilations[1];\n            const dilationWidth = dilations[2];\n            return [ops.dilation2d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [strideHeight, strideWidth], pad, [dilationHeight, dilationWidth], 'NHWC' /* dataFormat */)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'convolution';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Fill': {\n            const shape = getParamValue('shape', node, tensorMap, context);\n            const dtype = getParamValue('dtype', node, tensorMap, context);\n            const value = getParamValue('value', node, tensorMap, context);\n            return [ops.fill(shape, value, dtype)];\n        }\n        case 'LinSpace': {\n            const start = getParamValue('start', node, tensorMap, context);\n            const stop = getParamValue('stop', node, tensorMap, context);\n            const num = getParamValue('num', node, tensorMap, context);\n            return [ops.linspace(start, stop, num)];\n        }\n        case 'Multinomial': {\n            const logits = getParamValue('logits', node, tensorMap, context);\n            const numSamples = getParamValue('numSamples', node, tensorMap, context);\n            const seed = getParamValue('seed', node, tensorMap, context);\n            return [ops.multinomial(logits, numSamples, seed)];\n        }\n        case 'OneHot': {\n            const indices = getParamValue('indices', node, tensorMap, context);\n            const depth = getParamValue('depth', node, tensorMap, context);\n            const onValue = getParamValue('onValue', node, tensorMap, context);\n            const offValue = getParamValue('offValue', node, tensorMap, context);\n            const dtype = getParamValue('dtype', node, tensorMap, context);\n            return [ops.oneHot(indices, depth, onValue, offValue, dtype)];\n        }\n        case 'Ones': {\n            return [ops.ones(getParamValue('shape', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'OnesLike': {\n            return [ops.onesLike(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'RandomStandardNormal': {\n            return [ops.randomStandardNormal(getParamValue('shape', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context), getParamValue('seed', node, tensorMap, context))];\n        }\n        case 'RandomUniform': {\n            return [ops.randomUniform(\n                // tslint:disable-next-line:no-any\n                getParamValue('shape', node, tensorMap, context), getParamValue('minval', node, tensorMap, context), getParamValue('maxval', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'Range': {\n            const start = getParamValue('start', node, tensorMap, context);\n            const stop = getParamValue('stop', node, tensorMap, context);\n            const step = getParamValue('step', node, tensorMap, context);\n            return [ops.range(start, stop, step, getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'TruncatedNormal': {\n            const shape = getParamValue('shape', node, tensorMap, context);\n            const mean = getParamValue('mean', node, tensorMap, context);\n            const stdDev = getParamValue('stdDev', node, tensorMap, context);\n            const seed = getParamValue('seed', node, tensorMap, context);\n            return [ops.truncatedNormal(shape, mean, stdDev, getParamValue('dtype', node, tensorMap, context), seed)];\n        }\n        case 'Zeros': {\n            return [ops.zeros(getParamValue('shape', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'ZerosLike': {\n            return [ops.zerosLike(getParamValue('x', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'creation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nfunction nmsParams(node, tensorMap, context) {\n    const boxes = getParamValue('boxes', node, tensorMap, context);\n    const scores = getParamValue('scores', node, tensorMap, context);\n    const maxOutputSize = getParamValue('maxOutputSize', node, tensorMap, context);\n    const iouThreshold = getParamValue('iouThreshold', node, tensorMap, context);\n    const scoreThreshold = getParamValue('scoreThreshold', node, tensorMap, context);\n    const softNmsSigma = getParamValue('softNmsSigma', node, tensorMap, context);\n    return {\n        boxes,\n        scores,\n        maxOutputSize,\n        iouThreshold,\n        scoreThreshold,\n        softNmsSigma\n    };\n}\nexport const executeOp = async (node, tensorMap, context, resourceManager, ops = tfOps) => {\n    switch (node.op) {\n        case 'NonMaxSuppressionV5': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = nmsParams(node, tensorMap, context);\n            const result = await ops.image.nonMaxSuppressionWithScoreAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n            return [result.selectedIndices, result.selectedScores];\n        }\n        case 'NonMaxSuppressionV4': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            const padToMaxOutputSize = getParamValue('padToMaxOutputSize', node, tensorMap, context);\n            const result = await ops.image.nonMaxSuppressionPaddedAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n            return [result.selectedIndices, result.validOutputs];\n        }\n        case 'NonMaxSuppressionV3':\n        case 'NonMaxSuppressionV2': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            return [await ops.image.nonMaxSuppressionAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold)];\n        }\n        case 'Where': {\n            const condition = ops.cast(getParamValue('condition', node, tensorMap, context), 'bool');\n            const result = [await ops.whereAsync(condition)];\n            condition.dispose();\n            return result;\n        }\n        case 'ListDiff': {\n            return ops.setdiff1dAsync(getParamValue('x', node, tensorMap, context), getParamValue('y', node, tensorMap, context));\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'dynamic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'LowerBound': {\n            const sortedSequence = getParamValue('sortedSequence', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            return [ops.lowerBound(sortedSequence, values)];\n        }\n        case 'TopKV2': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const k = getParamValue('k', node, tensorMap, context);\n            const sorted = getParamValue('sorted', node, tensorMap, context);\n            const result = ops.topk(x, k, sorted);\n            return [result.values, result.indices];\n        }\n        case 'UpperBound': {\n            const sortedSequence = getParamValue('sortedSequence', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            return [ops.upperBound(sortedSequence, values)];\n        }\n        case 'Unique': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const result = ops.unique(x);\n            return [result.values, result.indices];\n        }\n        case 'UniqueV2': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const result = ops.unique(x, axis);\n            return [result.values, result.indices];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'evaluation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { cloneTensor, getParamValue, getTensor } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Const': {\n            return tensorMap[node.name];\n        }\n        case 'PlaceholderWithDefault':\n            const def = getParamValue('default', node, tensorMap, context);\n            return [getTensor(node.name, tensorMap, context) || def];\n        case 'Placeholder':\n            return [getTensor(node.name, tensorMap, context)];\n        case 'Identity':\n        case 'StopGradient':\n        case 'FakeQuantWithMinMaxVars': { // This op is currently ignored.\n            const data = getParamValue('x', node, tensorMap, context);\n            return [cloneTensor(data)];\n        }\n        case 'IdentityN':\n            return getParamValue('x', node, tensorMap, context)\n                .map((t) => cloneTensor(t));\n        case 'Snapshot':\n            const snapshot = getParamValue('x', node, tensorMap, context);\n            return [cloneTensor(snapshot)];\n        case 'Shape':\n            return [ops.tensor1d(getParamValue('x', node, tensorMap, context).shape, 'int32')];\n        case 'ShapeN':\n            return getParamValue('x', node, tensorMap, context)\n                .map((t) => ops.tensor1d(t.shape));\n        case 'Size':\n            return [ops.scalar(getParamValue('x', node, tensorMap, context).size, 'int32')];\n        case 'Rank':\n            return [ops.scalar(getParamValue('x', node, tensorMap, context).rank, 'int32')];\n        case 'NoOp':\n            return [ops.scalar(1)];\n        case 'Print':\n            const input = getParamValue('x', node, tensorMap, context);\n            const data = getParamValue('data', node, tensorMap, context);\n            const message = getParamValue('message', node, tensorMap, context);\n            const summarize = getParamValue('summarize', node, tensorMap, context);\n            console.warn('The graph has a tf.print() operation,' +\n                'usually used for debugging, which slows down performance.');\n            console.log(message);\n            for (let i = 0; i < data.length; i++) {\n                console.log(Array.prototype.slice.call(data[i].dataSync())\n                    .slice(0, summarize));\n            }\n            return [input];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'graph';\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { HashTable } from '../../executor/hash_table';\nimport { getParamValue } from './utils';\nexport const executeOp = async (node, tensorMap, context, resourceManager) => {\n    switch (node.op) {\n        case 'HashTable':\n        case 'HashTableV2': {\n            const keyDType = getParamValue('keyDType', node, tensorMap, context);\n            const valueDType = getParamValue('valueDType', node, tensorMap, context);\n            const hashTable = new HashTable(keyDType, valueDType);\n            resourceManager.addHashTable(node.name, hashTable);\n            return [hashTable.handle];\n        }\n        case 'LookupTableImport':\n        case 'LookupTableImportV2': {\n            const handle = getParamValue('tableHandle', node, tensorMap, context, resourceManager);\n            const keys = getParamValue('keys', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [await hashTable.import(keys, values)];\n        }\n        case 'LookupTableFind':\n        case 'LookupTableFindV2': {\n            const handle = getParamValue('tableHandle', node, tensorMap, context, resourceManager);\n            const keys = getParamValue('keys', node, tensorMap, context);\n            const defaultValue = getParamValue('defaultValue', node, tensorMap, context);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [await hashTable.find(keys, defaultValue)];\n        }\n        case 'LookupTableSize':\n        case 'LookupTableSizeV2': {\n            const handle = getParamValue('tableHandle', node, tensorMap, context, resourceManager);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [hashTable.tensorSize()];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'hash_table';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'ResizeBilinear': {\n            const images = getParamValue('images', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const alignCorners = getParamValue('alignCorners', node, tensorMap, context);\n            const halfPixelCenters = getParamValue('halfPixelCenters', node, tensorMap, context);\n            return [ops.image.resizeBilinear(images, [size[0], size[1]], alignCorners, halfPixelCenters)];\n        }\n        case 'ResizeNearestNeighbor': {\n            const images = getParamValue('images', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const alignCorners = getParamValue('alignCorners', node, tensorMap, context);\n            const halfPixelCenters = getParamValue('halfPixelCenters', node, tensorMap, context);\n            return [ops.image.resizeNearestNeighbor(images, [size[0], size[1]], alignCorners, halfPixelCenters)];\n        }\n        case 'CropAndResize': {\n            const image = getParamValue('image', node, tensorMap, context);\n            const boxes = getParamValue('boxes', node, tensorMap, context);\n            const boxInd = getParamValue('boxInd', node, tensorMap, context);\n            const cropSize = getParamValue('cropSize', node, tensorMap, context);\n            const method = getParamValue('method', node, tensorMap, context);\n            const extrapolationValue = getParamValue('extrapolationValue', node, tensorMap, context);\n            return [ops.image.cropAndResize(image, boxes, boxInd, cropSize, method, extrapolationValue)];\n        }\n        case 'ImageProjectiveTransformV3': {\n            const images = getParamValue('images', node, tensorMap, context);\n            const transforms = getParamValue('transforms', node, tensorMap, context);\n            const outputShape = getParamValue('outputShape', node, tensorMap, context);\n            const fillValue = getParamValue('fillValue', node, tensorMap, context);\n            const interpolation = getParamValue('interpolation', node, tensorMap, context);\n            const fillMode = getParamValue('fillMode', node, tensorMap, context);\n            return [ops.image.transform(images, transforms, interpolation.toLowerCase(), fillMode.toLowerCase(), fillValue, outputShape)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'image';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Equal': {\n            return [ops.equal(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'NotEqual': {\n            return [ops.notEqual(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Greater': {\n            return [ops.greater(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'GreaterEqual': {\n            return [ops.greaterEqual(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Less': {\n            return [ops.less(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'LessEqual': {\n            return [ops.lessEqual(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'LogicalAnd': {\n            return [ops.logicalAnd(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'LogicalNot': {\n            return [ops.logicalNot(getParamValue('a', node, tensorMap, context))];\n        }\n        case 'LogicalOr': {\n            return [ops.logicalOr(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Select':\n        case 'SelectV2': {\n            return [ops.where(getParamValue('condition', node, tensorMap, context), getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'logical';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'BatchMatMul':\n        case 'BatchMatMulV2':\n        case 'MatMul':\n            return [ops.matMul(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context), getParamValue('transposeA', node, tensorMap, context), getParamValue('transposeB', node, tensorMap, context))];\n        case 'Einsum':\n            return [ops.einsum(getParamValue('equation', node, tensorMap, context), ...getParamValue('tensors', node, tensorMap, context))];\n        case 'Transpose':\n            return [ops.transpose(getParamValue('x', node, tensorMap, context), getParamValue('perm', node, tensorMap, context))];\n        case '_FusedMatMul':\n            const [extraOp, activationFunc] = getParamValue('fusedOps', node, tensorMap, context);\n            const isBiasAdd = extraOp === 'biasadd';\n            const isPrelu = activationFunc === 'prelu';\n            const numArgs = getParamValue('numArgs', node, tensorMap, context);\n            const leakyreluAlpha = getParamValue('leakyreluAlpha', node, tensorMap, context);\n            if (isBiasAdd) {\n                if (isPrelu && numArgs !== 2) {\n                    throw new Error('Fused MatMul with BiasAdd and Prelu must have two ' +\n                        'extra arguments: bias and alpha.');\n                }\n                if (!isPrelu && numArgs !== 1) {\n                    throw new Error('Fused MatMul with BiasAdd must have one extra argument: bias.');\n                }\n            }\n            const [biasArg, preluArg] = getParamValue('args', node, tensorMap, context);\n            return [ops.fused.matMul({\n                    a: getParamValue('a', node, tensorMap, context),\n                    b: getParamValue('b', node, tensorMap, context),\n                    transposeA: getParamValue('transposeA', node, tensorMap, context),\n                    transposeB: getParamValue('transposeB', node, tensorMap, context),\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'matrices';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'EuclideanNorm':\n            return [ops.euclideanNorm(getParamValue('x', node, tensorMap, context), getParamValue('axis', node, tensorMap, context), getParamValue('keepDims', node, tensorMap, context))];\n        case 'FusedBatchNorm':\n        case 'FusedBatchNormV2': {\n            return [ops.batchNorm(getParamValue('x', node, tensorMap, context), getParamValue('mean', node, tensorMap, context), getParamValue('variance', node, tensorMap, context), getParamValue('offset', node, tensorMap, context), getParamValue('scale', node, tensorMap, context), getParamValue('epsilon', node, tensorMap, context))];\n        }\n        case 'FusedBatchNormV3': {\n            return [ops.batchNorm(getParamValue('x', node, tensorMap, context), getParamValue('mean', node, tensorMap, context), getParamValue('variance', node, tensorMap, context), getParamValue('offset', node, tensorMap, context), getParamValue('scale', node, tensorMap, context), getParamValue('epsilon', node, tensorMap, context))];\n        }\n        case 'LRN': {\n            return [ops.localResponseNormalization(getParamValue('x', node, tensorMap, context), getParamValue('radius', node, tensorMap, context), getParamValue('bias', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context), getParamValue('beta', node, tensorMap, context))];\n        }\n        case 'Softmax': {\n            return [ops.softmax(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'LogSoftmax': {\n            return [ops.logSoftmax(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'SparseToDense': {\n            return [ops.sparseToDense(getParamValue('sparseIndices', node, tensorMap, context), getParamValue('outputShape', node, tensorMap, context), getParamValue('sparseValues', node, tensorMap, context), getParamValue('defaultValue', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'normalization';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Max': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.max(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Mean': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.mean(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Min': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.min(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Sum': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.sum(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'All': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.all(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Any': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.any(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'ArgMax': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.argMax(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'ArgMin': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.argMin(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'Prod': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.prod(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Cumprod': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const exclusive = getParamValue('exclusive', node, tensorMap, context);\n            const reverse = getParamValue('reverse', node, tensorMap, context);\n            return [ops.cumprod(getParamValue('x', node, tensorMap, context), axis, exclusive, reverse)];\n        }\n        case 'Cumsum': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const exclusive = getParamValue('exclusive', node, tensorMap, context);\n            const reverse = getParamValue('reverse', node, tensorMap, context);\n            return [ops.cumsum(getParamValue('x', node, tensorMap, context), axis, exclusive, reverse)];\n        }\n        case 'Bincount':\n            const x = getParamValue('x', node, tensorMap, context);\n            const weights = getParamValue('weights', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            return [ops.bincount(x, weights, size)];\n        case 'DenseBincount': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const weights = getParamValue('weights', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const binaryOutput = getParamValue('binaryOutput', node, tensorMap, context);\n            return [ops.denseBincount(x, weights, size, binaryOutput)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'reduction';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tidy, util } from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'ConcatV2':\n        case 'Concat': {\n            const n = getParamValue('n', node, tensorMap, context);\n            const axis = getParamValue('axis', node, tensorMap, context);\n            let inputs = getParamValue('tensors', node, tensorMap, context);\n            inputs = inputs.slice(0, n);\n            return [ops.concat(inputs, axis)];\n        }\n        case 'Gather': {\n            const input = getParamValue('x', node, tensorMap, context);\n            const indices = getParamValue('indices', node, tensorMap, context);\n            return [ops.gather(input, ops.cast(indices, 'int32'), 0)];\n        }\n        case 'GatherV2': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const batchDims = getParamValue('batchDims', node, tensorMap, context);\n            const input = getParamValue('x', node, tensorMap, context);\n            const indices = getParamValue('indices', node, tensorMap, context);\n            return [ops.gather(input, ops.cast(indices, 'int32'), axis, batchDims)];\n        }\n        case 'Reverse': {\n            const dims = getParamValue('dims', node, tensorMap, context);\n            const axis = [];\n            for (let i = 0; i < dims.length; i++) {\n                if (dims[i]) {\n                    axis.push(i);\n                }\n            }\n            const input = getParamValue('x', node, tensorMap, context);\n            return [ops.reverse(input, axis)];\n        }\n        case 'ReverseV2': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const input = getParamValue('x', node, tensorMap, context);\n            return [ops.reverse(input, axis)];\n        }\n        case 'Slice': {\n            // tslint:disable-next-line:no-any\n            const begin = getParamValue('begin', node, tensorMap, context);\n            // tslint:disable-next-line:no-any\n            const size = getParamValue('size', node, tensorMap, context);\n            return [ops.slice(getParamValue('x', node, tensorMap, context), begin, size)];\n        }\n        case 'StridedSlice': {\n            const begin = getParamValue('begin', node, tensorMap, context);\n            const end = getParamValue('end', node, tensorMap, context);\n            const strides = getParamValue('strides', node, tensorMap, context);\n            const beginMask = getParamValue('beginMask', node, tensorMap, context);\n            const endMask = getParamValue('endMask', node, tensorMap, context);\n            const ellipsisMask = getParamValue('ellipsisMask', node, tensorMap, context);\n            const newAxisMask = getParamValue('newAxisMask', node, tensorMap, context);\n            const shrinkAxisMask = getParamValue('shrinkAxisMask', node, tensorMap, context);\n            const tensor = getParamValue('x', node, tensorMap, context);\n            return [ops.stridedSlice(tensor, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask)];\n        }\n        case 'Pack': {\n            return tidy(() => {\n                const axis = getParamValue('axis', node, tensorMap, context);\n                const tensors = getParamValue('tensors', node, tensorMap, context);\n                // Reshape the tensors to the first tensor's shape if they don't\n                // match.\n                const shape = tensors[0].shape;\n                const squeezedShape = ops.squeeze(tensors[0]).shape;\n                const mapped = tensors.map(tensor => {\n                    const sameShape = util.arraysEqual(tensor.shape, shape);\n                    if (!sameShape &&\n                        !util.arraysEqual(ops.squeeze(tensor).shape, squeezedShape)) {\n                        throw new Error('the input tensors shape does not match');\n                    }\n                    return sameShape ? tensor : ops.reshape(tensor, shape);\n                });\n                return [ops.stack(mapped, axis)];\n            });\n        }\n        case 'Unpack': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const tensor = getParamValue('tensor', node, tensorMap, context);\n            return ops.unstack(tensor, axis);\n        }\n        case 'Tile': {\n            const reps = getParamValue('reps', node, tensorMap, context);\n            return [ops.tile(getParamValue('x', node, tensorMap, context), reps)];\n        }\n        case 'Split':\n        case 'SplitV': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const numOrSizeSplits = getParamValue('numOrSizeSplits', node, tensorMap, context);\n            const tensor = getParamValue('x', node, tensorMap, context);\n            return ops.split(tensor, numOrSizeSplits, axis);\n        }\n        case 'ScatterNd': {\n            const indices = getParamValue('indices', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            const shape = getParamValue('shape', node, tensorMap, context);\n            return [ops.scatterND(indices, values, shape)];\n        }\n        case 'GatherNd': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const indices = getParamValue('indices', node, tensorMap, context);\n            return [ops.gatherND(x, indices)];\n        }\n        case 'SparseToDense': {\n            const indices = getParamValue('sparseIndices', node, tensorMap, context);\n            const shape = getParamValue('outputShape', node, tensorMap, context);\n            const sparseValues = getParamValue('sparseValues', node, tensorMap, context);\n            const defaultValue = getParamValue('defaultValue', node, tensorMap, context);\n            return [ops.sparseToDense(indices, sparseValues, shape, sparseValues.dtype === defaultValue.dtype ?\n                    defaultValue :\n                    ops.cast(defaultValue, sparseValues.dtype))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'slice_join';\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'SparseFillEmptyRows': {\n            const { outputIndices, outputValues, emptyRowIndicator, reverseIndexMap } = ops.sparse.sparseFillEmptyRows(getParamValue('indices', node, tensorMap, context), getParamValue('values', node, tensorMap, context), getParamValue('denseShape', node, tensorMap, context), getParamValue('defaultValue', node, tensorMap, context));\n            return [\n                outputIndices, outputValues, emptyRowIndicator, reverseIndexMap\n            ];\n        }\n        case 'SparseReshape': {\n            const { outputIndices, outputShape } = ops.sparse.sparseReshape(getParamValue('inputIndices', node, tensorMap, context), getParamValue('inputShape', node, tensorMap, context), getParamValue('newShape', node, tensorMap, context));\n            return [outputIndices, outputShape];\n        }\n        case 'SparseSegmentMean': {\n            const outputData = ops.sparse.sparseSegmentMean(getParamValue('data', node, tensorMap, context), getParamValue('indices', node, tensorMap, context), getParamValue('segmentIds', node, tensorMap, context));\n            return [outputData];\n        }\n        case 'SparseSegmentSum': {\n            const outputData = ops.sparse.sparseSegmentSum(getParamValue('data', node, tensorMap, context), getParamValue('indices', node, tensorMap, context), getParamValue('segmentIds', node, tensorMap, context));\n            return [outputData];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'sparse';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'FFT': {\n            return [ops.fft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'IFFT': {\n            return [ops.ifft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'RFFT': {\n            return [ops.rfft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'IRFFT': {\n            return [ops.irfft(getParamValue('x', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'spectral';\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'StringNGrams': {\n            const { nGrams, nGramsSplits } = ops.string.stringNGrams(getParamValue('data', node, tensorMap, context), getParamValue('dataSplits', node, tensorMap, context), getParamValue('separator', node, tensorMap, context), getParamValue('nGramWidths', node, tensorMap, context), getParamValue('leftPad', node, tensorMap, context), getParamValue('rightPad', node, tensorMap, context), getParamValue('padWidth', node, tensorMap, context), getParamValue('preserveShortSequences', node, tensorMap, context));\n            return [nGrams, nGramsSplits];\n        }\n        case 'StringSplit': {\n            const { indices, values, shape } = ops.string.stringSplit(getParamValue('input', node, tensorMap, context), getParamValue('delimiter', node, tensorMap, context), getParamValue('skipEmpty', node, tensorMap, context));\n            return [indices, values, shape];\n        }\n        case 'StringToHashBucketFast': {\n            const output = ops.string.stringToHashBucketFast(getParamValue('input', node, tensorMap, context), getParamValue('numBuckets', node, tensorMap, context));\n            return [output];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'string';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Cast': {\n            return [ops.cast(getParamValue('x', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'ExpandDims': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.expandDims(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'Squeeze': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.squeeze(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'Reshape': {\n            return [ops.reshape(getParamValue('x', node, tensorMap, context), getParamValue('shape', node, tensorMap, context))];\n        }\n        case 'MirrorPad': {\n            return [ops.mirrorPad(getParamValue('x', node, tensorMap, context), getParamValue('padding', node, tensorMap, context), getParamValue('mode', node, tensorMap, context))];\n        }\n        case 'PadV2':\n        case 'Pad': {\n            return [ops.pad(getParamValue('x', node, tensorMap, context), getParamValue('padding', node, tensorMap, context), getParamValue('constantValue', node, tensorMap, context))];\n        }\n        case 'SpaceToBatchND': {\n            const blockShape = getParamValue('blockShape', node, tensorMap, context);\n            const paddings = getParamValue('paddings', node, tensorMap, context);\n            return [ops.spaceToBatchND(getParamValue('x', node, tensorMap, context), blockShape, paddings)];\n        }\n        case 'BatchToSpaceND': {\n            const blockShape = getParamValue('blockShape', node, tensorMap, context);\n            const crops = getParamValue('crops', node, tensorMap, context);\n            return [ops.batchToSpaceND(getParamValue('x', node, tensorMap, context), blockShape, crops)];\n        }\n        case 'DepthToSpace': {\n            const blockSize = getParamValue('blockSize', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context).toUpperCase();\n            return [ops.depthToSpace(getParamValue('x', node, tensorMap, context), blockSize, dataFormat)];\n        }\n        case 'BroadcastTo': {\n            return [ops.broadcastTo(getParamValue('x', node, tensorMap, context), getParamValue('shape', node, tensorMap, context))];\n        }\n        case 'BroadcastArgs': {\n            return [ops.broadcastArgs(getParamValue('s0', node, tensorMap, context), getParamValue('s1', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'transformation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { clone, util } from '@tensorflow/tfjs-core';\nexport function getParamValue(paramName, node, tensorMap, context, resourceManager) {\n    const inputParam = node.inputParams[paramName];\n    if (inputParam && inputParam.inputIndexStart !== undefined) {\n        const start = inputParam.inputIndexStart;\n        const end = inputParam.inputIndexEnd === 0 ?\n            undefined :\n            (inputParam.inputIndexEnd === undefined ? start + 1 :\n                inputParam.inputIndexEnd);\n        if (inputParam.type === 'tensor') {\n            return getTensor(node.inputNames[inputParam.inputIndexStart], tensorMap, context, resourceManager);\n        }\n        if (inputParam.type === 'tensors') {\n            const inputs = node.inputNames.slice(start, end);\n            return inputs.map(name => getTensor(name, tensorMap, context, resourceManager));\n        }\n        const tensor = getTensor(node.inputNames.slice(start)[0], tensorMap, context, resourceManager);\n        const data = tensor.dataSync();\n        return inputParam.type === 'number' ?\n            data[0] :\n            util.toNestedArray(tensor.shape, data);\n    }\n    const attrParam = node.attrParams[paramName];\n    return attrParam && attrParam.value;\n}\n/**\n * Retrieve the tensor from tensorsMap based on input name.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function getTensor(name, tensorsMap, context, resourceManager) {\n    const [nodeName, index] = parseNodeName(name);\n    if (resourceManager != null) {\n        const tensor = resourceManager.getHashTableHandleByName(nodeName);\n        if (tensor != null) {\n            return tensor;\n        }\n    }\n    const contextId = context.currentContextIds.find(contextId => {\n        return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n    });\n    return contextId !== undefined ?\n        tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n        undefined;\n}\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensorsForCurrentContenxt(name, tensorsMap, context) {\n    return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n/**\n * Returns the node name, outputName and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n * If the input name contains output name i.e. StringSplit:indices:0, it will\n * return ['StringSplit', 0, 'indices'].\n */\nexport function getNodeNameAndIndex(inputName, context) {\n    const [nodeName, index, outputName] = parseNodeName(inputName);\n    return [\n        getNodeNameWithContextId(nodeName, context && context.currentContextId),\n        index, outputName\n    ];\n}\nfunction getNodeNameWithContextId(name, contextId) {\n    return !!contextId ? `${name}-${contextId}` : name;\n}\nexport function parseNodeName(name) {\n    const parts = name.split(':');\n    if (parts.length === 1) {\n        return [name, 0, undefined];\n    }\n    const nodeName = parts[0];\n    const outputName = parts.length === 3 ? parts[1] : undefined;\n    const index = Number(parts[parts.length - 1]);\n    return [nodeName, index, outputName];\n}\nexport function split(arr, size) {\n    const res = [];\n    for (let i = 0; i < arr.length; i += size) {\n        res.push(arr.slice(i, i + size));\n    }\n    return res;\n}\nexport function getPadding(node, tensorMap, context) {\n    let pad = getParamValue('pad', node, tensorMap, context);\n    if (pad === 'explicit') {\n        // This is 1d array, we need to convert it to 2d array\n        pad = getParamValue('explicitPaddings', node, tensorMap, context);\n        const explicitPadding = [[0, 0], [0, 0], [0, 0], [0, 0]];\n        for (let i = 0; i < 4; i++) {\n            explicitPadding[i][0] = pad[i * 2];\n            explicitPadding[i][1] = pad[i * 2 + 1];\n        }\n        return explicitPadding;\n    }\n    return pad;\n}\n/**\n *  Reuse the tensor if it is marked as keep, otherwise clone the tensor to\n *  avoid disposal. This is important for TensorArray and TensorList ops, since\n *  internally they use a tensor as the id for TensorArray and TensorList, and\n * to simplify lookup, they also use Tensor.id as the key to the internal map.\n * These id tensors have been marked as kept in the backend, we need avoid clone\n * them in order to create new Tensor.id.\n * @param tensor\n */\nexport function cloneTensor(tensor) {\n    return tensor.kept ? tensor : clone(tensor);\n}\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Add',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'AddV2',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'AddN',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BiasAdd',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sub',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RealDiv',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Div',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DivNoNan',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FloorDiv',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Mul',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Maximum',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Minimum',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pow',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SquaredDifference',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Mod',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FloorMod',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Abs',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Acos',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Asin',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Atan',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Atan2',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'y',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Ceil',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ClipByValue',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'clipValueMin',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'clipValueMax',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Complex',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'real',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'imag',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ComplexAbs',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cos',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cosh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Elu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Exp',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Floor',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Log',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Imag',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'outputType',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Neg',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Real',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'outputType',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Prelu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'alpha',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Relu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Relu6',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Selu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sigmoid',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sin',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sinh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sqrt',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Rsqrt',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Square',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tan',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tanh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sign',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Round',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Expm1',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Log1p',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Reciprocal',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Softplus',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Asinh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Acosh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Atanh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Erf',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Prod',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axes',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool',\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LeakyRelu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'alpha',\n                'name': 'alpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IsNan',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'EmptyTensorList',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 1,\n                'name': 'maxNumElements',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LoopCond',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'pred',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Switch',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'pred',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Merge',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Enter',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'frame_name',\n                'name': 'frameName',\n                'type': 'string'\n            },\n            {\n                'tfName': 'is_constant',\n                'name': 'isConstant',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Exit',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NextIteration',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'size',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'dynamic_size',\n                'name': 'dynamicSize',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'clear_after_read',\n                'name': 'clearAfterRead',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'identical_element_shapes',\n                'name': 'identicalElementShapes',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'tensor_array_name',\n                'name': 'name',\n                'type': 'string'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayWriteV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayReadV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayGatherV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayScatterV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayConcatV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'element_shape_except0',\n                'name': 'elementShapeExcept0',\n                'type': 'shape',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArraySplitV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'lengths',\n                'type': 'number[]'\n            },\n            {\n                'start': 3,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArraySizeV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayCloseV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'StatelessIf',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'cond',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'then_branch',\n                'name': 'thenBranch',\n                'type': 'func'\n            },\n            {\n                'tfName': 'else_branch',\n                'name': 'elseBranch',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'If',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'cond',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'then_branch',\n                'name': 'thenBranch',\n                'type': 'func'\n            },\n            {\n                'tfName': 'else_branch',\n                'name': 'elseBranch',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'StatelessWhile',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'cond',\n                'name': 'cond',\n                'type': 'func'\n            },\n            {\n                'tfName': 'body',\n                'name': 'body',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'While',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'cond',\n                'name': 'cond',\n                'type': 'func'\n            },\n            {\n                'tfName': 'body',\n                'name': 'body',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListScatter',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListScatterV2',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 3,\n                'name': 'numElements',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListGather',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListGetItem',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListSetItem',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListReserve',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 1,\n                'name': 'numElements',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListFromTensor',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListStack',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'num_elements',\n                'name': 'numElements',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListSplit',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 2,\n                'name': 'lengths',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListConcat',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListConcatV2',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListPopBack',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListPushBack',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListLength',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListResize',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'AvgPool',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': [],\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPoolWithArgmax',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'include_batch_in_index',\n                'name': 'includeBatchInIndex',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'AvgPool3D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool3D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv1D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'stride',\n                'name': 'stride',\n                'type': 'number'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NWC'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'dilation',\n                'name': 'dilation',\n                'type': 'number',\n                'defaultValue': 1\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'useCudnnOnGpu',\n                'name': 'useCudnnOnGpu',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': '_FusedConv2D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_args',\n                'name': 'numArgs',\n                'type': 'number'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'use_cudnn_on_gpu',\n                'name': 'useCudnnOnGpu',\n                'type': 'bool',\n                'defaultValue': true\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [\n                    1,\n                    1,\n                    1,\n                    1\n                ]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'leakyrelu_alpha',\n                'name': 'leakyreluAlpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2DBackpropInput',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 2,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            },\n            {\n                'start': 0,\n                'name': 'outputShape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2d',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedDepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_args',\n                'name': 'numArgs',\n                'type': 'number'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [\n                    1,\n                    1,\n                    1,\n                    1\n                ]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv3D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Dilation2D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'rates',\n                'name': 'dilations',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Fill',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            },\n            {\n                'start': 1,\n                'name': 'value',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LinSpace',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'start',\n                'type': 'number'\n            },\n            {\n                'start': 1,\n                'name': 'stop',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'num',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'OneHot',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'depth',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'onValue',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'start': 3,\n                'name': 'offValue',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'name': 'axis',\n                'type': 'number',\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Ones',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'OnesLike',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RandomStandardNormal',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'T',\n                'name': 'T',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RandomUniform',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'minval',\n                'name': 'minval',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'maxval',\n                'name': 'maxval',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'T',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Range',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'start',\n                'type': 'number'\n            },\n            {\n                'start': 1,\n                'name': 'stop',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'step',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tidx',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TruncatedNormal',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'means',\n                'name': 'mean',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'stddev',\n                'name': 'stdDev',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number'\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'T',\n                'name': 'T',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Zeros',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ZerosLike',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Multinomial',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'logits',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'numSamples',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number'\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'output_dtype',\n                'name': 'output_dtype',\n                'type': 'dtype'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'NonMaxSuppressionV2',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV3',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 4,\n                'name': 'scoreThreshold',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV4',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 4,\n                'name': 'scoreThreshold',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'T_threshold',\n                'name': 'threshold',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'pad_to_max_output_size',\n                'name': 'padToMaxOutputSize',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV5',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 4,\n                'name': 'scoreThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 5,\n                'name': 'softNmsSigma',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Where',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'condition',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ListDiff',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'y',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'LowerBound',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sortedSequence',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TopKV2',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'k',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'sorted',\n                'name': 'sorted',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'UpperBound',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sortedSequence',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Unique',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'UniqueV2',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'PlaceholderWithDefault',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'default',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'shape',\n                'name': 'shape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Placeholder',\n        'category': 'graph',\n        'attrs': [\n            {\n                'tfName': 'shape',\n                'name': 'shape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Const',\n        'category': 'graph'\n    },\n    {\n        'tfOpName': 'Identity',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IdentityN',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'x',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Snapshot',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Rank',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Size',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Shape',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ShapeN',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'x',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Print',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'data',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'message',\n                'name': 'message',\n                'type': 'string'\n            },\n            {\n                'tfName': 'first_n',\n                'name': 'firstN',\n                'type': 'number',\n                'notSupported': true\n            },\n            {\n                'tfName': 'summarize',\n                'name': 'summarize',\n                'type': 'number',\n                'defaultValue': 3\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NoOp',\n        'category': 'graph',\n        'inputs': []\n    },\n    {\n        'tfOpName': 'StopGradient',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FakeQuantWithMinMaxVars',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'min',\n                'name': 'min',\n                'type': 'number'\n            },\n            {\n                'tfName': 'max',\n                'name': 'max',\n                'type': 'number'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'HashTable',\n        'category': 'hash_table',\n        'inputs': [],\n        'attrs': [\n            {\n                'tfName': 'shared_name',\n                'name': 'sharedName',\n                'type': 'string'\n            },\n            {\n                'tfName': 'use_node_name_sharing',\n                'name': 'useNodeNameSharing',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'key_dtype',\n                'name': 'keyDType',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'value_dtype',\n                'name': 'valueDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'HashTableV2',\n        'category': 'hash_table',\n        'inputs': [],\n        'attrs': [\n            {\n                'tfName': 'shared_name',\n                'name': 'sharedName',\n                'type': 'string'\n            },\n            {\n                'tfName': 'use_node_name_sharing',\n                'name': 'useNodeNameSharing',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'key_dtype',\n                'name': 'keyDType',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'value_dtype',\n                'name': 'valueDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableImport',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableImportV2',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableFind',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableFindV2',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableSize',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableSizeV2',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'ResizeBilinear',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'images',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'align_corners',\n                'name': 'alignCorners',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'half_pixel_centers',\n                'name': 'halfPixelCenters',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ResizeNearestNeighbor',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'images',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'align_corners',\n                'name': 'alignCorners',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'half_pixel_centers',\n                'name': 'halfPixelCenters',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'CropAndResize',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'image',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'boxInd',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'cropSize',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'method',\n                'name': 'method',\n                'type': 'string'\n            },\n            {\n                'tfName': 'extrapolation_value',\n                'name': 'extrapolationValue',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ImageProjectiveTransformV3',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'images',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'transforms',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'outputShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 3,\n                'name': 'fillValue',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'interpolation',\n                'name': 'interpolation',\n                'type': 'string'\n            },\n            {\n                'tfName': 'fill_mode',\n                'name': 'fillMode',\n                'type': 'string'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Equal',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NotEqual',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Greater',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'GreaterEqual',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Less',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LessEqual',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalAnd',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalNot',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalOr',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Select',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'condition',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SelectV2',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'condition',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': '_FusedMatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_args',\n                'name': 'numArgs',\n                'type': 'number'\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'leakyrelu_alpha',\n                'name': 'leakyreluAlpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMulV2',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Transpose',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'perm',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Einsum',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'equation',\n                'name': 'equation',\n                'type': 'string'\n            },\n            {\n                'tfName': 'N',\n                'name': 'n',\n                'type': 'number',\n                'defaultValue': 2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'EuclideanNorm',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool',\n                'defaultValue': false\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNorm',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scale',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'offset',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'mean',\n                'type': 'tensor'\n            },\n            {\n                'start': 4,\n                'name': 'variance',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNormV2',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scale',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'offset',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'mean',\n                'type': 'tensor'\n            },\n            {\n                'start': 4,\n                'name': 'variance',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNormV3',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scale',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'offset',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'mean',\n                'type': 'tensor'\n            },\n            {\n                'start': 4,\n                'name': 'variance',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LRN',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'depth_radius',\n                'name': 'radius',\n                'type': 'number',\n                'defaultValue': 5\n            },\n            {\n                'tfName': 'bias',\n                'name': 'bias',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'alpha',\n                'name': 'alpha',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'beta',\n                'name': 'beta',\n                'type': 'number',\n                'defaultValue': 0.5\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Softmax',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogSoftmax',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sparseIndices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'outputShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'sparseValues',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': true,\n                'notSupported': true\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Bincount',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'weights',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DenseBincount',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'weights',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'binary_output',\n                'name': 'binaryOutput',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Max',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Mean',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Min',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sum',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'All',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Any',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ArgMax',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ArgMin',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Prod',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cumprod',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'exclusive',\n                'name': 'exclusive',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'reverse',\n                'name': 'reverse',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cumsum',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'exclusive',\n                'name': 'exclusive',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'reverse',\n                'name': 'reverse',\n                'type': 'bool'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'ConcatV2',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'end': -1,\n                'name': 'tensors',\n                'type': 'tensors'\n            },\n            {\n                'start': -1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'N',\n                'name': 'n',\n                'type': 'number',\n                'defaultValue': 2\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Concat',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 1,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            },\n            {\n                'start': 0,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'N',\n                'name': 'n',\n                'type': 'number',\n                'defaultValue': 2\n            }\n        ]\n    },\n    {\n        'tfOpName': 'GatherV2',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'batch_dims',\n                'name': 'batchDims',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Gather',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Reverse',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'dims',\n                'type': 'bool[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ReverseV2',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Slice',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'begin',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'size',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'StridedSlice',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'begin',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'end',\n                'type': 'number[]'\n            },\n            {\n                'start': 3,\n                'name': 'strides',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'begin_mask',\n                'name': 'beginMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'end_mask',\n                'name': 'endMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'new_axis_mask',\n                'name': 'newAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'ellipsis_mask',\n                'name': 'ellipsisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'shrink_axis_mask',\n                'name': 'shrinkAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pack',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Unpack',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'num',\n                'name': 'num',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tile',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'reps',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Split',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'start': 1,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_split',\n                'name': 'numOrSizeSplits',\n                'type': 'number',\n                'defaultValue': 1\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SplitV',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'numOrSizeSplits',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ScatterNd',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'GatherNd',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sparseIndices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'outputShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'sparseValues',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': false,\n                'notSupported': true\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'SparseFillEmptyRows',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'denseShape',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseReshape',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'inputIndices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'inputShape',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'newShape',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseSegmentMean',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'segmentIds',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseSegmentSum',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'segmentIds',\n                'type': 'tensor'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'FFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IFFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RFFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'fft_length',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IRFFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'fft_length',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'StringNGrams',\n        'category': 'string',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'dataSplits',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'separator',\n                'name': 'separator',\n                'type': 'string'\n            },\n            {\n                'tfName': 'ngram_widths',\n                'name': 'nGramWidths',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'left_pad',\n                'name': 'leftPad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'right_pad',\n                'name': 'rightPad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'pad_width',\n                'name': 'padWidth',\n                'type': 'number'\n            },\n            {\n                'tfName': 'preserve_short_sequences',\n                'name': 'preserveShortSequences',\n                'type': 'bool'\n            }\n        ],\n        'outputs': [\n            'ngrams',\n            'ngrams_splits'\n        ]\n    },\n    {\n        'tfOpName': 'StringSplit',\n        'category': 'string',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'delimiter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'skip_empty',\n                'name': 'skipEmpty',\n                'type': 'bool'\n            }\n        ],\n        'outputs': [\n            'indices',\n            'values',\n            'shape'\n        ]\n    },\n    {\n        'tfOpName': 'StringToHashBucketFast',\n        'category': 'string',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_buckets',\n                'name': 'numBuckets',\n                'type': 'number'\n            }\n        ]\n    }\n];\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Cast',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'SrcT',\n                'name': 'sdtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'DstT',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ExpandDims',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MirrorPad',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'padding',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'mode',\n                'name': 'mode',\n                'type': 'string'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pad',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'padding',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'constant_value',\n                'name': 'constantValue',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'PadV2',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'padding',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'constantValue',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Reshape',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Squeeze',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'tfDeprecatedName': 'squeeze_dims',\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SpaceToBatchND',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'blockShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'paddings',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchToSpaceND',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'blockShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'crops',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthToSpace',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'block_size',\n                'name': 'blockSize',\n                'type': 'number'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BroadcastTo',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': []\n    },\n    {\n        'tfOpName': 'BroadcastArgs',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 's0',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 's1',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': []\n    }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { NodeValueImpl } from './custom_op/node_value_impl';\nimport { getRegisteredOp } from './custom_op/register';\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as hashTable from './executors/hash_table_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as sparse from './executors/sparse_executor';\nimport * as spectral from './executors/spectral_executor';\nimport * as string from './executors/string_executor';\nimport * as transformation from './executors/transformation_executor';\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function executeOp(node, tensorMap, context, resourceManager, tidy = tfc.tidy) {\n    const value = ((node, tensorMap, context) => {\n        switch (node.category) {\n            case 'arithmetic':\n                return tidy(() => arithmetic.executeOp(node, tensorMap, context));\n            case 'basic_math':\n                return tidy(() => basicMath.executeOp(node, tensorMap, context));\n            case 'control':\n                return control.executeOp(node, tensorMap, context);\n            case 'convolution':\n                return tidy(() => convolution.executeOp(node, tensorMap, context));\n            case 'creation':\n                return tidy(() => creation.executeOp(node, tensorMap, context));\n            case 'dynamic':\n                return dynamic.executeOp(node, tensorMap, context);\n            case 'evaluation':\n                return tidy(() => evaluation.executeOp(node, tensorMap, context));\n            case 'image':\n                return tidy(() => image.executeOp(node, tensorMap, context));\n            case 'graph':\n                return tidy(() => graph.executeOp(node, tensorMap, context));\n            case 'logical':\n                return tidy(() => logical.executeOp(node, tensorMap, context));\n            case 'matrices':\n                return tidy(() => matrices.executeOp(node, tensorMap, context));\n            case 'normalization':\n                return tidy(() => normalization.executeOp(node, tensorMap, context));\n            case 'reduction':\n                return tidy(() => reduction.executeOp(node, tensorMap, context));\n            case 'slice_join':\n                return tidy(() => sliceJoin.executeOp(node, tensorMap, context));\n            case 'sparse':\n                return tidy(() => sparse.executeOp(node, tensorMap, context));\n            case 'spectral':\n                return tidy(() => spectral.executeOp(node, tensorMap, context));\n            case 'string':\n                return tidy(() => string.executeOp(node, tensorMap, context));\n            case 'transformation':\n                return tidy(() => transformation.executeOp(node, tensorMap, context));\n            case 'hash_table':\n                return hashTable.executeOp(node, tensorMap, context, resourceManager);\n            case 'custom':\n                const opMapper = getRegisteredOp(node.op);\n                if (opMapper && opMapper.customExecutor) {\n                    return opMapper.customExecutor(new NodeValueImpl(node, tensorMap, context));\n                }\n                else {\n                    throw TypeError(`Custom op ${node.op} is not registered.`);\n                }\n            default:\n                throw TypeError(`Unknown op '${node.op}'. File an issue at ` +\n                    `https://github.com/tensorflow/tfjs/issues so we can add it` +\n                    `, or register a custom execution with tf.registerOp()`);\n        }\n    })(node, tensorMap, context);\n    if (tfc.util.isPromise(value)) {\n        return value.then((data) => [].concat(data));\n    }\n    return [].concat(value);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport * as tensorflow from '../data/compiled_api';\nimport { getRegisteredOp } from './custom_op/register';\nimport { getNodeNameAndIndex } from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as hashTable from './op_list/hash_table';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as sparse from './op_list/sparse';\nimport * as spectral from './op_list/spectral';\nimport * as string from './op_list/string';\nimport * as transformation from './op_list/transformation';\nexport class OperationMapper {\n    // Singleton instance for the mapper\n    static get Instance() {\n        return this._instance || (this._instance = new this());\n    }\n    // Loads the op mapping from the JSON file.\n    constructor() {\n        const ops = [\n            arithmetic, basicMath, control, convolution, creation, dynamic,\n            evaluation, graph, hashTable, image, logical, matrices, normalization,\n            reduction, sliceJoin, sparse, spectral, string, transformation\n        ];\n        const mappersJson = [].concat(...ops.map(op => op.json));\n        this.opMappers = mappersJson.reduce((map, mapper) => {\n            map[mapper.tfOpName] = mapper;\n            return map;\n        }, {});\n    }\n    // Converts the model inference graph from Tensorflow GraphDef to local\n    // representation for TensorFlow.js API\n    transformGraph(graph, signature = {}) {\n        const tfNodes = graph.node;\n        const placeholders = [];\n        const weights = [];\n        const initNodes = [];\n        const nodes = tfNodes.reduce((map, node) => {\n            map[node.name] = this.mapNode(node);\n            if (node.op.startsWith('Placeholder')) {\n                placeholders.push(map[node.name]);\n            }\n            else if (node.op === 'Const') {\n                weights.push(map[node.name]);\n            }\n            else if (node.input == null || node.input.length === 0) {\n                initNodes.push(map[node.name]);\n            }\n            return map;\n        }, {});\n        let inputs = [];\n        const outputs = [];\n        let inputNodeNameToKey = {};\n        let outputNodeNameToKey = {};\n        if (signature != null) {\n            inputNodeNameToKey = this.mapSignatureEntries(signature.inputs);\n            outputNodeNameToKey = this.mapSignatureEntries(signature.outputs);\n        }\n        const allNodes = Object.keys(nodes);\n        allNodes.forEach(key => {\n            const node = nodes[key];\n            node.inputNames.forEach((name, index) => {\n                const [nodeName, , outputName] = getNodeNameAndIndex(name);\n                const inputNode = nodes[nodeName];\n                if (inputNode.outputs != null) {\n                    const outputIndex = inputNode.outputs.indexOf(outputName);\n                    if (outputIndex !== -1) {\n                        const inputName = `${nodeName}:${outputIndex}`;\n                        // update the input name to use the mapped output index directly.\n                        node.inputNames[index] = inputName;\n                    }\n                }\n                node.inputs.push(inputNode);\n                inputNode.children.push(node);\n            });\n        });\n        // if signature has not outputs set, add any node that does not have\n        // outputs.\n        if (Object.keys(outputNodeNameToKey).length === 0) {\n            allNodes.forEach(key => {\n                const node = nodes[key];\n                if (node.children.length === 0) {\n                    outputs.push(node);\n                }\n            });\n        }\n        else {\n            Object.keys(outputNodeNameToKey).forEach(name => {\n                const [nodeName,] = getNodeNameAndIndex(name);\n                const node = nodes[nodeName];\n                if (node != null) {\n                    node.signatureKey = outputNodeNameToKey[name];\n                    outputs.push(node);\n                }\n            });\n        }\n        if (Object.keys(inputNodeNameToKey).length > 0) {\n            Object.keys(inputNodeNameToKey).forEach(name => {\n                const [nodeName,] = getNodeNameAndIndex(name);\n                const node = nodes[nodeName];\n                if (node) {\n                    node.signatureKey = inputNodeNameToKey[name];\n                    inputs.push(node);\n                }\n            });\n        }\n        else {\n            inputs = placeholders;\n        }\n        let functions = {};\n        if (graph.library != null && graph.library.function != null) {\n            functions = graph.library.function.reduce((functions, func) => {\n                functions[func.signature.name] = this.mapFunction(func);\n                return functions;\n            }, {});\n        }\n        const result = { nodes, inputs, outputs, weights, placeholders, signature, functions };\n        if (initNodes.length > 0) {\n            result.initNodes = initNodes;\n        }\n        return result;\n    }\n    mapSignatureEntries(entries) {\n        return Object.keys(entries || {})\n            .reduce((prev, curr) => {\n            prev[entries[curr].name] = curr;\n            return prev;\n        }, {});\n    }\n    mapNode(node) {\n        // Unsupported ops will cause an error at run-time (not parse time), since\n        // they may not be used by the actual execution subgraph.\n        const mapper = getRegisteredOp(node.op) || this.opMappers[node.op] || {};\n        if (node.attr == null) {\n            node.attr = {};\n        }\n        const newNode = {\n            name: node.name,\n            op: node.op,\n            category: mapper.category,\n            inputNames: (node.input ||\n                []).map(input => input.startsWith('^') ? input.slice(1) : input),\n            inputs: [],\n            children: [],\n            inputParams: {},\n            attrParams: {},\n            rawAttrs: node.attr,\n            outputs: mapper.outputs\n        };\n        if (mapper.inputs != null) {\n            newNode.inputParams =\n                mapper.inputs.reduce((map, param) => {\n                    map[param.name] = {\n                        type: param.type,\n                        inputIndexStart: param.start,\n                        inputIndexEnd: param.end\n                    };\n                    return map;\n                }, {});\n        }\n        if (mapper.attrs != null) {\n            newNode.attrParams =\n                mapper.attrs.reduce((map, param) => {\n                    const type = param.type;\n                    let value = undefined;\n                    switch (param.type) {\n                        case 'string':\n                            value = getStringParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getStringParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'string[]':\n                            value = getStringArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getStringArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'number':\n                            value = getNumberParam(node.attr, param.tfName, (param.defaultValue || 0));\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getNumberParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'number[]':\n                            value = getNumericArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getNumericArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'bool':\n                            value = getBoolParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getBoolParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'bool[]':\n                            value = getBoolArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getBoolArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'shape':\n                            value = getTensorShapeParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getTensorShapeParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'shape[]':\n                            value = getTensorShapeArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getTensorShapeArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'dtype':\n                            value = getDtypeParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getDtypeParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'dtype[]':\n                            value = getDtypeArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getDtypeArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'func':\n                            value = getFuncParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getFuncParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'tensor':\n                        case 'tensors':\n                            break;\n                        default:\n                            throw new Error(`Unsupported param type: ${param.type} for op: ${node.op}`);\n                    }\n                    map[param.name] = { value, type };\n                    return map;\n                }, {});\n        }\n        return newNode;\n    }\n    // map the TFunctionDef to TFJS graph object\n    mapFunction(functionDef) {\n        const tfNodes = functionDef.nodeDef;\n        const placeholders = [];\n        const weights = [];\n        let nodes = {};\n        if (tfNodes != null) {\n            nodes = tfNodes.reduce((map, node) => {\n                map[node.name] = this.mapNode(node);\n                if (node.op === 'Const') {\n                    weights.push(map[node.name]);\n                }\n                return map;\n            }, {});\n        }\n        const inputs = [];\n        const outputs = [];\n        functionDef.signature.inputArg.forEach(arg => {\n            const [nodeName,] = getNodeNameAndIndex(arg.name);\n            const node = {\n                name: nodeName,\n                op: 'Placeholder',\n                inputs: [],\n                inputNames: [],\n                category: 'graph',\n                inputParams: {},\n                attrParams: { dtype: { value: parseDtypeParam(arg.type), type: 'dtype' } },\n                children: []\n            };\n            node.signatureKey = arg.name;\n            inputs.push(node);\n            nodes[nodeName] = node;\n        });\n        const allNodes = Object.keys(nodes);\n        allNodes.forEach(key => {\n            const node = nodes[key];\n            node.inputNames.forEach((name, index) => {\n                const [nodeName, , outputName] = getNodeNameAndIndex(name);\n                const inputNode = nodes[nodeName];\n                if (inputNode.outputs != null) {\n                    const outputIndex = inputNode.outputs.indexOf(outputName);\n                    if (outputIndex !== -1) {\n                        const inputName = `${nodeName}:${outputIndex}`;\n                        // update the input name to use the mapped output index directly.\n                        node.inputNames[index] = inputName;\n                    }\n                }\n                node.inputs.push(inputNode);\n                inputNode.children.push(node);\n            });\n        });\n        const returnNodeMap = functionDef.ret;\n        functionDef.signature.outputArg.forEach(output => {\n            const [nodeName, index] = getNodeNameAndIndex(returnNodeMap[output.name]);\n            const node = nodes[nodeName];\n            if (node != null) {\n                node.defaultOutput = index;\n                outputs.push(node);\n            }\n        });\n        const signature = this.mapArgsToSignature(functionDef);\n        return { nodes, inputs, outputs, weights, placeholders, signature };\n    }\n    mapArgsToSignature(functionDef) {\n        return {\n            methodName: functionDef.signature.name,\n            inputs: functionDef.signature.inputArg.reduce((map, arg) => {\n                map[arg.name] = this.mapArgToTensorInfo(arg);\n                return map;\n            }, {}),\n            outputs: functionDef.signature.outputArg.reduce((map, arg) => {\n                map[arg.name] = this.mapArgToTensorInfo(arg, functionDef.ret);\n                return map;\n            }, {}),\n        };\n    }\n    mapArgToTensorInfo(arg, nameMap) {\n        let name = arg.name;\n        if (nameMap != null) {\n            name = nameMap[name];\n        }\n        return { name, dtype: arg.type };\n    }\n}\nexport function decodeBase64(text) {\n    const global = env().global;\n    if (typeof global.atob !== 'undefined') {\n        return global.atob(text);\n    }\n    else if (typeof Buffer !== 'undefined') {\n        return new Buffer(text, 'base64').toString();\n    }\n    else {\n        throw new Error('Unable to decode base64 in this environment. ' +\n            'Missing built-in atob() or Buffer()');\n    }\n}\nexport function parseStringParam(s, keepCase) {\n    const value = Array.isArray(s) ? String.fromCharCode.apply(null, s) : decodeBase64(s);\n    return keepCase ? value : value.toLowerCase();\n}\nexport function getStringParam(attrs, name, def, keepCase = false) {\n    const param = attrs[name];\n    if (param != null) {\n        return parseStringParam(param.s, keepCase);\n    }\n    return def;\n}\nexport function getBoolParam(attrs, name, def) {\n    const param = attrs[name];\n    return param ? param.b : def;\n}\nexport function getNumberParam(attrs, name, def) {\n    const param = attrs[name] || {};\n    const value = param['i'] != null ? param['i'] : (param['f'] != null ? param['f'] : def);\n    return (typeof value === 'number') ? value : parseInt(value, 10);\n}\nexport function parseDtypeParam(value) {\n    if (typeof (value) === 'string') {\n        // tslint:disable-next-line:no-any\n        value = tensorflow.DataType[value];\n    }\n    switch (value) {\n        case tensorflow.DataType.DT_FLOAT:\n        case tensorflow.DataType.DT_HALF:\n            return 'float32';\n        case tensorflow.DataType.DT_INT32:\n        case tensorflow.DataType.DT_INT64:\n        case tensorflow.DataType.DT_INT8:\n        case tensorflow.DataType.DT_UINT8:\n            return 'int32';\n        case tensorflow.DataType.DT_BOOL:\n            return 'bool';\n        case tensorflow.DataType.DT_DOUBLE:\n            return 'float32';\n        case tensorflow.DataType.DT_STRING:\n            return 'string';\n        default:\n            // Unknown dtype error will happen at runtime (instead of parse time),\n            // since these nodes might not be used by the actual subgraph execution.\n            return null;\n    }\n}\nexport function getFuncParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.func) {\n        return param.func.name;\n    }\n    return def;\n}\nexport function getDtypeParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.type) {\n        return parseDtypeParam(param.type);\n    }\n    return def;\n}\nexport function getDtypeArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.type) {\n        return param.list.type.map(v => parseDtypeParam(v));\n    }\n    return def;\n}\nexport function parseTensorShapeParam(shape) {\n    if (shape.unknownRank) {\n        return undefined;\n    }\n    if (shape.dim != null) {\n        return shape.dim.map(dim => (typeof dim.size === 'number') ? dim.size : parseInt(dim.size, 10));\n    }\n    return [];\n}\nexport function getTensorShapeParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.shape) {\n        return parseTensorShapeParam(param.shape);\n    }\n    return def;\n}\nexport function getNumericArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param) {\n        return ((param.list.f && param.list.f.length ? param.list.f :\n            param.list.i) ||\n            [])\n            .map(v => (typeof v === 'number') ? v : parseInt(v, 10));\n    }\n    return def;\n}\nexport function getStringArrayParam(attrs, name, def, keepCase = false) {\n    const param = attrs[name];\n    if (param && param.list && param.list.s) {\n        return param.list.s.map((v) => {\n            return parseStringParam(v, keepCase);\n        });\n    }\n    return def;\n}\nexport function getTensorShapeArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.shape) {\n        return param.list.shape.map((v) => {\n            return parseTensorShapeParam(v);\n        });\n    }\n    return def;\n}\nexport function getBoolArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.b) {\n        return param.list.b;\n    }\n    return def;\n}\n","/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '3.21.0';\nexport { version };\n","import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport * as tf from '@tensorflow/tfjs'\n\nimport { BehaviorSubject, distinctUntilChanged, shareReplay } from 'rxjs';\nimport { getResult } from '../../common/common';\nimport * as coco from '@tensorflow-models/coco-ssd';\nimport { ObjectDetection } from '@tensorflow-models/coco-ssd';\n@Component({\n  selector: 'app-object-detected',\n  templateUrl: './object-detected.component.html',\n  styleUrls: ['./object-detected.component.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n  providers: []\n})\nexport class ObjectDetectedComponent implements OnInit {\n  model: ObjectDetection | null = null;\n\n  /**\n * img\n */\n  @ViewChild('img', { static: true }) img: ElementRef<HTMLImageElement> | null = null;\n  /**\n * img\n */\n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLCanvasElement> | null = null;\n\n  /**\n   * video\n   */\n  @ViewChild('file', { static: true }) file: ElementRef<HTMLInputElement> | null = null;\n\n\n  /*\n   * SrcImage\n   */\n  private readonly _srcImage = new BehaviorSubject<string>('');\n  srcImage$ = this._srcImage.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * SrcImage getter\n  */\n  get srcImage(): string {\n    return this._srcImage.getValue();\n  }\n\n  /*\n   * SrcImage setter\n   */\n  set srcImage(value: string) {\n    if (this._srcImage.getValue() !== value) {\n      this._srcImage.next(value);\n    }\n  }\n\n  /*\n   * Position\n   */\n  private readonly _position = new BehaviorSubject<any | null>(null);\n  position$ = this._position.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * Position getter\n  */\n  get position(): any | null {\n    return this._position.getValue();\n  }\n\n  /*\n   * Position setter\n   */\n  set position(value: any | null) {\n    if (this._position.getValue() !== value) {\n      this._position.next(value);\n    }\n  }\n\n\n  constructor() {\n    coco.load().then(x => {\n      this.model = x;\n    });\n  }\n\n\n  ngOnInit() {\n    this._srcImage.subscribe((base64: string) => {\n      if (base64) {\n        this.predict(base64)\n      }\n    })\n  }\n\n  pictureUpload(ev: any) {\n    const file = ev.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = (e: any) => {\n      let image = new Image();\n      image.src = e.target.result;\n      this._srcImage.next(e.target.result);\n\n    }\n    reader.readAsDataURL(file);\n  }\n\n  predict(base64: string) {\n    const model = this.model;\n    const img = new Image(600, 400);\n    img.onload = () => {\n      if (model) {\n\n        this.model?.detect(img).then(result => {\n\n          if (this.canvas?.nativeElement) {\n\n\n            const canvas = this.canvas?.nativeElement;\n            const color = [\"red\", \"green\", \"blue\"]\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const context = canvas.getContext('2d');\n            if (context) {\n\n              context.drawImage(img, 0, 0, img.width, img.height);\n              context.font = '40px Arial';\n\n              for (let i = 0; i < result.length; i++) {\n                context.beginPath();\n                context.rect(...result[i].bbox);\n                context.lineWidth = 5;\n                context.strokeStyle = color[i % 3];\n                context.fillStyle = color[i % 3];\n                context.stroke();\n                context.fillText(\n                  result[i].score.toFixed(3) + ' ' + result[i].class,\n                  result[i].bbox[0],\n                  result[i].bbox[1] - 5);\n              }\n            }\n\n            this.position = result;\n          }\n\n\n\n        });\n\n      }\n    }\n    img.src = base64;\n\n  }\n\n  /**\n    * clickFileUpload\n   */\n  clickFileUpload() {\n    this.file?.nativeElement.click();\n  }\n\n\n\n}\n\n\n","<div id=\"container\">\n  <div style=\" display: flex; flex-direction: column;align-items: center;\">\n    <img #img />\n    <canvas #canvas></canvas>\n    <div>\n\n      <!-- <table>\n        <tr *ngFor=\"let item of position\">\n          <td > {{item.name}}</td>\n          <td > {{item.probability}}</td>\n        </tr>\n      </table> -->\n    </div>\n\n  </div>\n  <div class=\"buttons\">\n\n    <input hidden accept=\".jpg,.jpeg\" type=\"file\" #file (change)=\"pictureUpload($event)\" />\n    <ion-button (click)=\"clickFileUpload()\">Upload File </ion-button>\n\n  </div>\n\n</div>","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["e","a","exports","module","require","define","amd","self","cocoSsd","tf","m","i","name","id","displayName","d","constructor","modelPath","getPrefix","load","_this","_asyncToGenerator","model","loadGraphModel","zeros","executeAsync","Promise","all","map","data","dispose","infer","_this2","tidy","Tensor","browser","fromPixels","expandDims","s","shape","n","l","t","dataSync","o","p","r","calculateMaxScores","c","getBackend","setBackend","y","tensor2d","image","nonMaxSuppression","N","buildDetectedObjects","length","push","bbox","class","score","Number","MIN_VALUE","detect","_this3","ObjectDetection","Error","base","modelUrl","indexOf","version","Object","defineProperty","value","DataType","SaverDef","CheckpointFormatVersion","ExecutionContext","weightMap","tensorArrayMap","tensorListMap","functionMap","rootContext","frameName","iterationId","contexts","lastId","generateCurrentContextIds","newFrame","currentContext","currentContextId","_currentContextIds","currentContextIds","names","slice","contextIdforContexts","context","join","enterFrame","frameId","unshift","exitFrame","splice","shift","nextIteration","assign","getWeight","addTensorArray","tensorArray","getTensorArray","addTensorList","tensorList","getTensorList","keepIds","key","clearAndClose","env","util","getNodeNameAndIndex","getParamValue","getTensor","getTensorsForCurrentContenxt","parseNodeName","executeOp","getExecutionSubgraph","getNodesInTopologicalOrder","isControlFlow","GraphExecutor","graph","parent","compiledMap","Map","_weightMap","SEPERATOR","_functions","_functionExecutorMap","intermediateTensors","keepTensorForDebug","_outputs","outputs","_inputs","inputs","_initNodes","initNodes","_signature","signature","functions","keys","forEach","weightIds","_weightIds","functionExecutorMap","tensor","concat","resourceManager","_resourceManager","node","attrParams","undefined","dtype","inputNodes","signatureKey","outputNodes","defaultOutput","reduce","getCompilationKey","sortedInputs","sort","sortedOutputs","compile","executionInfo","missingInputs","dynamicNode","syncInputs","op","outNames","inNames","execute","mapInputs","checkInputs","checkInputShapeAndType","mapOutputs","checkOutputs","nodes","outputNodeNames","resetIntermediateTensors","compilationKey","orderedNodes","get","set","tensorsMap","nodeName","index","tensors","tensorsToKeep","getFrozenTensorIds","intermediateTensorConsumerCount","isPromise","checkTensorForDisposal","tensorMap","ids","apply","Set","outputNames","category","children","input","kept","has","count","_executeAsync","disposeIntermediateTensors","disposeTensorsMap","isDisposed","getIntermediateTensors","isFunctionExecution","getBool","console","warn","message","executeWithControlFlow","results","outputIds","inputIds","executeFunctionAsync","mappedInputs","_this4","usedNodes","stack","weights","added","promises","processStack","missingOutputs","filter","alternativeMsg","item","pop","then","processChildNodes","childNode","inputNames","some","every","match","dim","assert","result","inputName","notInGraph","normalizedName","io","OperationMapper","ResourceManager","TFHUB_SEARCH_PARAM","DEFAULT_MODEL_NAME","GraphModel","loadOptions","tfio","modelVersion","executor","metadata","artifacts","userDefinedMetadata","modelSignature","modelStructuredOutputKeys","structuredOutputKeys","findIOHandler","path","handler","requestInit","browserHTTPRequest","handlers","getLoadHandlers","loadResult","loadSync","modelTopology","versions","producer","minConsumer","decodeWeights","weightData","weightSpecs","Instance","transformGraph","convertTensorMapToTensorsMap","modelInitializer","initializer","save","handlerOrURL","config","getSaveHandlers","predict","outputTensors","outputTensorsArray","outputTensorMap","outputTensor","normalizeInputs","Array","isArray","normalizeOutputs","newMap","_x","_loadGraphModel","arguments","options","fromTFHub","getTFHubUrl","loadGraphModelSync","modelSource","ioHandler","modelJSON","ArrayBuffer","getWeightSpecs","weightsManifest","modelArtifacts","getModelArtifactsForJSONSync","fromMemorySync","endsWith","keep","scalar","unstack","tfOps","HashTable","keyDType","valueDType","handle","clear","size","tensorSize","import","values","checkKeyAndValueTensor","$keys","$values","keysLength","valuesLength","find","defaultValue","findWithDefault","seen","inputNodeNames","initNodeNames","frontier","isDynamicShape","isHashTable","child","add","weight","CONTROL_FLOW_OPS","DYNAMIC_SHAPE_OPS","HASH_TABLE_OPS","hashTableNameToHandle","hashTableMap","addHashTable","hashTable","getHashTableHandleByName","getHashTableById","reshape","assertShapesMatchAllowUndefinedSize","TensorArray","maxSize","elementShape","identicalElementShapes","dynamicSize","clearAfterRead","closed_","idTensor","closed","read","tensorWithState","cleared","readMany","indices","write","written","writeMany","gather","scatter","maxIndex","Math","max","split","totalLength","cumulativeLengths","len","elementPerRow","previousLength","sizes","inferElementShape","mergeElementShape","TensorList","elementDtype","maxNumElements","copy","numElements","outputElementShape","reshapedTensors","popBack","pushBack","resize","destTensorList","min","getItem","elementIndex","setItem","fromTensor","tensorElementShape","reserve","list","shapeWithoutFirstDim","shapeA","shapeB","errorMessagePrefix","dim0","dim1","fullDefinedShape","listElementShape","partialShape","notfullDefinedShape","elementShapeA","elementShapeB","ENV","registerFlag","debugValue","deregisterOp","registerOp","version_converter","getBoolArrayParam","getBoolParam","getDtypeArrayParam","getDtypeParam","getNumberParam","getNumericArrayParam","getStringArrayParam","getStringParam","getTensorShapeArrayParam","getTensorShapeParam","NodeValueImpl","attrs","getInput","rawAttrs","getAttr","f","b","type","CUSTOM_OPS","opFunc","opMapper","tfOpName","customExecutor","getRegisteredOp","ops","addN","mod","mul","div","divNoNan","floorDiv","sub","minimum","maximum","pow","squaredDifference","TypeError","CATEGORY","abs","acos","acosh","asin","asinh","atan","atan2","atanh","ceil","complex","cos","cosh","elu","erf","exp","expm1","floor","log","log1p","imag","neg","reciprocal","real","relu","round","selu","sigmoid","sin","sign","sinh","softplus","sqrt","square","tanh","tan","clipByValue","relu6","rsqrt","prod","leakyRelu","prelu","isNaN","cloneTensor","_ref","thenFunc","elseFunc","cond","args","condValue","bodyFunc","condFunc","condResult","argIds","origResult","resultIds","pred","writeTensor","writeTensorArray","readId","readIndex","readTensorArray","gatherId","gatherIndices","gatherDtype","gatherTensorArray","scatterId","scatterIndices","scatterTensor","scatterTensorArray","concatId","concatTensorArray","concatDtype","splitId","splitTensor","lengths","splitTensorArray","sizeId","sizeTensorArray","closeId","closeTensorArray","elementDType","numElementsParam","srcTensorList","_x2","_x3","getPadding","fusedConvAndDepthWiseParams","extraOp","activationFunc","isBiasAdd","noBiasAdd","isPrelu","isBatchNorm","numArgs","stride","pad","dataFormat","toUpperCase","dilations","biasArg","preluArg","leakyreluAlpha","dilation","conv1d","conv2d","fused","x","strides","bias","activation","preluActivationWeights","depthwiseConv2d","conv2dTranspose","conv3d","kernelSize","avgPool","maxPool","includeBatchInIndex","indexes","maxPoolWithArgmax","avgPool3d","maxPool3d","strideHeight","strideWidth","dilationHeight","dilationWidth","dilation2d","fill","start","stop","num","linspace","logits","numSamples","seed","multinomial","depth","onValue","offValue","oneHot","ones","onesLike","randomStandardNormal","randomUniform","step","range","mean","stdDev","truncatedNormal","zerosLike","nmsParams","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","softNmsSigma","nonMaxSuppressionWithScoreAsync","selectedIndices","selectedScores","padToMaxOutputSize","nonMaxSuppressionPaddedAsync","validOutputs","nonMaxSuppressionAsync","condition","cast","whereAsync","setdiff1dAsync","_x4","sortedSequence","lowerBound","k","sorted","topk","upperBound","unique","axis","def","snapshot","tensor1d","rank","summarize","prototype","call","images","alignCorners","halfPixelCenters","resizeBilinear","resizeNearestNeighbor","boxInd","cropSize","method","extrapolationValue","cropAndResize","transforms","outputShape","fillValue","interpolation","fillMode","transform","toLowerCase","equal","notEqual","greater","greaterEqual","less","lessEqual","logicalAnd","logicalNot","logicalOr","where","matMul","einsum","transpose","transposeA","transposeB","euclideanNorm","batchNorm","localResponseNormalization","softmax","logSoftmax","sparseToDense","keepDims","sum","any","argMax","argMin","exclusive","reverse","cumprod","cumsum","bincount","binaryOutput","denseBincount","batchDims","dims","begin","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","stridedSlice","squeezedShape","squeeze","mapped","sameShape","arraysEqual","reps","tile","numOrSizeSplits","scatterND","gatherND","sparseValues","outputIndices","outputValues","emptyRowIndicator","reverseIndexMap","sparse","sparseFillEmptyRows","sparseReshape","outputData","sparseSegmentMean","sparseSegmentSum","fft","ifft","rfft","irfft","nGrams","nGramsSplits","string","stringNGrams","stringSplit","output","stringToHashBucketFast","mirrorPad","blockShape","paddings","spaceToBatchND","crops","batchToSpaceND","blockSize","depthToSpace","broadcastTo","broadcastArgs","clone","paramName","inputParam","inputParams","inputIndexStart","inputIndexEnd","toNestedArray","attrParam","contextId","getNodeNameWithContextId","outputName","parts","arr","res","explicitPadding","json","tfc","arithmetic","basicMath","control","convolution","creation","dynamic","evaluation","logical","matrices","normalization","reduction","sliceJoin","spectral","transformation","tensorflow","_instance","mappersJson","opMappers","mapper","tfNodes","placeholders","mapNode","startsWith","inputNodeNameToKey","outputNodeNameToKey","mapSignatureEntries","allNodes","inputNode","outputIndex","library","function","func","mapFunction","entries","prev","curr","attr","newNode","param","tfName","tfDeprecatedName","getFuncParam","functionDef","nodeDef","inputArg","arg","parseDtypeParam","returnNodeMap","ret","outputArg","mapArgsToSignature","methodName","mapArgToTensorInfo","nameMap","decodeBase64","text","global","atob","Buffer","toString","parseStringParam","keepCase","String","fromCharCode","parseInt","DT_FLOAT","DT_HALF","DT_INT32","DT_INT64","DT_INT8","DT_UINT8","DT_BOOL","DT_DOUBLE","DT_STRING","v","parseTensorShapeParam","unknownRank","CommonModule","IonicModule","BehaviorSubject","distinctUntilChanged","shareReplay","coco","ObjectDetectedComponent","srcImage","_srcImage","getValue","next","position","_position","img","canvas","file","srcImage$","asObservable","pipe","bufferSize","refCount","position$","ngOnInit","subscribe","base64","pictureUpload","ev","target","files","reader","FileReader","onloadend","Image","src","readAsDataURL","onload","nativeElement","color","width","height","getContext","drawImage","font","beginPath","rect","lineWidth","strokeStyle","fillStyle","stroke","fillText","toFixed","clickFileUpload","click","selectors","viewQuery","ObjectDetectedComponent_Query","rf","ctx","i0","ɵɵStandaloneFeature","decls","vars","consts","template","ObjectDetectedComponent_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","ObjectDetectedComponent_Template_input_change_8_listener","$event","ObjectDetectedComponent_Template_ion_button_click_10_listener","ɵɵtext","i1","IonButton","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59]}