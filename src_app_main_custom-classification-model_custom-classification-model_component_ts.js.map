{"version":3,"file":"src_app_main_custom-classification-model_custom-classification-model_component_ts.js","mappings":"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","sources":["./src/app/main/custom-classification-model/custom-classification-model.component.ts","./src/app/main/custom-classification-model/custom-classification-model.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, OnInit, } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { ImageUploderComponent } from '../../common/image-uploder/image-uploder.component';\nimport { FormsModule } from '@angular/forms';\nimport { BehaviorSubject, distinctUntilChanged, shareReplay } from 'rxjs';\nimport * as tf from '@tensorflow/tfjs'\ninterface Image {\n  img: HTMLImageElement,\n  fileName: string,\n  index: number,\n  rotate: string,\n  tensorImage?: tf.Tensor\n}\n\n@Component({\n  selector: 'app-custom-classification-model',\n  templateUrl: './custom-classification-model.component.html',\n  styleUrls: ['./custom-classification-model.component.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, ImageUploderComponent, FormsModule],\n})\nexport class CustomClassificationModelComponent implements OnInit {\n\n  /*\n   * Images\n   */\n  private readonly _images = new BehaviorSubject<Image[] | null>(null);\n  images$ = this._images.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * Images getter\n  */\n  get images(): Image[] | null {\n    return this._images.getValue();\n  }\n\n  /*\n   * Images setter\n   */\n  set images(value: Image[] | null) {\n    if (this._images.getValue() !== value) {\n      this._images.next(value);\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n    this._images.subscribe(img => {\n      img?.forEach(x => {\n        x.tensorImage = tf.browser.fromPixels(x.img).resizeNearestNeighbor([224, 224])\n          .expandDims()\n          .div(255.0)\n          .toFloat();\n      })\n    });\n  }\n\n\n\n  imageLoad(ev: FileList) {\n    const files = ev;\n    const imgs = [] as Image[];\n    for (let index = 0; index < files.length; index++) {\n\n      const element = files[index];\n      const img = document.createElement('img');\n      img.width = 224;\n      img.height = 224;\n      img.src = URL.createObjectURL(element);\n\n\n      let rotate = `transform:rotate(${(index * 2) + 90}deg)`\n      if ((files.length - 1) === index) {\n        \n        rotate = `transform:rotate(0deg)`\n      }\n\n      const im: Image = {\n        fileName: element.name,\n        img: img,\n        index,\n        rotate: rotate\n      }\n      imgs.push(im);\n\n    }\n    this._images.next(imgs)\n  }\n\n  trainModel() {\n    \n    const image = (this.images?.map(x => x?.tensorImage) as any) as tf.Tensor<tf.Rank>\n    if (image!==undefined) {\n\n      const model = tf.sequential();\n\n\n      model.add(tf.layers.dense({ units: 3, inputShape: [224, 224, 3] }))\n\n\n      model.add(tf.layers.conv2d({ filters: 16, kernelSize: 3, padding: 'same', activation: 'relu', }))\n      model.add(tf.layers.maxPooling2d({}))\n\n      model.add(tf.layers.conv2d({ filters: 32, kernelSize: 3, padding: 'same', activation: 'relu' }))\n      model.add(tf.layers.maxPooling2d({}))\n\n      model.add(tf.layers.conv2d({ filters: 64, kernelSize: 3, padding: 'same', activation: 'relu' }))\n      model.add(tf.layers.maxPooling2d({}))\n\n      model.add(tf.layers.dropout({ rate: 0.2 }))\n      model.add(tf.layers.flatten({}))\n\n\n      model.add(tf.layers.dense({ units: 128, activation: 'softmax' }))\n      model.add(tf.layers.dense({ units: 1 }))\n\n      model.compile({\n        optimizer: 'adam',\n        loss: tf.losses.meanSquaredError,\n        metrics: ['accuracy']\n      })\n      \n\n\n      model.summary();\n      model.fit(image, image, { epochs: 5 }).then(x => {\n        \n      })\n    }\n  }\n}\n","<div id=\"container\">\n  <div style=\" display: flex; flex-direction: column;align-items: center;\">\n    <img #img />\n    <div class=\"img-container\">\n      <img   *ngFor=\"let index = index  ; let item of images;\" [style]=\"item.rotate\" [src]=\"item.img.src\" />\n\n    </div>\n  </div>\n  <div class=\"buttons alingment\">\n    <app-image-uploder [multiple]=\"true\" (srcImageChange)=\"imageLoad($event)\"></app-image-uploder>\n    <ion-button   (click)=\"trainModel()\"> Train</ion-button>\n  </div>\n\n\n</div>\n\n{{images|json}}\n"],"names":["CommonModule","IonicModule","ImageUploderComponent","FormsModule","BehaviorSubject","distinctUntilChanged","shareReplay","tf","i0","ɵɵelement","ɵɵstyleMap","item_r3","rotate","ɵɵproperty","img","src","ɵɵsanitizeUrl","CustomClassificationModelComponent","images","_images","getValue","value","next","constructor","images$","asObservable","pipe","bufferSize","refCount","ngOnInit","subscribe","forEach","x","tensorImage","browser","fromPixels","resizeNearestNeighbor","expandDims","div","toFloat","imageLoad","ev","files","imgs","index","length","element","document","createElement","width","height","URL","createObjectURL","im","fileName","name","push","trainModel","image","map","undefined","model","sequential","add","layers","dense","units","inputShape","conv2d","filters","kernelSize","padding","activation","maxPooling2d","dropout","rate","flatten","compile","optimizer","loss","losses","meanSquaredError","metrics","summary","fit","epochs","then","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CustomClassificationModelComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","CustomClassificationModelComponent_img_5_Template","ɵɵelementEnd","ɵɵlistener","CustomClassificationModelComponent_Template_app_image_uploder_srcImageChange_7_listener","$event","CustomClassificationModelComponent_Template_ion_button_click_8_listener","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","i1","IonButton","i2","NgForOf","JsonPipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}