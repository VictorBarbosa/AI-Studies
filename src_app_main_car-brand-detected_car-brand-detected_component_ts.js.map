{"version":3,"file":"src_app_main_car-brand-detected_car-brand-detected_component_ts.js","mappings":"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","sources":["./src/app/common/model-car-detect-brand-mobile.service.ts","./src/app/common/model-car-detect-brand.service.ts","./src/app/common/model.initialize.ts","./src/app/main/car-brand-detected/car-brand-detected.component.ts","./src/app/main/car-brand-detected/car-brand-detected.component.html"],"sourcesContent":["import _ from \"lodash\";\n\nexport interface Probability {\n  name: string,\n  probability: number,\n  index: number,\n}\nexport class ClasseAndProbability {\n\n  constructor(private classNames: string[]) { }\n\n\n  /**\n   *\n    Get predicted class\n   */\n  public getPredictedClass(res: Float32Array): Probability[] {\n    if (!res || res.length === 0) {\n      const empty = [];\n      for (let i = 0; i < 5; i++) {\n        empty.push({ name: \"-\", probability: 0, index: 0 });\n      }\n      return empty;\n    }\n    const arr = Array.prototype.slice.call(res);\n\n    const output = this.softmax(arr);\n    return this.getClass(output, 5);\n  }\n\n  /**\n   * Softmax\n   */\n  private softmax(arr: number[]): any {\n    const C = Math.max(...arr);\n    const d = arr.map((y) => Math.exp(y - C)).reduce((a, b) => a + b);\n\n    const ret = arr.map((value, index) => {\n      return Math.exp(value - C) / d;\n    });\n\n    return ret;\n  }\n\n\n\n  /**\n   *  This function return Classes and probabilty\n   */\n  private getClass(classProbabilities: any, k = 10) {\n    const probs = _.isTypedArray(classProbabilities) ? Array.prototype.slice.call(classProbabilities) : classProbabilities;\n\n    const probMap = probs.map((prob: any, index: number) => [prob, index])\n\n    const sorted = _.sortBy(probMap, probIndex => probIndex[0])\n\n    const reversed = _.reverse(sorted);\n\n    const topK = _.take(reversed, k).map(probIndex => {\n      const iClass = this.classNames[probIndex[1]];\n\n      return {\n        id: iClass[0],\n        index: parseInt(probIndex[1], 10),\n        name: iClass,\n        probability: Number((probIndex[0] * 100).toFixed(2))\n        // probability: (probIndex[0] * 100)\n      };\n    });\n\n    return topK;\n  }\n}\n\n\n","import { BehaviorSubject, Observable, distinctUntilChanged, shareReplay } from \"rxjs\";\nimport * as tf from '@tensorflow/tfjs'\nimport * as _ from 'lodash';\nimport { ClasseAndProbability, Probability } from './model-car-detect-brand-mobile.service';\nimport { ModelInitialize } from \"./model.initialize\";\n \n\nexport enum ModelType {\n  FromYolo,\n  FromTensorflow\n}\n\n\nexport class ModelCarBrand extends ModelInitialize {\n\n  /*\n   * classAndProbability\n   */\n  private readonly _classAndProbability = new BehaviorSubject<ClasseAndProbability | null>(null);\n  classAndProbability$ = this._classAndProbability.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * classAndProbability getter\n  */\n  get classAndProbability(): ClasseAndProbability | null {\n    return this._classAndProbability.getValue();\n  }\n\n  /*\n   * classAndProbability setter\n   */\n  set classAndProbability(value: ClasseAndProbability | null) {\n    if (this._classAndProbability.getValue() !== value) {\n      this._classAndProbability.next(value);\n    }\n  }\n\n\n  constructor(modelCarBrandPath: string, private classes: string[], private imageShapeX: number = 224, private imageShapeY: number = 224) {\n    super(modelCarBrandPath);\n    this._classAndProbability.next(new ClasseAndProbability(classes))\n  }\n\n  public predict(img: HTMLImageElement | HTMLCanvasElement, modelType: ModelType): Observable<Array<Probability>> {\n    if (modelType === ModelType.FromTensorflow) {\n      return this.fromTensorflow(img);\n    } else {\n      return this.fromYoloConvertedToTensorflow(img);\n    }\n  }\n\n  public predictByBase64(base64: string, modelType: ModelType): Observable<Array<Probability>> {\n    if (modelType === ModelType.FromTensorflow) {\n      return this.fromTensorflowBase64(base64);\n    } else {\n      return this.fromYoloConvertedToTensorflowBase64(base64);\n    }\n  }\n\n  /**\n   * From Tensorflow Base64\n   */\n  private fromTensorflowBase64(base64: string): Observable<Array<Probability>> {\n    return new Observable(o => {\n      const model = this.model;\n      const img = new Image(this.imageShapeX, this.imageShapeY);\n      img.onload = () => {\n        let pre_image = tf.browser.fromPixels(img, 3)\n          .resizeNearestNeighbor([this.imageShapeX, this.imageShapeY])\n          .expandDims()\n          .toFloat();\n        if (model) {\n          (model.execute(pre_image) as any).data().then((predictions: Float32Array) => {\n            var res = this.classAndProbability?.getPredictedClass(predictions)\n            o.next(res);\n          });\n\n        }\n      }\n      img.src = base64;\n    });\n  }\n\n\n  /**\n   * From Tensorflow\n   */\n  private fromTensorflow(img: HTMLImageElement | HTMLCanvasElement): Observable<Array<Probability>> {\n    const model = this.model;\n    return new Observable(o => {\n      let pre_image = tf.browser.fromPixels(img, 3)\n        .resizeNearestNeighbor([this.imageShapeX, this.imageShapeY])\n        .expandDims()\n        .toFloat();\n      if (model) {\n        (model.execute(pre_image) as any).data().then((ret: Float32Array) => {\n          var res = this.classAndProbability?.getPredictedClass(ret)\n          o.next(res);\n        });\n      }\n    });\n  }\n\n  /**\n   * From Yolo converted to Tensorflow Base64\n   */\n  private fromYoloConvertedToTensorflowBase64(base64: string): Observable<Array<Probability>> {\n    return new Observable(o => {\n      const model = this.model;\n      const img = new Image(this.imageShapeX, this.imageShapeY);\n      img.onload = () => {\n        let pre_image = tf.browser.fromPixels(img, 3)\n          .resizeNearestNeighbor([this.imageShapeX, this.imageShapeY])\n          .toFloat()\n          .div(tf.scalar(255.0))\n          .expandDims()\n        if (model) {\n          (model.execute(pre_image) as any).data().then((predictions: Float32Array) => {\n            var res = this.classAndProbability?.getPredictedClass(predictions)\n            o.next(res);\n          });\n        }\n      }\n      img.src = base64;\n    });\n\n  }\n\n  /**\n   * From Yolo converted to Tensorflow\n   */\n  private fromYoloConvertedToTensorflow(img: HTMLImageElement | HTMLCanvasElement): Observable<Array<Probability>> {\n    const model = this.model;\n    return new Observable(o => {\n      let pre_image = tf.browser.fromPixels(img, 3)\n        .resizeNearestNeighbor([this.imageShapeX, this.imageShapeY])\n        .expandDims()\n        .toFloat();\n      if (model) {\n        (model.execute(pre_image) as any).data().then((ret: Float32Array) => {\n\n          var res = this.classAndProbability?.getPredictedClass(ret)\n          o.next(res);\n        });\n      }\n    });\n  }\n}\n","\nimport * as tf from '@tensorflow/tfjs'\nimport { BehaviorSubject, distinctUntilChanged, shareReplay } from 'rxjs';\nexport abstract class ModelInitialize {\n\n\n  /*\n   * Model\n   */\n  private readonly _model = new BehaviorSubject<tf.GraphModel<string | tf.io.IOHandler> | null>(null);\n  model$ = this._model.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * Model getter\n  */\n  get model(): tf.GraphModel<string | tf.io.IOHandler> | null {\n    return this._model.getValue();\n  }\n\n  /*\n   * Model setter\n   */\n  set model(value: tf.GraphModel<string | tf.io.IOHandler> | null) {\n    if (this._model.getValue() !== value) {\n      this._model.next(value);\n    }\n  }\n\n\n  /**\n   * Initialize model trained\n   * @param modelPath Path where is a model\n   */\n\n\n  constructor(modelPath: string) {\n    tf.loadGraphModel(modelPath, {\n      onProgress: (fraction: number) => {\n        console.log(fraction)\n      },\n    }).then((mod: any) => {\n      this._model.next(mod);\n    }).catch(() => {\n\n    });\n  }\n\n  /**\n   * Clear the memory\n   */\n  public dispose(): void {\n    this._model.complete();\n    this._model.unsubscribe();\n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ModelCarBrand, ModelType } from '../../common/model-car-detect-brand.service';\n\n\nimport { IonicModule, Platform } from '@ionic/angular';\nimport { BehaviorSubject, distinctUntilChanged, shareReplay, tap, catchError, EMPTY } from 'rxjs';\n\nimport { CommonModule } from '@angular/common';\nimport { CarDirection, CarsBrands } from '../../common/common';\n\nexport interface Probability {\n  name: string,\n  probability: number,\n  index: number,\n}\n@Component({\n  selector: 'app-car-brand-detected',\n  templateUrl: './car-brand-detected.component.html',\n  styleUrls: ['./car-brand-detected.component.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n  providers: []\n})\nexport class CarBrandDetectedComponent implements OnInit {\n  public folder!: string;\n  ret = [] as any;\n\n\n  /*\n   * modelPredictCarDirection\n   */\n  private readonly _modelPredictCarDirection = new BehaviorSubject<ModelCarBrand | null>(null);\n  modelPredictCarDirection$ = this._modelPredictCarDirection.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * modelPredictCarDirection getter\n  */\n  get modelPredictCarDirection(): ModelCarBrand | null {\n    return this._modelPredictCarDirection.getValue();\n  }\n\n  /*\n   * modelPredictCarDirection setter\n   */\n  set modelPredictCarDirection(value: ModelCarBrand | null) {\n    if (this._modelPredictCarDirection.getValue() !== value) {\n      this._modelPredictCarDirection.next(value);\n    }\n  }\n\n\n  /*\n   * ModelPredictCarBrand\n   */\n  private readonly _modelPredictCarBrand = new BehaviorSubject<ModelCarBrand | null>(null);\n  modelPredictCarBrand$ = this._modelPredictCarBrand.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * ModelPredictCarBrand getter\n  */\n  get modelPredictCarBrand(): ModelCarBrand | null {\n    return this._modelPredictCarBrand.getValue();\n  }\n\n  /*\n   * ModelPredictCarBrand setter\n   */\n  set modelPredictCarBrand(value: ModelCarBrand | null) {\n    if (this._modelPredictCarBrand.getValue() !== value) {\n      this._modelPredictCarBrand.next(value);\n    }\n  }\n\n  /**\n   * img\n   */\n  @ViewChild('img', { static: true }) img: ElementRef<HTMLImageElement> | null = null;\n\n  /**\n   * video\n   */\n  @ViewChild('file', { static: true }) file: ElementRef<HTMLInputElement> | null = null;\n\n  /*\n   * SrcImage\n   */\n  private readonly _srcImage = new BehaviorSubject<string>('');\n  srcImage$ = this._srcImage.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * SrcImage getter\n  */\n  get srcImage(): string {\n    return this._srcImage.getValue();\n  }\n\n  /*\n   * SrcImage setter\n   */\n  set srcImage(value: string) {\n    if (this._srcImage.getValue() !== value) {\n      this._srcImage.next(value);\n    }\n  }\n\n\n  /*\n   * Brand\n   */\n  private readonly _brand = new BehaviorSubject<string>('');\n  brand$ = this._brand.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * Brand getter\n  */\n  get brand(): string {\n    return this._brand.getValue();\n  }\n\n  /*\n   * Brand setter\n   */\n  set brand(value: string) {\n    if (this._brand.getValue() !== value) {\n      this._brand.next(value);\n    }\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(private plataform: Platform) {\n    this._modelPredictCarDirection.next(new ModelCarBrand('assets/car_position/model.json', CarDirection))\n    this._modelPredictCarBrand.next(new ModelCarBrand('assets/carBrand/model.json', CarsBrands))\n\n\n  }\n\n  /**\n   * On Init\n   */\n  ngOnInit() {\n    this._srcImage.pipe(tap(img => {\n      this.img?.nativeElement.setAttribute('src', img);\n      if (this.modelPredictCarDirection && this.modelPredictCarBrand) {\n        this.predictSideCar(img);\n      }\n    })\n    ).subscribe();\n\n  }\n\n  /**\n   * predictSideCar\n   */\n  private predictSideCar(img64: string) {\n    if (this.modelPredictCarBrand) {\n      this.modelPredictCarDirection?.predictByBase64(img64, ModelType.FromYolo).pipe(\n        tap((retDir: Probability[]) => {\n          if (retDir[0].name === \"Front\" && this.modelPredictCarBrand) {\n            this.predictCarBrand(img64);\n          } else {\n            if (retDir[0].name !== 'Could not identify as a car') {\n              this._brand.next(`The car is on \"${retDir[0].name}\" and must be Front`);\n            } else {\n              this._brand.next(retDir[0].name);\n            }\n          }\n        }),\n        catchError((err) => {\n          return EMPTY\n        })\n      ).subscribe();\n    }\n  }\n\n\n  /**\n   * predictCarBrand\n   */\n  private predictCarBrand(img64: string) {\n    if (this.modelPredictCarBrand) {\n\n      this.modelPredictCarBrand.predictByBase64(img64, ModelType.FromYolo).pipe(\n        tap((retBrand: Probability[]) => {\n          this._brand.next(retBrand[0].name);\n        }))\n        .subscribe()\n    }\n  }\n\n  /**\n   * Predict image\n   */\n  predictImage() {\n    if (this.img?.nativeElement) {\n      this.modelPredictCarDirection?.predict(this.img?.nativeElement, ModelType.FromYolo)\n        .subscribe(x => {\n          this.ret = (x) as any;\n        })\n    }\n  }\n\n\n  /**\n   * File upload\n   */\n  fileUpload(ev: any) {\n    const file = ev.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = (e: any) => {\n      let image = new Image();\n      image.src = e.target.result;\n      this._srcImage.next(e.target.result);\n    }\n    reader.readAsDataURL(file);\n  }\n\n  /**\n   * clickFileUpload\n   */\n  clickFileUpload() {\n    this.file?.nativeElement.click();\n  }\n\n\n  /**\n   * Dispose\n   */\n  ngOnDestroy(): void {\n    this._modelPredictCarDirection.complete()\n    this._modelPredictCarDirection.unsubscribe()\n    this._modelPredictCarBrand.complete()\n    this._modelPredictCarBrand.unsubscribe()\n    this._srcImage.complete()\n    this._srcImage.unsubscribe()\n    this._brand.complete()\n    this._brand.unsubscribe()\n  }\n}\n\n\n","<div id=\"container\">\n  <div style=\" display: flex; flex-direction: column;align-items: center;margin-top:50px\">\n    <img #img />\n    <div>\n      ** {{brand}} **\n    </div>\n\n  </div>\n  <div>\n    <!-- {{(this.modelPredictCarBrand?.model)|json}} -->\n    <input hidden accept=\".jpg,.jpeg\" type=\"file\" #file (change)=\"fileUpload($event)\" />\n    <div class=\"buttons\">\n      <ion-button (click)=\"clickFileUpload()\">Upload Car Picture </ion-button>\n    </div>\n\n  </div>\n\n</div>\n"],"names":["_","ClasseAndProbability","constructor","classNames","getPredictedClass","res","length","empty","i","push","name","probability","index","arr","Array","prototype","slice","call","output","softmax","getClass","C","Math","max","d","map","y","exp","reduce","a","b","ret","value","classProbabilities","k","probs","isTypedArray","probMap","prob","sorted","sortBy","probIndex","reversed","reverse","topK","take","iClass","id","parseInt","Number","toFixed","BehaviorSubject","Observable","distinctUntilChanged","shareReplay","tf","ModelInitialize","ModelType","ModelCarBrand","classAndProbability","_classAndProbability","getValue","next","modelCarBrandPath","classes","imageShapeX","imageShapeY","classAndProbability$","asObservable","pipe","bufferSize","refCount","predict","img","modelType","FromTensorflow","fromTensorflow","fromYoloConvertedToTensorflow","predictByBase64","base64","fromTensorflowBase64","fromYoloConvertedToTensorflowBase64","o","model","Image","onload","pre_image","browser","fromPixels","resizeNearestNeighbor","expandDims","toFloat","execute","data","then","predictions","src","div","scalar","_model","modelPath","model$","loadGraphModel","onProgress","fraction","console","log","mod","catch","dispose","complete","unsubscribe","IonicModule","tap","catchError","EMPTY","CommonModule","CarDirection","CarsBrands","CarBrandDetectedComponent","modelPredictCarDirection","_modelPredictCarDirection","modelPredictCarBrand","_modelPredictCarBrand","srcImage","_srcImage","brand","_brand","plataform","modelPredictCarDirection$","modelPredictCarBrand$","file","srcImage$","brand$","ngOnInit","nativeElement","setAttribute","predictSideCar","subscribe","img64","FromYolo","retDir","predictCarBrand","err","retBrand","predictImage","x","fileUpload","ev","target","files","reader","FileReader","onloadend","e","image","result","readAsDataURL","clickFileUpload","click","ngOnDestroy","i0","ɵɵdirectiveInject","i1","Platform","selectors","viewQuery","CarBrandDetectedComponent_Query","rf","ctx","ɵɵStandaloneFeature","decls","vars","consts","template","CarBrandDetectedComponent_Template","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CarBrandDetectedComponent_Template_input_change_7_listener","$event","CarBrandDetectedComponent_Template_ion_button_click_10_listener","ɵɵadvance","ɵɵtextInterpolate1","IonButton","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}