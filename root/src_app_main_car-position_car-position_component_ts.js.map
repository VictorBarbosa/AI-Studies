{"version":3,"file":"src_app_main_car-position_car-position_component_ts.js","mappings":"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","sources":["./src/app/Services/car-position.service.ts","./src/app/main/car-position/car-position.component.ts","./src/app/main/car-position/car-position.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as tf from '@tensorflow/tfjs'\nimport { BehaviorSubject, Observable, distinctUntilChanged, shareReplay } from 'rxjs';\nimport { CarDirection, getClass, softmax } from '../common/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarPositionService {\n\n  /*\n   * Model\n   */\n  private readonly _model = new BehaviorSubject<tf.GraphModel<string | tf.io.IOHandler> | null>(null);\n  model$ = this._model.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * Model getter\n  */\n  get model(): tf.GraphModel<string | tf.io.IOHandler> | null {\n    return this._model.getValue();\n  }\n\n  /*\n   * Model setter\n   */\n  set model(value: tf.GraphModel<string | tf.io.IOHandler> | null) {\n    if (this._model.getValue() !== value) {\n      this._model.next(value);\n    }\n  }\n\n\n  /**\n   *\n   */\n  constructor() {\n    tf.loadGraphModel('assets/car_position/model.json').then(model => {\n      this._model.next(model);\n    });\n  }\n\n  predict(img: HTMLImageElement | HTMLCanvasElement, imageShapeX: number = 224, imageShapeY: number = 224) {\n    const model = this.model;\n    return new Observable(o => {\n      let pre_image = tf.browser.fromPixels(img, 3)\n      .resizeNearestNeighbor([imageShapeX, imageShapeY])\n\n      .toFloat()\n      .div(tf.scalar(255.0))\n      .expandDims()\n      if (model) {\n        (model.execute(pre_image) as any).data().then((predictions: Float32Array) => {\n\n          var res = this.getPredictedClass(predictions)\n          o.next(res);\n        });\n      }\n    });\n  }\n\n  /**\n\n */\n  predictBase64(base64: string, imageShapeX: number = 224, imageShapeY: number = 224): Observable<Array<any>> {\n    return new Observable(o => {\n      const model = this.model;\n      const img = new Image(imageShapeX, imageShapeY);\n      img.onload = () => {\n        let pre_image = tf.browser.fromPixels(img, 3)\n          .resizeNearestNeighbor([imageShapeX, imageShapeY])\n          .toFloat()\n          .div(tf.scalar(255.0))\n          .expandDims()\n        if (model) {\n          (model.execute(pre_image) as any).data().then((predictions: Float32Array) => {\n            \n            let rss = tf.softmax(predictions).dataSync()\n            var res = this.getPredictedClass(predictions)\n            o.next(res);\n          });\n\n        }\n      }\n      img.src = base64;\n    });\n  }\n\n\n  /**\n *\n  Get predicted class\n */\n  public getPredictedClass(res: Float32Array): any {\n    if (!res || res.length === 0) {\n      const empty = [];\n      for (let i = 0; i < 5; i++) {\n        empty.push({ name: \"-\", probability: 0, index: 0 });\n      }\n      return empty;\n    }\n    const arr = Array.prototype.slice.call(res);\n\n    const output = softmax(arr);\n    // const output =  tf.softmax(res).dataSync();\n    return getClass(arr, 5, CarDirection);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CarPositionService } from '../../Services/car-position.service';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { BehaviorSubject, distinctUntilChanged, shareReplay, tap } from 'rxjs';\n\n\n@Component({\n  selector: 'app-car-position',\n  templateUrl: './car-position.component.html',\n  styleUrls: ['./car-position.component.scss'],\n  standalone: true,\n  providers: [CarPositionService],\n  imports: [IonicModule, CommonModule],\n})\nexport class CarPositionComponent  implements OnInit {\n\n\n  /**\n   * img\n   */\n  @ViewChild('img', { static: true }) img: ElementRef<HTMLImageElement> | null = null;\n\n  /**\n   * video\n   */\n  @ViewChild('file', { static: true }) file: ElementRef<HTMLInputElement> | null = null;\n\n\n  /*\n   * SrcImage\n   */\n  private readonly _srcImage = new BehaviorSubject<string>('');\n  srcImage$ = this._srcImage.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * SrcImage getter\n  */\n  get srcImage(): string {\n    return this._srcImage.getValue();\n  }\n\n  /*\n   * SrcImage setter\n   */\n  set srcImage(value: string) {\n    if (this._srcImage.getValue() !== value) {\n      this._srcImage.next(value);\n    }\n  }\n\n  /*\n   * Position\n   */\n  private readonly _position = new BehaviorSubject<any | null>(null);\n  position$ = this._position.asObservable().pipe(distinctUntilChanged(), shareReplay({ bufferSize: 1, refCount: true }));\n\n  /*\n  * Position getter\n  */\n  get position(): any | null {\n    return this._position.getValue();\n  }\n\n  /*\n   * Position setter\n   */\n  set position(value: any | null) {\n    if (this._position.getValue() !== value) {\n      this._position.next(value);\n    }\n  }\n\n  constructor(private carPosition: CarPositionService ) {\n\n  }\n\n  ngOnInit() {\n    this._srcImage.pipe(tap(img => {\n      this.img?.nativeElement.setAttribute('src', img);\n      this.carPosition.predictBase64(img).pipe(tap(ret => {\n        this._position.next(ret);\n      }))\n        .subscribe();\n    })\n    ).subscribe();\n  }\n\n  pictureUpload(ev: any) {\n    const file = ev.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = (e: any) => {\n      let image = new Image();\n      image.src = e.target.result;\n      this._srcImage.next(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  }\n\n  /**\n * clickFileUpload\n */\n  clickFileUpload() {\n    this.file?.nativeElement.click();\n  }\n}\n","<div id=\"container\">\n  <div style=\" display: flex; flex-direction: column;align-items: center;\">\n    <img    #img />\n    <div>\n      <table>\n        <tr *ngFor=\"let item of position\">\n          <td> {{item.name}}</td>\n          <td> {{item.probability}}</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n  <div class=\"buttons\">\n      <input hidden accept=\".jpg,.jpeg\" type=\"file\" #file (change)=\"pictureUpload($event)\" />\n      <ion-button (click)=\"clickFileUpload()\">Upload Car Picture </ion-button>\n    </div>\n\n\n</div>\n"],"names":["tf","BehaviorSubject","Observable","distinctUntilChanged","shareReplay","CarDirection","getClass","softmax","CarPositionService","model","_model","getValue","value","next","constructor","model$","asObservable","pipe","bufferSize","refCount","loadGraphModel","then","predict","img","imageShapeX","imageShapeY","o","pre_image","browser","fromPixels","resizeNearestNeighbor","toFloat","div","scalar","expandDims","execute","data","predictions","res","getPredictedClass","predictBase64","base64","Image","onload","rss","dataSync","src","length","empty","i","push","name","probability","index","arr","Array","prototype","slice","call","output","factory","ɵfac","providedIn","CommonModule","IonicModule","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","item_r3","CarPositionComponent","srcImage","_srcImage","position","_position","carPosition","file","srcImage$","position$","ngOnInit","nativeElement","setAttribute","ret","subscribe","pictureUpload","ev","target","files","reader","FileReader","onloadend","e","image","result","readAsDataURL","clickFileUpload","click","ɵɵdirectiveInject","i1","selectors","viewQuery","CarPositionComponent_Query","rf","ctx","ɵɵStandaloneFeature","decls","vars","consts","template","CarPositionComponent_Template","ɵɵelement","ɵɵtemplate","CarPositionComponent_tr_6_Template","ɵɵlistener","CarPositionComponent_Template_input_change_8_listener","$event","CarPositionComponent_Template_ion_button_click_10_listener","ɵɵproperty","i2","IonButton","i3","NgForOf","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}